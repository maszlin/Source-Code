<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intergraph.GTechnology</name>
    </assembly>
    <members>
        <member name="T:Intergraph.GTechnology.API.SchematicsException">
            <summary>
            Represents the exception that is thrown when errors are generated using GTech.Schematics components.
            </summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.SchematicsException.#ctor">
            <summary>
            Initializes a new instance of the SchematicsException class. This is the default constructor.
            </summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.SchematicsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SchematicsException class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.SchematicsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SchematicsException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.SchematicsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SchematicsException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSchematicDataInstance">
            <summary>
            Intergraph G/Technology IGTSchematicDataInstance API.
            </summary>
            <remarks>
            A IGTSchematicDataInstance object represents a single component view instance, that is, one record from the component view. An object type is used, rather than a recordset, because the IGTSchematicDataInstance object provides access to the Geometry object, and ADO recordset fields cannot hold objects. 
            </remarks>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTSchematicDataInstance.PopulateAttributes">
            <summary>
            Occurs when the Attributes collection property is accessed for the first time.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicDataInstance.Attributes">
            <summary>
            Gets the collection of attributes of a data instance.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicDataInstance.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
            <remarks>The actual type of the object will be one of the geometry types supported by G/Technology, such as 
            IGTOrientedPointGeometry, IGTPolylineGeometry, or IGTCompositePolylineGeometry. Regardless of which kind of 
            geometry, the returned object will have a Type property to indicate the kind of geometry returned.
            <para/>If there is no geometry in the component view, the value of this field will be Null. If you set 
            the value of this property to Null, then the geometry of this instance will not be used in generating the schematic.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicDataInstance.Index">
            <summary>
            Gets the zero-based index of an attribute within a IGTSchematicAttributes collection.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPlotFrame">
            <summary>Intergraph G/Technology IGTPlotFrame API.</summary>
            <remarks>
            A IGTPlotFrame object represents an object or a plot map frame embedded on the plot sheet. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotFrame.Activate">
            <summary>Method to activate the embedded object or map corresponding to this frame.</summary>
            <remarks>If the frame represents an embedded object, this may enable in-place editing of the 
            object; or it may open the object in another window, depending on the type of the embedded 
            object and the capabilities of the application used to edit it.
            <para/>If the frame represents a map, then the map is activated in place and you can use G/Technology 
            map-navigation commands such as Pan, Zoom In, and NWArrow on the activated map.
            <para/>
            Activate can be called on a plot frame only if its containing IGTNamedPlot is currently displayed in a 
            plot window; otherwise, Activate raises an exception. The object or map is activated in that window.
            <para/>If another frame is already active, Activate first deactivates the other frame before activating 
            this one.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotFrame.Deactivate">
            <summary>Method to deactivate the embedded object or map corresponding to this frame.</summary>
            <remarks>If the specified frame is not active, an exception is raised. Once deactivated, the object 
            or map cannot be edited until it is once again activated, although it can still be modified programmatically.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrame.BorderRedline">
            <summary>Property to return the IGTPlotRedline object that represents the border of this frame.</summary>
            <remarks>The geometry of the frame is controlled by IGTPlotFrame.Range; accessing the Geometry property of a 
            IGTPlotRedline object corresponding to a IGTPlotFrame will raise an error.
            <para/>
            After modifying this property, you must call the IGTApplication's RefreshWindows method to make sure the frame 
            is redrawn properly.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrame.ClipGeometry">
            <summary>Property to return/set the clipping polygon associated with a plot frame.</summary>
            <remarks>Setting this property to a geometry object automatically sets the IsClipped property to True. Setting this property to Nothing automatically sets IsClipped to False.
            <para/>
            If this property is set to a geometry type that is not supported, an error is raised and the property is not set.
            <para/>
            Although G/Technology does not currently support composite geometries for clipping polygons, write your code to handle IGTCompositePolygonGeometry as well as IGTPolygonGeometry.
            <para/>
            After modifying this property, you must call the IGTApplication's RefreshWindows method to make sure the frame is redrawn properly.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrame.EmbeddedObject">
            <summary>Property to return the IDispatch pointer to the embedded object.</summary>
            <remarks>You can use this property to access the embedded object's own automation interfaces. This 
            property can be accessed only if the embedded object's server application is running; otherwise, this 
            property raises an exception.
            <para/>
            If you insert the object using a ProgID, the server will probably already be running. Inserting an 
            object from a file, however, typically does not start the object's server. To ensure that the object's 
            server is running, Activate the object.
            <para/>
            This property raises an error if the given IGTPlotFrame.Type property is not gtpftObject.
            <para/>If you modify the embedded object, you must call the IGTApplication's RefreshWindows method to make 
            sure the object is redrawn properly.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrame.FieldsQuery">
            <summary>Property to return/set an SQL string used in processing automatic fields.</summary>
            <remarks>Only the first row of results returned by this query is used in processing automatic fields.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrame.IsClipped">
            <summary>Property to return/set whether a plot frame is clipped by a polygon.</summary>
            <remarks>Setting the ClipGeometry property to a valid object sets the IsClipped property to 
            True, but setting IsClipped to False does not affect the ClipGeometry property. It is an error 
            to set IsClipped to True if ClipGeometry is Nothing.
            <para/>
            Setting IsClipped to False when ClipGeometry is a valid geometry makes the actual frame geometry 
            the active geometry for the frame, so that the entire map frame or embedded object is visible. Setting 
            IsClipped back to True in that case then makes the clipping boundary active again.
            <para/>
            After modifying this property, you must call the IGTApplication's RefreshWindows method to make sure the 
            frame is redrawn properly.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrame.Locked">
            <summary>Property to return/set a flag that, when True, prevents edit operations on the frame.</summary>
            <remarks>A locked frame cannot be activated, resized, moved, or deleted by built-in G/Technology commands. However, 
            a locked frame can be modified with custom plotting API.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrame.Name">
            <summary>Property to return/set the name of this plot frame.</summary>
            <remarks>Frame names must be unique within a given plot. The name of an object 
            frame has no significance to any built-in commands, but custom software may want 
            to use it for some purpose.
            <para/>The name of a map frame is used in automatic field definitions and in NetPlot 
            to specify properties of the map in a remote plot request.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrame.PlotMap">
            <summary>Property to return the IGTPlotMap object corresponding to this frame.</summary>
            <remarks>This property raises an error if the given IGTPlotFrame object's Type property is not gtpftMap.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrame.Range">
            <summary>Property to return/set the range of this plot frame.</summary>
            <remarks>The Range property specifies, in paper units, the coordinates of 
            the top-left and bottom-right corners of this frame. This range corresponds to 
            the extents of the underlying OLE object and is not affected by any clipping 
            polygon that may be applied.
            <para/>
            The value returned by this property is a copy of the range of the frame. Modifying 
            the returned object will have no effect on the frame unless you set the Range property 
            with the modified object. Furthermore, setting the Range property copies the range values 
            from the specified IGTPaperRange object. Therefore, you can freely modify the IGTPaperRange 
            object after using it to set this Range property without subsequently affecting the frame.
            <para/>
            After modifying this property, you must call the IGTApplication's RefreshWindows method to make 
            sure the frame is redrawn properly.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrame.Type">
            <summary>Property to return the type of this plot frame.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTMetadata">
            <summary>Intergraph G/Technology IGTMetadata API.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMetadata.GetMetadataRecordset(System.String)">
            <summary>Method to return a metadata recordset given an OPTABLE name.</summary>
            <param name="OptimizedTableName">Name of the optimized table.</param>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTLineGeometry">
            <summary>Intergraph G/Technology IGTLineGeometry API.</summary>
            <remarks>
            The IGTLineGeometry object has two properties that are IGTPoint objects that represent the start point and the end point of the IGTLineGeometry object. The coordinates for the start and end points can be returned or modified through the X, Y, and Z properties of the IGTPoint objects. 
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTGeometry">
            <summary>Intergraph G/Technology IGTGeometry API.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.ExtractGeometry(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,System.Boolean)">
            <summary>
            The ExtractGeometry function creates a new geometry object by extracting parts of an existing geometry between two
            specified points. This function will enable a user to create a new geometry object by extracting parts of an existing
            geometry between two specified points. This function is intended to be used in commands to digitize using existing
            geometry.
            </summary>
            <remarks>
            Uses positional tolerance.
            <para/>
            The start and end points must be on the input geometry. A tolerance is used to determine whether the end and start
            points are on the geometry. If the distance is greater than the tolerance, an exception is thrown. It is intended that
            this function be used in conjunction with GTSnapService to ensure that the start and end points are on the input
            geometry.
            <para/>
            The start and end points must be distinct.
            </remarks>
            <param name="start_point">
            The point from which extraction begins. This point must lie on the input geometry.
            </param>
            <param name="end_point">
             The point where extraction ends. This point must lie on the input geometry. 
            </param>
            <param name="reverse_points">
            Used to indicate if the points extracted from the start point to the end point should be returned in a
            descending order in the point list.  If this parameter is true, the resulting geometry will be
            digitized in the reverse order of the original geometry.
            </param>
            <returns>IGTGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.GetKeypointType(System.Int32)">
            <summary>
            The GetKeypointType function returns the keypoint type, such as gtkptEndPoint, of a specific keypoint defined
            by this geometry object. 
            </summary>
            <param name="index">The keypoint index, which must be between 0 and 1 less than the number of
            keypoints defined by the geometry.  The KeypointCount property returns the number of keypoints.</param>
            <returns>The type of keypoint.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.GetKeypointPosition(System.Int32)">
            <summary>
            The GetKeypointPosition function returns the position as a IGTPoint object of a specific keypoint defined by
            this geometry. 
            </summary>
            <param name="index">The keypoint index, which must be between 0 and 1 less than the number of
            keypoints defined by the geometry.  The KeypointCount property returns the number of keypoints.</param>
            <returns>The coordinates of the keypoint.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.Stroke">
            <summary>
            The StrokeGeometry function returns a stroked geometry using the input geometry.
            </summary>
            <returns>IGTGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.Copy">
            <summary>
            Returns a copy of this geometry.
            </summary>
            <returns>IGTGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.Move(Intergraph.GTechnology.API.IGTVector)">
            <summary>
            The Move method moves this geometry object by an amount (delta) defined by a IGTVector object.
            </summary>
            <remarks>
            Note that the geometry object is modified by this method.
            </remarks>
            <param name="delta">A IGTVector object defining the distance to move.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.Add(Intergraph.GTechnology.API.IGTGeometry,Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Adding a vector to a geometry yields a new geometry that is moved by the delta
            specified by the vector.
            </summary>
            <param name="geometry">A IGTGeometry object</param>
            <param name="delta">A IGTVector object defining the distance to move.</param>
            <returns>Geometry object</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.Transform(Intergraph.GTechnology.API.IGTMatrix)">
            <summary>
            Transforms the given geometry using a 4x4 IGTMatrix object.
            <seealso cref="T:Intergraph.GTechnology.API.IGTMatrix"/>.
            </summary>
            <param name="xform">A IGTMatrix object defining the transformation.</param>
            <remarks>
            Note that the geometry object is modified by this method.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.Multiply(Intergraph.GTechnology.API.IGTGeometry,Intergraph.GTechnology.API.IGTMatrix)">
            <summary>
            Multiplying a geometry by a matrix returns a new geometry that is transformed by the matrix.
            </summary>
            <param name="geometry">The geometry object to be transformed.</param>
            <param name="xform">A IGTMatrix object defining the transformation.</param>
            <returns>Geometry object</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.BreakLinear(Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            The BreakLinear method creates two geometry objects by breaking an existing linear geometry object at a specified break
            point. This function is intended to be used in commands to allow the breaking of existing linework during digitizing so
            that clean linework, such as nodes at intersections, can be maintained.
            </summary>
            <remarks>
            Uses PositionalTolerance.
            <para/>
            The break point must be on the input geometry. A tolerance is used to determine whether the point is on the geometry. If
            the distance is greater than the tolerance, an exception is thrown. It is intended that this function be used in
            conjunction with SmartSketch to ensure that the break point is snapped to the input geometry.
            <para/>
            This method returns an array of one or two geometries.  If the break point is on the start point of the input geometry,
            then one geometry is returned, consisting of the entire input geometry.  Likewise, if the break point is on the end
            point of the input geometry, then one geometry is returned, consisting of the entire input geometry.
            </remarks>
            <param name="breakpoint">The point where the break is to occur. This point must lie on the input geometry.</param>
            <returns>An array of geometries.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.BreakPolygon(Intergraph.GTechnology.API.IGTGeometry)">
            <summary>
            The BreakPolygon method creates two polygon geometry objects by breaking an existing polygon geometry object using a
            specified linear geometry. This function is intended to be used in commands to allow the splitting of simple polygonal
            areas with a linear geometry -- for example, the splitting of parcel features.
            </summary>
            <remarks>
            Uses positional tolerance.
            <para/>
            The break points must be on the input geometry. A tolerance is used to determine whether the points are on the geometry.
            If the distance is greater than the tolerance, an exception is thrown. It is intended that this function be used in
            conjunction with SnapService to ensure that the break points are snapped to the input geometry.
            </remarks>
            <param name="linear_geometry">The geometry that splits the polygon geometry. The types of linear geometries allowed are line, polyline, and composite polyline. The 
            start point in the linear geometry is assumed to be the first break point and the end point of the linear geometry is assumed to be the second break point. The endpoints 
            of the linear geometry must lie on the polygon geometry.</param>
            <returns>An array of geometries.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.TrimTo(Intergraph.GTechnology.API.IGTGeometryCollection,Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            The TrimTo method trims the input polyline to one of the crossing_geometries based on the input_point. The polyline is
            trimmed on the side that has its endpoint closest to the input_point.
            <para/>
            The point to which to trim is defined by one of the geometries in the CrossingGeometry collection. The portion of the
            polyline to trim is defined by a point created by the geometry crossing the closest to the endpoint to trim.
            <para/>
            If the input geometry is trimmed, this method returns an array of two geometries.  The first element of the array is the
            input geometry minus the trimmed portion.  The second element is the portion of the input geometry that was trimmed.  If
            no trimming is performed, this method returns null.
            </summary>
            <remarks>
            If the input_point falls on the input geometry between two crossing geometries, nothing will be trimmed and the function
            will return False.
            </remarks>
            <param name="crossing_geometries">Collection of geometries possibly crossing the Input Geometry. Must be a GeometryCollection containing at least one item.</param>
            <param name="input_point">Point defining which side of the InputGeomety to trim. </param>
            <returns>An array of geometries.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.ExtendTo(Intergraph.GTechnology.API.IGTGeometryCollection,Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            The ExtendTo function extends the input polyline to one of the target geometries. The extension is oriented at the angle
            of the segment from which the extension is added.  If an extension is made, this function returns an array of two
            elements.  The first element is the extended geometry, while the second element is the extension that was added (a
            two-point polyline).
            </summary>
            <remarks>
            The geometry must be a polyline.
            <para/>
            The target_geometries must be a IGTGeometryCollection containing at least one item.
            </remarks>
            <param name="input_point">IGTPoint defining which side of the InputGeomety to extend.</param>
            <param name="target_geometries">Geometry collection to which to possibly extend.</param>
            <returns>An array of geometries.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.CreateOffsetGeometries(System.Double)">
            <summary>
            Creates parallel geometries to the right and left of the input geometry that are offset by a given distance. Right and
            left are defined by the direction of the points of the input geometry.
            </summary>
            <remarks>
            If offset geometries can be created, then an array of 2 elements is returned.  The left geometry is the first element
            (index 0) and the right geometry is the second element (index 1).  If no offset geometries can be created, the function
            returns null.
            <para/>
            The input geometry must be a polyline, composite polyline, polygon, or composite polygon.
            <para/>
            The returned geometries may not be the same type of geometry as the input geometry. It is possible that the input of a
            simple polyline could produce a composite polyline output, or that the input of a composite polyline could produce a
            simple polyline output. The same is true for polygons.
            <para/>
            If the input geometry is complex enough (has self-intersections, near self-intersections, or multiple sharp angles),
            then the output can be a GeometryCollection.
            </remarks>
            <param name="offset_distance">Distance from the input geometry at which to create the new geometry.</param>
            <returns>An array of geometries.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometry.CopyGeometryParallel(Intergraph.GTechnology.API.IGTPoint,System.Double)">
            <summary>
            Creates parallel geometry to the right or the left of the input geometry, given an offset distance. The input point
            defines the side to which to copy parallel.  If no offset geometry can be created, the function returns null.
            </summary>
            <remarks>
            The InputGeometry must be either a polygon, composite polygon, polyline, composite polyline, or an arc.
            </remarks>
            <param name="input_point">Point defining which side of the geometry to create the parallel geometry.</param>
            <param name="offset_distance">Distance from the input geometry at which to create the new geometry.</param>
            <returns>IGTGeometry</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometry.Type">
            <summary>
            The Type property returns a string indicating the type of geometry.
            The strings returned by this property are enumerated in the GTGeometryTypeConstants
            class.
            For example, IGTArcGeometry.Type returns "ArcGeometry".
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometry.Range">
            <summary>
            Returns the geometric range of a geometry object.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometry.KeypointCount">
            <summary>
            Returns the number of keypoints defined by the given geometry object.  Keypoints are vertices or
            significant points on a geometry that define it's shape.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometry.FirstPoint">
            <summary>
            Returns the first point of the geometry.  Typically, this would be the first point that is drawn when
            the geometry is displayed.  It is generally also the same as keypoint zero.
            For geometries consisting of a single point (e.g., IGTOrientedPointGeometry), FirstPoint returns that point.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometry.LastPoint">
            <summary>
            Returns the last point of the geometry.  Typically, this would be the last point that is drawn when
            the geometry is displayed.  It is generally also equivalent to the last keypoint.
            An exception to this rule is a boundary geometry; in that case, this is
            the last point of the exterior.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTLineGeometry.Start">
            <summary>
            Returns or sets the starting point of the line.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTLineGeometry.End">
            <summary>
            Returns or sets the ending point of the line.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTKeyObjects">
            <summary>Intergraph G/Technology IGTKeyObjects API.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTCollectionBase">
            <summary>
            Intergraph G/Technology IGTCollectionBase API.
            </summary>
            <remarks>
            Intergraph GTechnology collection objects like IGTKeyObjects, IGTDDCKeyObjects etc derive from IGTCollectionBase.
            For internal use only.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTKeyObjects.Add(Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method to add a IGTKeyObject to the collection.</summary>
            <param name="KeyObject">Object to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when KeyObject is Null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTKeyObjects.Clear">
            <summary>Method to clear all the items from the collection.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTKeyObjects.Remove(Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method to remove a IGTKeyObject from the collection.</summary>
            <param name="KeyObject">Object to remove from the collection.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when KeyObject is Null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTKeyObjects.RemoveAt(System.Int32)">
            <summary>Method to remove a IGTKeyObject from the collection.</summary>
            <param name="index">The zero-based numeric index of the IGTKeyObject.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTKeyObjects.Item(System.Int32)">
            <summary>Property to return a specific IGTKeyObject in the collection.</summary>
            <param name="index">Must be a numeric index.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTKeyObjects.Count">
            <summary>Property to return a number of items in the collection.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTKeyObjects.Capacity">
            <summary>Gets or sets the number of elements that IGTKeyObjects can contain.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTCUService">
            <summary>Intergraph G/Technology IGTCUService API.</summary>
            <remarks>The IGTCUService object allows compatible units (CUs) to be filtered, selected, and processed for a given feature</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Description(System.String)">
            <summary>Method to return the description of a given CU. This definition comes from the work 
            management system tables where the CU data is stored.</summary>
            <param name="CUIdentifier">String representing a normal CU or a macro CU.</param>
            <remarks>If the CUIdentifier is not found, an error will be raised to the calling routine.</remarks>
            <returns>The description of a given CU.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Selection(System.Boolean)">
            <summary>Method to interactively execute CU Selection.</summary>
            <param name="Primary">Specifies if the CUs being added are primary or ancillary CUs. For primary CUs to be 
            displayed, the Primary parameter for this method should be passed as True or -1. For ancillary CUs, this 
            parameter should be passed as False or 0.</param>
            <remarks>Default values 1, string.Empty and string.Empty are used for Occurrence, Keyword and Value.
            <para/>
            If multiple features are defined inside the IGTKeyObjects collection, then the <b>CU Selection</b> dialog box will be 
            displayed once for each feature being processed. In this case, the feature name and feature ID will be displayed 
            on the dialog box as it is displayed to the user.
            <para/>
            This method returns a status that indicates whether the user dismissed the CU <b>Selection</b> dialog box by clicking <b>OK</b> 
            or by clicking <b>Cancel</b>. A value of 1 means the user clicked <b>OK</b>; a value of 2 means the user clicked <b>Cancel</b>.
            <para/>
            If the dialog box is displayed multiple times because the IGTKeyObjects collection contains more than one GTKeyObject, the user 
            can click <b>OK</b> to dismiss some of the dialog instances and <b>Cancel</b> to dismiss others. In this case, the status returned will be the 
            OK or Cancel status of the last dialog box shown.
            <para/>
            The number of Keywords and the number of Values supplied must match. If they do not, an error message will be displayed and the 
            <b>CU Selection</b> dialog box will not be displayed.
            <para/>
            If the Keywords and Values parameters are passed, then the CUs displayed on the dialog box for the features specified in the 
            IGTKeyObjects collection will be pre-filtered.
            <para/>
            Keywords and values will be validated. Any invalid keywords or invalid values will result in an error message being raised, and 
            the <b>CU Selection</b> dialog box will not be displayed.
            <para/>
            The following SQL statements can be used to find specific keywords for a given feature (facility):
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMFACKEYWORDTYPE WHERE CD_FACILITY = [Facility Name];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM CU_CATEGORY_ATTRIBUTE where CU_CATEGORY_CODE = [Facility Name];</i>
            <para/>
            The following SQL statements can be used to find specific values possible for keywords:
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMKEYWORD WHERE TP_KEYWORD = [Keyword];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM CU_ATTRIBUTE_VALUE WHERE CU_ATTRIBUTE_CODE = [Keyword] AND CU_CATEGORY_CODE = [Facility];</i>
            <para/>
            When filtering ancillary CUs, the Keywords parameter may also contain one first level filter 
            for each distinct feature type. No value item should be supplied in the Values parameter for 
            first level filters. Thus, the Keywords array will contain more items than the Values array.
            <para/>
            The following queries can be used to find first level filters for a given Feature (Facility)
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMFACILITYXREF WHERE CD_FACILITY = [Facility Name];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM G3E_LOGICACUXREF WHERE G3E_FEATURENAME = [Facility Name];</i>
            <para/>
            If first level filters are included, they can be anywhere in the Keywords array. As they are 
            identified, they will be removed from the Keywords array, leaving just keywords. Once all of 
            the first level keywords have been removed, the remaining keywords and values will be paired 
            together based on the position of each in the arrays. So the value at array location 1 will 
            be paired with the keyword at array location 1. If the keywords and values are not paired correctly, 
            then the values will be considered as invalid and an error message will be displayed. If the number 
            of remaining keywords does not match the number of values, then an error message will be displayed.
            <para/>
            The CUs selected will be checked for Macro expansion.
            <para/>
            If the CU component being populated is defined as a repeating component, then the user will be 
            prompted for the quantity of this CU to be added. New CU records will be created, based on the 
            quantity specified.
            <para/>
            For STORMS processing, if an application dependency exists for this CU, then the Application 
            Dependency dialog will be displayed to the user for population of these values.
            <para/>
            If the CU identifier being added is a primary CU, then static attributes will be processed.
            <para/>
            If the CU component being populated is a non-repeating component, and a CU is already defined 
            for the feature, then this method will overwrite the existing CU information and processing 
            will be similar to the <see cref="M:Intergraph.GTechnology.API.IGTCUService.Replace(System.String,System.String,System.Boolean,System.Int16)">Replace Method</see>. No 
            new CU record will be created in this case.
            <para/>
            </remarks>
            <returns>A value of 1 which means the user clicked OK; a value of 2 which means the user clicked Cancel.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Selection(System.Boolean,System.Int16)">
            <summary>Method to interactively execute CU Selection.</summary>
            <param name="Primary">Specifies if the CUs being added are primary or ancillary CUs. For primary CUs to be displayed, the 
            Primary parameter for this method should be passed as True or -1. For ancillary CUs, this parameter should be passed as 
            False or 0.</param>
            <param name="Occurrence">Shows application dependencies, if any, associated with this CU instance. Like the Keywords parameter, 
            this parameter allows CUs to be pre-filtered on the dialog box. Calling the Selection method without an Occurrence value or 
            with an Occurrence value of -1 will display the <b>CU Selection</b> dialog box so that CUs can be selected interactively. Application 
            dependencies will be displayed only if an Occurrence other than -1 is specified and the CU is an ancillary CU. You will not be 
            able to reselect the ancillary CU value through the GUI. If an Occurrence other than -1 is specified and the CU is a primary CU, 
            the <b>CU Selection</b> dialog box will be displayed first and then the application dependency dialog will appear if the database is 
            configured for application dependencies. If the feature is defined to have application dependencies for this CU type 
            (primary or ancillary), but no application dependencies exist for this CU occurrence, then a message will be displayed stating 
            that this CU does not have any application dependencies. This preserves the current implementation of the <b>CU Selection</b> dialog 
            box when invoked from Feature Explorer.</param>
            <remarks>Default values string.Empty and string.Empty are used for Keyword and Value.
            <para/>
            If multiple features are defined inside the IGTKeyObjects collection, then the <b>CU Selection</b> dialog box will be 
            displayed once for each feature being processed. In this case, the feature name and feature ID will be displayed 
            on the dialog box as it is displayed to the user.
            <para/>
            This method returns a status that indicates whether the user dismissed the CU <b>Selection</b> dialog box by clicking <b>OK</b> 
            or by clicking <b>Cancel</b>. A value of 1 means the user clicked <b>OK</b>; a value of 2 means the user clicked <b>Cancel</b>.
            <para/>
            If the dialog box is displayed multiple times because the IGTKeyObjects collection contains more than one GTKeyObject, the user 
            can click <b>OK</b> to dismiss some of the dialog instances and <b>Cancel</b> to dismiss others. In this case, the status returned will be the 
            OK or Cancel status of the last dialog box shown.
            <para/>
            The number of Keywords and the number of Values supplied must match. If they do not, an error message will be displayed and the 
            <b>CU Selection</b> dialog box will not be displayed.
            <para/>
            If the Keywords and Values parameters are passed, then the CUs displayed on the dialog box for the features specified in the 
            IGTKeyObjects collection will be pre-filtered.
            <para/>
            Keywords and values will be validated. Any invalid keywords or invalid values will result in an error message being raised, and 
            the <b>CU Selection</b> dialog box will not be displayed.
            <para/>
            The following SQL statements can be used to find specific keywords for a given feature (facility):
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMFACKEYWORDTYPE WHERE CD_FACILITY = [Facility Name];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM CU_CATEGORY_ATTRIBUTE where CU_CATEGORY_CODE = [Facility Name];</i>
            <para/>
            The following SQL statements can be used to find specific values possible for keywords:
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMKEYWORD WHERE TP_KEYWORD = [Keyword];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM CU_ATTRIBUTE_VALUE WHERE CU_ATTRIBUTE_CODE = [Keyword] AND CU_CATEGORY_CODE = [Facility];</i>
            <para/>
            When filtering ancillary CUs, the Keywords parameter may also contain one first level filter 
            for each distinct feature type. No value item should be supplied in the Values parameter for 
            first level filters. Thus, the Keywords array will contain more items than the Values array.
            <para/>
            The following queries can be used to find first level filters for a given Feature (Facility)
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMFACILITYXREF WHERE CD_FACILITY = [Facility Name];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM G3E_LOGICACUXREF WHERE G3E_FEATURENAME = [Facility Name];</i>
            <para/>
            If first level filters are included, they can be anywhere in the Keywords array. As they are 
            identified, they will be removed from the Keywords array, leaving just keywords. Once all of 
            the first level keywords have been removed, the remaining keywords and values will be paired 
            together based on the position of each in the arrays. So the value at array location 1 will 
            be paired with the keyword at array location 1. If the keywords and values are not paired correctly, 
            then the values will be considered as invalid and an error message will be displayed. If the number 
            of remaining keywords does not match the number of values, then an error message will be displayed.
            <para/>
            The CUs selected will be checked for Macro expansion.
            <para/>
            If the CU component being populated is defined as a repeating component, then the user will be 
            prompted for the quantity of this CU to be added. New CU records will be created, based on the 
            quantity specified.
            <para/>
            For STORMS processing, if an application dependency exists for this CU, then the Application 
            Dependency dialog will be displayed to the user for population of these values.
            <para/>
            If the CU identifier being added is a primary CU, then static attributes will be processed.
            <para/>
            If the CU component being populated is a non-repeating component, and a CU is already defined 
            for the feature, then this method will overwrite the existing CU information and processing 
            will be similar to the <see cref="M:Intergraph.GTechnology.API.IGTCUService.Replace(System.String,System.String,System.Boolean,System.Int16)">Replace Method</see>. No new CU record will be created in this case.
            <para/>
            </remarks>
            <returns>A value of 1 which means the user clicked OK; a value of 2 which means the user clicked Cancel.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Selection(System.Boolean,System.Int16,System.String)">
            <summary>Method to interactively execute CU Selection.</summary>
            <param name="Primary">Specifies if the CUs being added are primary or ancillary CUs. For 
            primary CUs to be displayed, the Primary parameter for this method should be passed as 
            True or -1. For ancillary CUs, this parameter should be passed as False or 0.</param>
            <param name="Occurrence">Shows application dependencies, if any, associated with this CU 
            instance. Like the Keywords parameter, this parameter allows CUs to be pre-filtered on the 
            dialog box. Calling the Selection method without an Occurrence value or with an Occurrence 
            value of -1 will display the <b>CU Selection</b> dialog box so that CUs can be selected 
            interactively. Application dependencies will be displayed only if an Occurrence other than 
            -1 is specified and the CU is an ancillary CU. You will not be able to reselect the ancillary 
            CU value through the GUI. If an Occurrence other than -1 is specified and the CU is a primary 
            CU, the <b>CU Selection</b> dialog box will be displayed first and then the application dependency 
            dialog will appear if the database is configured for application dependencies. If the feature 
            is defined to have application dependencies for this CU type (primary or ancillary), but no 
            application dependencies exist for this CU occurrence, then a message will be displayed stating 
            that this CU does not have any application dependencies. This preserves the current implementation 
            of the <b>CU Selection</b> dialog box when invoked from Feature Explorer.</param>
            <param name="Keyword">One or more keywords defined inside the work management system as facility 
            keywords. The number of Keywords and the number of Values must match. This parameter allows CUs 
            to be pre-filtered by keyword on the dialog box.</param>
            <remarks>Default value string.Empty is used for Value.
            <para/>
            If multiple features are defined inside the IGTKeyObjects collection, then the <b>CU Selection</b> dialog box will be 
            displayed once for each feature being processed. In this case, the feature name and feature ID will be displayed 
            on the dialog box as it is displayed to the user.
            <para/>
            This method returns a status that indicates whether the user dismissed the CU <b>Selection</b> dialog box by clicking <b>OK</b> 
            or by clicking <b>Cancel</b>. A value of 1 means the user clicked <b>OK</b>; a value of 2 means the user clicked <b>Cancel</b>.
            <para/>
            If the dialog box is displayed multiple times because the IGTKeyObjects collection contains more than one GTKeyObject, the user 
            can click <b>OK</b> to dismiss some of the dialog instances and <b>Cancel</b> to dismiss others. In this case, the status returned will be the 
            OK or Cancel status of the last dialog box shown.
            <para/>
            The number of Keywords and the number of Values supplied must match. If they do not, an error message will be displayed and the 
            <b>CU Selection</b> dialog box will not be displayed.
            <para/>
            If the Keywords and Values parameters are passed, then the CUs displayed on the dialog box for the features specified in the 
            IGTKeyObjects collection will be pre-filtered.
            <para/>
            Keywords and values will be validated. Any invalid keywords or invalid values will result in an error message being raised, and 
            the <b>CU Selection</b> dialog box will not be displayed.
            <para/>
            The following SQL statements can be used to find specific keywords for a given feature (facility):
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMFACKEYWORDTYPE WHERE CD_FACILITY = [Facility Name];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM CU_CATEGORY_ATTRIBUTE where CU_CATEGORY_CODE = [Facility Name];</i>
            <para/>
            The following SQL statements can be used to find specific values possible for keywords:
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMKEYWORD WHERE TP_KEYWORD = [Keyword];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM CU_ATTRIBUTE_VALUE WHERE CU_ATTRIBUTE_CODE = [Keyword] AND CU_CATEGORY_CODE = [Facility];</i>
            <para/>
            When filtering ancillary CUs, the Keywords parameter may also contain one first level filter 
            for each distinct feature type. No value item should be supplied in the Values parameter for 
            first level filters. Thus, the Keywords array will contain more items than the Values array.
            <para/>
            The following queries can be used to find first level filters for a given Feature (Facility)
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMFACILITYXREF WHERE CD_FACILITY = [Facility Name];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM G3E_LOGICACUXREF WHERE G3E_FEATURENAME = [Facility Name];</i>
            <para/>
            If first level filters are included, they can be anywhere in the Keywords array. As they are 
            identified, they will be removed from the Keywords array, leaving just keywords. Once all of 
            the first level keywords have been removed, the remaining keywords and values will be paired 
            together based on the position of each in the arrays. So the value at array location 1 will 
            be paired with the keyword at array location 1. If the keywords and values are not paired correctly, 
            then the values will be considered as invalid and an error message will be displayed. If the number 
            of remaining keywords does not match the number of values, then an error message will be displayed.
            <para/>
            The CUs selected will be checked for Macro expansion.
            <para/>
            If the CU component being populated is defined as a repeating component, then the user will be 
            prompted for the quantity of this CU to be added. New CU records will be created, based on the 
            quantity specified.
            <para/>
            For STORMS processing, if an application dependency exists for this CU, then the Application 
            Dependency dialog will be displayed to the user for population of these values.
            <para/>
            If the CU identifier being added is a primary CU, then static attributes will be processed.
            <para/>
            If the CU component being populated is a non-repeating component, and a CU is already defined 
            for the feature, then this method will overwrite the existing CU information and processing 
            will be similar to the <see cref="M:Intergraph.GTechnology.API.IGTCUService.Replace(System.String,System.String,System.Boolean,System.Int16)">Replace Method</see>. No new CU record will be created in this case.
            <para/>
            </remarks>
            <returns>A value of 1 which means the user clicked OK; a value of 2 which means the user clicked Cancel.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Selection(System.Boolean,System.Int16,System.String,System.String)">
            <summary>Method to interactively execute CU Selection.</summary>
            <param name="Primary">Specifies if the CUs being added are primary or ancillary CUs. For 
            primary CUs to be displayed, the Primary parameter for this method should be passed as 
            True or -1. For ancillary CUs, this parameter should be passed as False or 0.</param>
            <param name="Occurrence">Shows application dependencies, if any, associated with this CU 
            instance. Like the Keywords parameter, this parameter allows CUs to be pre-filtered on the 
            dialog box. Calling the Selection method without an Occurrence value or with an Occurrence 
            value of -1 will display the <b>CU Selection</b> dialog box so that CUs can be selected 
            interactively. Application dependencies will be displayed only if an Occurrence other than 
            -1 is specified and the CU is an ancillary CU. You will not be able to reselect the ancillary 
            CU value through the GUI. If an Occurrence other than -1 is specified and the CU is a primary 
            CU, the <b>CU Selection</b> dialog box will be displayed first and then the application dependency 
            dialog will appear if the database is configured for application dependencies. If the feature 
            is defined to have application dependencies for this CU type (primary or ancillary), but no 
            application dependencies exist for this CU occurrence, then a message will be displayed stating 
            that this CU does not have any application dependencies. This preserves the current implementation 
            of the <b>CU Selection</b> dialog box when invoked from Feature Explorer.</param>
            <param name="Keyword">One or more keywords defined inside the work management system as facility 
            keywords. The number of Keywords and the number of Values must match. This parameter allows CUs 
            to be pre-filtered by keyword on the dialog box.</param>
            <param name="Value">Prefilters by keyword value the CUs displayed on the dialog box for the features specified 
            in the IGTKeyObjects collection. The Values parameter specified must be defined inside the work management 
            system as a valid value for the Keywords parameter value.</param>
            <remarks>If multiple features are defined inside the IGTKeyObjects collection, then the <b>CU Selection</b> dialog box will be 
            displayed once for each feature being processed. In this case, the feature name and feature ID will be displayed 
            on the dialog box as it is displayed to the user.
            <para/>
            This method returns a status that indicates whether the user dismissed the CU <b>Selection</b> dialog box by clicking <b>OK</b> 
            or by clicking <b>Cancel</b>. A value of 1 means the user clicked <b>OK</b>; a value of 2 means the user clicked <b>Cancel</b>.
            <para/>
            If the dialog box is displayed multiple times because the IGTKeyObjects collection contains more than one GTKeyObject, the user 
            can click <b>OK</b> to dismiss some of the dialog instances and <b>Cancel</b> to dismiss others. In this case, the status returned will be the 
            OK or Cancel status of the last dialog box shown.
            <para/>
            The number of Keywords and the number of Values supplied must match. If they do not, an error message will be displayed and the 
            <b>CU Selection</b> dialog box will not be displayed.
            <para/>
            If the Keywords and Values parameters are passed, then the CUs displayed on the dialog box for the features specified in the 
            IGTKeyObjects collection will be pre-filtered.
            <para/>
            Keywords and values will be validated. Any invalid keywords or invalid values will result in an error message being raised, and 
            the <b>CU Selection</b> dialog box will not be displayed.
            <para/>
            The following SQL statements can be used to find specific keywords for a given feature (facility):
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMFACKEYWORDTYPE WHERE CD_FACILITY = [Facility Name];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM CU_CATEGORY_ATTRIBUTE where CU_CATEGORY_CODE = [Facility Name];</i>
            <para/>
            The following SQL statements can be used to find specific values possible for keywords:
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMKEYWORD WHERE TP_KEYWORD = [Keyword];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM CU_ATTRIBUTE_VALUE WHERE CU_ATTRIBUTE_CODE = [Keyword] AND CU_CATEGORY_CODE = [Facility];</i>
            <para/>
            When filtering ancillary CUs, the Keywords parameter may also contain one first level filter 
            for each distinct feature type. No value item should be supplied in the Values parameter for 
            first level filters. Thus, the Keywords array will contain more items than the Values array.
            <para/>
            The following queries can be used to find first level filters for a given Feature (Facility)
            <para/>
            <b>STORMS</b>
            <para/>
            <i>SELECT * FROM TWMFACILITYXREF WHERE CD_FACILITY = [Facility Name];</i>
            <para/>
            <b>LOGICA</b>
            <para/>
            <i>SELECT * FROM G3E_LOGICACUXREF WHERE G3E_FEATURENAME = [Facility Name];</i>
            <para/>
            If first level filters are included, they can be anywhere in the Keywords array. As they are 
            identified, they will be removed from the Keywords array, leaving just keywords. Once all of 
            the first level keywords have been removed, the remaining keywords and values will be paired 
            together based on the position of each in the arrays. So the value at array location 1 will 
            be paired with the keyword at array location 1. If the keywords and values are not paired correctly, 
            then the values will be considered as invalid and an error message will be displayed. If the number 
            of remaining keywords does not match the number of values, then an error message will be displayed.
            <para/>
            The CUs selected will be checked for Macro expansion.
            <para/>
            If the CU component being populated is defined as a repeating component, then the user will be 
            prompted for the quantity of this CU to be added. New CU records will be created, based on the 
            quantity specified.
            <para/>
            For STORMS processing, if an application dependency exists for this CU, then the Application 
            Dependency dialog will be displayed to the user for population of these values.
            <para/>
            If the CU identifier being added is a primary CU, then static attributes will be processed.
            <para/>
            If the CU component being populated is a non-repeating component, and a CU is already defined 
            for the feature, then this method will overwrite the existing CU information and processing 
            will be similar to the <see cref="M:Intergraph.GTechnology.API.IGTCUService.Replace(System.String,System.String,System.Boolean,System.Int16)">Replace Method</see>. No new CU record will be created in this case.
            <para/>
            </remarks>
            <returns>A value of 1 which means the user clicked OK; a value of 2 which means the user clicked Cancel.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Add(System.String,System.Boolean)">
            <summary>Method to Add a Primary or Ancillary CU.</summary>
            <param name="CUIdentifier">IDs of one or more CUs being added. If a CU being added is a primary 
            CU, then static attributes will be processed. Multiple CUs can be passed as a comma-delimited string 
            of CUs, or they can be passed as a variant array of strings.</param>
            <param name="Primary">Specifies if the CUs being added are primary or ancillary CUs. If the Primary 
            parameter is True, the CUs will be mapped onto the features inside the IGTKeyObjects collection using 
            the CU facility name and feature numbers on each IGTKeyObject. If a match is not found, an error will 
            be raised to the calling routine. If the Primary parameter is False, the CUs will be mapped onto the 
            first feature inside the IGTKeyObjects collection. If the Primary parameter is True, the CUs can be applied 
            to multiple IGTKeyObjects, based on the facility-to-feature mappings. So the CUs will be applied to the 
            features they are defined for. If the Primary parameter is False, the CUs will only be applied to the 
            first IGTKeyObject. This is because ancillary CUs do not carry specific facility-to-feature mappings 
            like primary CUs.</param>
            <remarks>The CUs will be added to the features defined in the IGTKeyObjects collection.
            <para/>
            This method can display the following dialog boxes:
            <list type="bullet">
            <item><description><b>Select CU Quantity</b></description></item>
            <item><description><b>Application Dependency Properties</b></description></item>
            </list>
            <para/>
            For STORMS processing, if an application dependency exists for this CU, then the <b>Application Dependency 
            Properties</b> dialog box will be displayed to the user for population of these values.
            <para/>
            Each CU will be checked for macro expansion.
            <para/>
            If the CU component being populated is defined as a repeating component, the user will be prompted for the 
            quantity of this CU to be added. New CU records will be created based on the quantity specified.
            <para/>
            If the CU component being populated is a non-repeating component, and a CU is already defined for the 
            feature, this method will overwrite the existing CU information and processing will be similar to the 
            Replace Method. No new CU record will be created in this case.
            <para/>
            If the CU component being populated is a non-repeating component, and multiple CU values are specified 
            in the CUIdentifiers parameter, then the last CU in the parameter is the one that gets assigned to the 
            feature.
            <para/>
            For processing this method, the value of CUValidation in G3E_STRORMSIFACE table must be 1 and G3E_FEATURE.G3E_NAME 
            must be populated in datasets that have a work management system such as STORMS or Logica defined.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Delete(System.String,System.Boolean)">
            <summary>Method to delete an existing CU.</summary>
            <param name="CUIdentifier">ID of the CU being deleted. If the CUIdentifier being deleted is a primary 
            CU, then static attributes will be processed. The CUIdentifiers parameter can contain one or more CU 
            values.</param>
            <param name="Primary">Specifies if the CUs being added are primary or ancillary CUs.</param>
            <remarks>Default value 1 is used for Occurrence.
            <para/>
            Calling this method will delete the CU attribute from the feature. This method also cleans up application 
            dependencies for STORMS and other CU-related components from Logica that are tied to the CU being deleted.
            <para/>
            If the CU component to be cleaned up is optional, the instances will be deleted. If the CU component to be 
            cleaned up is required and this is not the last instance of this component, then the instance will be 
            deleted. If this is the last instance of a required CU component, the instance will not be deleted. Instead, 
            the CU attributes for the CU identifier, macro CU, usage, and quantity will be nulled out.
            <para/>
            If the CU being deleted is a primary CU, the static attributes associated with this CU will be left as is.
            <para/>
            If Delete is called and more than one IGTKeyObject has been specified, an error will be raised.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Delete(System.String,System.Boolean,System.Int16)">
            <summary>Method to delete an existing CU.</summary>
            <remarks>
            Calling this method will delete the CU attribute from the feature. This method also cleans up application 
            dependencies for STORMS and other CU-related components from Logica that are tied to the CU being deleted.
            <para/>
            If the CU component to be cleaned up is optional, the instances will be deleted. If the CU component to be 
            cleaned up is required and this is not the last instance of this component, then the instance will be 
            deleted. If this is the last instance of a required CU component, the instance will not be deleted. Instead, 
            the CU attributes for the CU identifier, macro CU, usage, and quantity will be nulled out.
            <para/>
            If the CU being deleted is a primary CU, the static attributes associated with this CU will be left as is.
            <para/>
            If Delete is called and more than one IGTKeyObject has been specified, an error will be raised.</remarks>
            <param name="CUIdentifier">ID of the CU being deleted. If the CUIdentifier being deleted is a primary 
            CU, then static attributes will be processed. The CUIdentifiers parameter can contain one or more CU 
            values.</param>
            <param name="Primary">Specifies if the CUs being added are primary or ancillary CUs.</param>
            <param name="Occurrence">If the CU being deleted is an ancillary macro CU and an Occurrence value is 
            specified, then only the specified instance of the macro CU will be cleaned up. If the CU being deleted 
            is an ancillary macro CU and no Occurrence value is specified, then all the CUs associated with this 
            macro will be cleaned up. If the CU being deleted is a primary macro CU, then all the CUs and related 
            components associated with this macro will be cleaned up. The Occurrence parameter will be ignored. This 
            means that one individual occurrence or instance of a primary macro CU cannot be deleted. For non-macro 
            CUs, if the Occurrence parameter is specified, then only this occurrence (G3E_CID) of this CU will be cleaned 
            up; otherwise all CUs that match the CUIdentifier parameter will be cleaned up.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Replace(System.String,System.String,System.Boolean)">
            <summary>Method to replace an existing CU with another CU value.</summary>
            <param name="ExistingCUIdentifier">ID of the CU being replaced. If the CU component being replaced is defined 
            as a repeating component, then the user will be prompted for the quantity of this CU to be added. If the 
            ExistingCUIdentifier is a macro CU, the macro will be cleaned up according to the rules laid out in the <see cref="M:Intergraph.GTechnology.API.IGTCUService.Delete(System.String,System.Boolean,System.Int16)">Delete method</see> for macro cleanup.</param>
            <param name="NewCUIdentifier">ID of the CU replacing the existing one. The NewCUIdentifier will be checked for 
            macro expansion.</param>
            <param name="Primary">Specifies if the CUs being added are primary or ancillary CUs.</param>
            <remarks>Default value 1 is used for Occurrence.
            <para/>
            This method can display the following dialog boxes:
            <list type="bullet">
            <item><description><b>Select CU Quantity</b></description>
            </item>
            <item><description><b>Application Dependency Properties</b></description>
            </item>
            </list>
            <para/>
            For STORMS processing, if an application dependency exists for this CU, then the <b>Application Dependency Properties</b> 
            dialog box will be displayed for population of these values.
            <para/>
            If Replace is called and more than one IGTKeyObject has been specified, an error will be raised.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Replace(System.String,System.String,System.Boolean,System.Int16)">
            <summary>Method to replace an existing CU with another CU value.</summary>
            <param name="ExistingCUIdentifier">ID of the CU being replaced. If the CU component being replaced is defined as a 
            repeating component, then the user will be prompted for the quantity of this CU to be added. If the ExistingCUIdentifier 
            is a macro CU, the macro will be cleaned up according to the rules laid out in the <see cref="M:Intergraph.GTechnology.API.IGTCUService.Delete(System.String,System.Boolean,System.Int16)">Delete method</see> for macro cleanup.</param>
            <param name="NewCUIdentifier">ID of the CU replacing the existing one. The NewCUIdentifier will be checked for macro expansion.</param>
            <param name="Primary">Specifies if the CUs being added are primary or ancillary CUs.</param>
            <param name="Occurrence">The specific occurrence within the primary or ancillary CU component to be replaced by the NewCUIdentifier.</param>
            <remarks>
            This method can display the following dialog boxes:
            <list type="bullet">
            <item><description><b>Select CU Quantity</b></description>
            </item>
            <item><description><b>Application Dependency Properties</b></description>
            </item>
            </list>
            <para/>
            For STORMS processing, if an application dependency exists for this CU, then the<b>Application Dependency Properties</b>
            dialog box will be displayed for population of these values.
            <para/>
            If Replace is called and more than one IGTKeyObject has been specified, an error will be raised.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCUService.Validate">
            <summary>Method to validate CU and static attribute values.</summary>
            <remarks>This method validates the feature within the IGTKeyObjects collection to make certain that 
            all the static attributes for the primary CUs are consistent. If they are not, an ADO recordset 
            listing the feature's G3E_FID and CUIdentifier values that are inconsistent will be returned.
            <para/>
            The current static attribute values and the expected values (based upon the CUIdentifier) will also 
            be returned inside this recordset.
            <para/>
            The format of the recordset is as follows:
            <list type="bullet">
            <item><description>FEATURE_NAME — Username of the feature.</description></item>
            <item><description>G3E_FID — Feature instance.</description></item>
            <item><description>COMPONENT_NAME — Username of the CU component record.</description></item>
            <item><description>G3E_CID — CU component instance.</description></item>
            <item><description>CU_IDENTIFIER — The CU value.</description></item>
            <item><description>STATIC_ATTRIBUTE_NAME — Username of the static attribute field.</description></item>
            <item><description>CURRENT_ATTRIBUTE_VALUE — The value stored in the static attribute.</description></item>
            <item><description>EXPECTED_ATTRIBUTE_VALUE — The value expected for the static attribute.</description></item>
            </list>
            <para/>
            If Validate is called and more than one IGTKeyObject has been specified, an error will be raised.
            </remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTCUService.DataContext">
            <summary>Property to set the IGTDataContext object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTCUService.KeyObjects">
            <summary>Property KeyObjects provides the collection of IGTKeyObjects for the features being populated and processed with CU data. 
            </summary>
            <remarks><see cref="M:Intergraph.GTechnology.API.IGTCUService.Selection(System.Boolean,System.Int16,System.String,System.String)">Selection</see> and <see cref="M:Intergraph.GTechnology.API.IGTCUService.Add(System.String,System.Boolean)">Add</see> are the only methods that can process multiple IGTKeyObjects, 
            specifically to support the industryware Staking Sheet command. Otherwise, only the 
            first IGTKeyObject inside the collection will be processed.
            <list type="table">
            <listheader>
            <description>Example</description>
            </listheader>
            <item>
            <description><para>If a switch gear or other placement configuration with multiple features is 
            being processed, then the IGTKeyObject for each feature would be included inside the 
            IGTKeyObjects collection.</para>
            <para>Calling the Selection or Add methods with multiple CUs would cause a mapping 
            to occur between the CUs' facility definitions from the work management tables and the 
            G3E_FEATURE.G3E_NAME for the features defined inside the IGTKeyObject.</para>
            <para>If multiple instances of one feature type were defined inside the IGTKeyObjects 
            collection, then the CU value mapped to this feature would be applied to each instance of 
            the feature type (IGTKeyObject).</para></description>
            </item>
            </list>
            Macro CUs cannot contain CUs for multiple feature definitions. The macro will be expanded 
            and processed only against the feature that maps to the facility defined for the macro CU 
            itself.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTWheelRotateEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTCustomCommandHelper WheelRotate event.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTMouseBaseEventArgs">
            <summary>Base class that provides data for the Intergraph.GTechnology.API.IGTCustomCommandHelper mouse events - Click, DblClick, MouseDown, MouseMove, and MouseUp.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTMouseBaseEventArgs.#ctor(Intergraph.GTechnology.API.IGTMapWindow@,System.Int16,Intergraph.GTechnology.API.IGTPoint@,Intergraph.GTechnology.API.IGTPoint@)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTMouseBaseEventArgs class.</summary>
            <param name="MapWindow">MapWindow argument value.</param>
            <param name="Key">Key argument value.</param>
            <param name="WindowPoint">WindowPoint argument value.</param>
            <param name="WorldPoint">WorldPoint argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTMouseBaseEventArgs.MapWindow">
            <summary>MapWindow argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTMouseBaseEventArgs.Key">
            <summary>Key argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTMouseBaseEventArgs.WindowPoint">
            <summary>WindowPoint argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTMouseBaseEventArgs.WorldPoint">
            <summary>WorldPoint argument value.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTWheelRotateEventArgs.#ctor(Intergraph.GTechnology.API.IGTMapWindow@,System.Int16,System.Int16,Intergraph.GTechnology.API.IGTPoint@,Intergraph.GTechnology.API.IGTPoint@)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTWheelRotateEventArgs class.</summary>
            <param name="MapWindow">MapWindow argument value.</param>
            <param name="Key">Key argument value.</param>
            <param name="RotationDelta">RotationDelta argument value.</param>
            <param name="WindowPoint">WindowPoint argument value.</param>
            <param name="WorldPoint">WorldPoint argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTWheelRotateEventArgs.RotationDelta">
            <summary>RotationDelta argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTClassFactory">
            <summary>Intergraph G/Technology GTClassFactory Object</summary>
            <remarks>GTClassFactory object used to create instances of public Intergraph G/Technology classes given an interface type.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTClassFactory.Create``1">
            <summary>Method to create an instance of a public Intergraph G/Technology class given an interface type.</summary>
            <typeparam name="T">Type of a public Intergraph G/Technology object to be created.</typeparam>
            <returns>Instance of a public Intergraph G/Technology object.</returns>
            <remarks>
            Valid types: 
            <list type="bullet">
            <item>IGTApplication</item>
            <item>IGTArcGeometry</item>
            <item>IGTBoundaryGeometry</item>
            <item>IGTBreakLinearService</item>
            <item>IGTComponents</item>
            <item>IGTCompositePolygonGeometry</item>
            <item>IGTCompositePolylineGeometry</item>
            <item>IGTCUService</item>
            <item>IGTDDCKeyObjects</item>
            <item>IGTEliminationComponents</item>
            <item>IGTExportService</item>
            <item>IGTFeatureExplorerService</item>
            <item>IGTFieldValue</item>
            <item>IGTGeometryCollection</item>
            <item>IGTGeometryCreationService</item>
            <item>IGTGeometryEditService</item>
            <item>IGTGraphicComponents</item>
            <item>IGTHelperService</item>
            <item>IGTJobManagementService</item>
            <item>IGTKeyObjects</item>
            <item>IGTLineGeometry</item>
            <item>IGTMath</item>
            <item>IGTMatrix</item>
            <item>IGTMeasureService</item>
            <item>IGTMultiSectionCableService</item>
            <item>IGTOrientedPointGeometry</item>
            <item>IGTPaperRange</item>
            <item>IGTPDFPrinterProperties</item>
            <item>IGTPoint</item>
            <item>IGTPointGeometry</item>
            <item>IGTPoints</item>
            <item>IGTPolygonGeometry</item>
            <item>IGTPolylineGeometry</item>
            <item>IGTPrintProperties</item>
            <item>IGTRasterGeometry</item>
            <item>IGTRelationshipService</item>
            <item>IGTSchematicAttribute</item>
            <item>IGTSchematicAttributes</item>
            <item>IGTSchematicDataInstance</item>
            <item>IGTSchematicDataInstances</item>
            <item>IGTSchematicGeneratorService</item>
            <item>IGTSchematicLabel</item>
            <item>IGTSchematicLabels</item>
            <item>IGTSegment</item>
            <item>IGTSegmentPoint</item>
            <item>IGTSnapService</item>
            <item>IGTSpatialService</item>
            <item>IGTSymbology</item>
            <item>IGTTextPointGeometry</item>
            <item>IGTVector</item>
            <item>IGTWorldRange</item>
            <item>IGTZoneService</item>
            </list>
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTClassFactory.Create``1(Intergraph.GTechnology.API.IGTCustomCommandHelper)">
            <summary>Method to create an instance of a public Intergraph G/Technology class given an interface type and the IGTCustomCommandHelper object.</summary>
            <typeparam name="T">Type of a public Intergraph G/Technology object to be created.</typeparam>
            <param name="o">IGTCustomCommandHelper object.</param>
            <returns>Instance of a public Intergraph G/Technology object.</returns>
            <remarks>The IGTCustomCommandHelper object must be specified for these objects:
            <list type="bullet">
            <item>IGTFeaturePlacementService</item>
            <item>IGTMergeFeaturesService</item>
            </list>
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTClassFactory.Create``1(System.Object[])">
            <summary>
            Method to create an instance of a public Intergraph G/Technology class given an interface type.
            <para/>
            Following public Intergraph G/Technology class objects can be created using GTClassFactory.Create in more than one way:
            <list type="bullet">
            <item>IGTPoint</item>
            <item>IGTVector</item>
            <item>IGTSegment</item>
            <item>IGTSegmentPoint</item>
            <item>IGTMatrix</item>
            </list>
            <para/>
            Examples :
            <para/>
            IGTPoint type can be created using the following ways:
            <code>
            IGTPoint oPointA = GTClassFactory.Create&lt;IGTPoint&gt;() or
            IGTPoint oPointB = GTClassFactory.Create&lt;IGTPoint&gt;(20,30,40) or
            IGTPoint oPointC = GTClassFactory.Create&lt;IGTPoint&gt;(oPointA)
            </code>
            <para/>
            IGTVector type can be created using the following ways:
            <code>
            double i = 1, I component value of the GTVector object.
            double j = 0, J component value of the GTVector object.
            double k = 0, K component value of the GTVector object.
            IGTVector oVectorA = GTClassFactory.Create&lt;IGTVector&gt;() or
            IGTVector oVectorB = GTClassFactory.Create&lt;IGTVector&gt;(i,j,k) or 
            IGTVector oVectorC = GTClassFactory.Create&lt;IGTVector&gt;(oVectorA)
            </code>
            <para/>
            IGTSegment type can be created using the following ways:
            <code>
            IGTPoint oBeginPoint = GTClassFactory.Create&lt;IGTPoint&gt;(),
            IGTPoint oEndPoint = GTClassFactory.Create&lt;IGTPoint&gt;(),
            bool is_extended = false/true - indicates whether the line should be extended infinitely in both directions. 
            IGTSegment oSegment = GTClassFactory.Create&lt;IGTSegment&gt;() or
            IGTSegment oSegment = GTClassFactory.Create&lt;IGTSegment&gt;(oBeginPoint,oEndPoint) or
            IGTSegment oSegment = GTClassFactory.Create&lt;IGTSegment&gt;(oBeginPoint,oEndPoint,is_extended)
            </code>
            <para/>
            IGTSegmentPoint type can be created using the following ways:
            <code>
            IGTPoint oPoint = GTClassFactory.Create&lt;IGTPoint&gt;(),
            IGTSegmentPoint oSegmentPoint = GTClassFactory.Create&lt;IGTSegmentPoint&gt;() or
            IGTSegmentPoint oSegmentPoint = GTClassFactory.Create&lt;IGTSegmentPoint&gt;(oPoint,GTSegmentPointType)
            </code>
            <para/>
            IGTMatrix type can be created using the following ways:
            <code>
            IGTMatrix oMatrixA = GTClassFactory.Create&lt;IGTMatrix&gt;() or
            IGTMatrix oMatrixB = GTClassFactory.Create&lt;IGTMatrix&gt;(oMatrixA)
            </code>
            <para/>
            </summary>
            <typeparam name="T">Type of a public Intergraph G/Technology object to be created.</typeparam>
            <param name="list">A variable object array consisting of list of arguments.</param>
            <returns>Instance of a public Intergraph G/Technology object.</returns>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTTemporaryGeometryPlacementHelper">
            <summary>Intergraph G/Technology IGTTemporaryGeometryPlacementHelper API.</summary>
            <remarks>
            The IGTTemporaryGeometry Placement interface uses this object to communicate with the calling software component.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTTemporaryGeometryPlacementHelper.EnableConstructionAids(Intergraph.GTechnology.API.GTConstructionAidsEnabledConstants)">
            <summary>Method to set the constructions aids to enable: point construction aids, linear construction aids, all construction aids, or no construction aids.</summary>
            <param name="EnabledTypes">Enabled construction aids types: none, point, linear, all.</param>
            <remarks>Default value 1 is used for GeometryIndex.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTTemporaryGeometryPlacementHelper.EnableConstructionAids(Intergraph.GTechnology.API.GTConstructionAidsEnabledConstants,System.Int32)">
            <summary>Method to set the constructions aids to enable: point construction aids, linear construction aids, all construction aids, or no construction aids.</summary>
            <param name="EnabledTypes">Enabled construction aids types: none, point, linear, all.</param>
            <param name="GeometryIndex">Index of the geometry in the GTGeometryConstructionService to be processed by the construction aids. If not specified, the first geometry in the GTGeometryConstructionService is used.</param>
            <remarks>If the interface does not call this method, the Construction Aids control is not shown. Thus, no construction aids are available to the user.
            <para/>Before calling this method, the interface must set or create the geometry on the GTGeometryConstructionService, index of which is passed in the GeometryIndex parameter.
            <para/>Construction aids cannot be used to specify the rotation of oriented point geometries and text point geometries. They can be used only to specify their origin. Therefore, 
            construction aids should be disabled programmatically while the user interactively specifies the rotation.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTTemporaryGeometryPlacementHelper.AbortPlacement">
            <summary>Method to terminate the temporary geometry placement by aborting it and discarding all work it has done.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTTemporaryGeometryPlacementHelper.EndPlacement">
            <summary>Method to end the temporary geometry placement and save the geometry if it is valid.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTTemporaryGeometryPlacementHelper.ConstructionAidDynamicsEnabled">
            <summary>Property to return/set whether construction aids should draw dynamics as the mouse moves from the last point of the geometry to the location of the constructed point.</summary>
            <remarks>This property defaults to True if not set by the interface. It can be set at any point while the interface is running.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTTemporaryGeometryPlacementHelper.ConstructionAidInProgress">
            <summary>Property to return a flag indicating whether a Construction Aid is in progress.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTTemporaryGeometryPlacementHelper.ConstructionAidComplete">
            <summary>Event raised when a construction aid has finished processing.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSchematicAttributes">
            <summary>
            Intergraph G/Technology IGTSchematicAttributes API.
            </summary>
            <remarks>
            IGTSchematicAttributes is a collection object that provides access to the columns of the component view associated with a IGTSchematicDataInstance. There is one IGTSchematicAttribute member of this collection for each field in the component view record (except for the geometry). 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicAttributes.Add(Intergraph.GTechnology.API.IGTSchematicAttribute)">
            <summary>
            Adds the specified IGTSchematicAttribute object to the GTSchematicAttributes collection.
            </summary>
            <param name="attribute">The IGTSchematicAttribute to add.</param>
            <remarks>This method is intended for cases where you need to synthesize attributes to be included 
            in the XML. This might be needed for the Simplify method or for later custom processing of the XML 
            itself.
            <para/>
            If an attribute already exists with the specified ColumnName as its ColumnName property, the Add 
            method raises an exception and the collection is not modified.
            <para/>
            The Add method raises an exception if it is called for the NetworkAttributes collection of a 
            IGTSchematicElement.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicAttributes.Remove(Intergraph.GTechnology.API.IGTSchematicAttribute)">
            <summary>
            Removes the specified IGTSchematicAttribute object from the collection.
            </summary>
            <param name="attribute">The IGTSchematicAttribute to remove.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicAttributes.RemoveAt(System.Int32)">
            <summary>
            Removes the attribute at the specified index from the collection.
            </summary>
            <param name="index">The index of the attribute to remove.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicAttributes.Item(System.Int32)">
            <summary>
            Gets the IGTSchematicAttribute from the collection at the specified index.
            </summary>
            <param name="index">Index of the network element. Can be between 1 and the number of 
            elements in the collection, or it can be a string specifying the ColumnName of the 
            required attribute.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicAttributes.Item(System.String)">
            <summary>
            Gets the IGTSchematicAttribute from the collection for the specified key.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPlotRedlines">
            <summary>Intergraph G/Technology IGTPlotRedlines API.</summary>
            <remarks>
            The IGTPlotRedlines collection class represents a collection of redline elements specific to a single IGTNamedPlot object. The collection may represent all redline elements or only elements of a specific type, such as linear redline elements. 
            <para/>The IGTNamedPlot.GetRedlines method is used to obtain a collection of redline elements. Unlike 
            the IGTPlotWindows or IGTMapWindows collections, IGTPlotRedlines is not a snapshot collection; it always 
            represents the current state of the specified plot. Therefore, a given IGTPlotRedlines collection may 
            return different information at different times during a session if the collection exists while other 
            redline modifications are performed.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotRedlines.Add(Intergraph.GTechnology.API.IGTPlotRedline)">
            <summary>Method to add a IGTPlotRedline object to the collection.</summary>
            <param name="oGTPlotRedline">IGTPlotRedline object which is to be added to the collection.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when IGTPlotRedline is Null.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedlines.Item(System.Int32)">
            <summary>Property to return a specific IGTPlotRedline in the collection.</summary>
            <param name="index">Index to the IGTPlotRedline.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTLocateService">
            <summary>Intergraph G/Technology IGTLocateService API.</summary>
            <remarks>
            The IGTLocateService object contains methods for locating objects within a specified radius from a locate point. The locate can be restricted to a maximum number of candidates and can use the PickQuick dialog box for the selection of a subset of the located objects. 
            <para/>The IGTLocateService is retrieved from a IGTMapWindow object. Each of the IGTLocateService methods operates on that map window. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTLocateService.Locate(Intergraph.GTechnology.API.IGTPoint,System.Int32,System.Int16,Intergraph.GTechnology.API.GTSelectionTypeConstants)">
            <summary>Method to return a set of IGTDDCKeyObjects given a geographic point.</summary>
            <param name="WorldPoint">The real world coordinate value (IGTPoint) where the center of the locate will originate. </param>
            <param name="PixelTolerance">The locate tolerance used by the Locate method. The locate tolerance is a square: its center is the 
            input WorldPoint; its sides are two times the PixelTolerance. All objects that intersect or lie completely within this square are 
            included in the output IGTDDCKeyObjects collection.</param>
            <param name="MaxCandidates">The maximum number of objects the IGTDDCKeyObjects collection can contain. Setting this property to a 
            negative number means there is no limit to the number of objects this collection can contain. If a limit is specified and more than 
            the specified number of elements are found, the topmost MaxCandidates elements are returned. Topmost means the elements that are drawn 
            last and so are on top of the other elements.</param>
            <param name="SelectionType">Defines the use of PickQuick during the locate.</param>
            <remarks>This method returns an empty collection if no items are located.
            <para/>
            The following criteria must be met for a feature to be located by IGTLocateService:
            <list type="bullet">
            <item>The feature or component must be on the Legend for the map window.</item>
            <item>If the display status for the feature is not Display by Scale, then the display status must be On.</item>
            <item>If the display status for the feature is Display by Scale, then the current display scale of the map window must be within the display scale range.</item>
            <item>The locate status for the feature must be On.</item>
            <item>For areas, either the area boundary or the interior of the area (the "face") must intersect the locate tolerance.</item>
            <item>The maximum number of items that can be returned by Locate is governed by MaxCandidates parameter of the Locate method.</item>
            </list>
            <para/>
            Features will not be located in these circumstances:
            <list type="bullet">
            <item>The feature is in database but not on the Legend for the map window.</item>
            <item>The feature is on the Legend but display status is Off. </item>
            <item>The feature is on the Legend but locate status is Off.</item>
            <item>The feature is on the Legend, locate status is On, display status is Off.</item>
            <item>The feature is on the Legend but the map window's display scale is outside of the display scale range for the feature (if the feature is Display by Scale).</item>
            <item>The number of items that could be found exceeds the MaxCandidates parameter.</item>
            </list>
            <para/>
            Use this method to locate objects in the map window from which the IGTLocateService object was obtained. Locate returns candidates based on what the user can currently 
            see and based what is locatable as indicated in the Display Control. While there may be more data where the mouse is (the input world point), it will not be located 
            unless it can be seen. Therefore, this method is primarily used in commands that use the current mouse position as the input criteria.
            <para/>
            If you want data returned that is not visible or locatable in the active map window, use the GTSpatialService instead.</remarks>
            <returns>Set of IGTDDCKeyObjects given a geographic point.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTLocateService.PickQuick(Intergraph.GTechnology.API.IGTDDCKeyObjects,Intergraph.GTechnology.API.GTPickQuickTypeConstants)">
            <summary>Method to select one or more IGTDDCKeyObjects in a collection.</summary>
            <param name="DDCKeyObjects">The items to be displayed in the PickQuick dialog box. If the IGTDDCKeyObjects collection is empty, no action is taken.</param>
            <param name="SelectionType">The selection mode used by PickQuick.</param>
            <remarks>If no items are selected, this collection has a count of zero.
            <para/>
            Use this method to allow users to select a subset of items within a IGTDDCKeyObjects collection.
            <para/>
            <b>Example:</b>  Call Locate with gtlsstSelectNone, filter the resulting set of objects for certain conditions, and then use the PickQuick method to let the user choose from among the 
            filtered set of located objects.</remarks>
            <returns>Collection of user selected IGTDDCKeyObject objects.</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTLocateService.IncludeSchematicComponents">
            <summary>Property to return/set the IncludeSchematicComponents value.  This defaults to false.  If true, then client will have to deal with schematic components returned.</summary>
            <remarks>This property should be set to True if you want to receive schematics while locating and if the PickQuick software needs to handle schematics.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTLegendEntry">
            <summary>Intergraph G/Technology IGTLegendEntry API.</summary>
            <remarks>
            IGTLegendEntry object represents the status and filter for leaf nodes in the Display Control's tree view.
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTLegendEntry.Displayable">
            <summary>Property to return/set the displayable status for this legend entry.</summary>
            <remarks>This property returns the current status from the Display Control, even if the user changes it after obtaining this object.
            <para>When set, the Display Control's user interface is updated immediately.
            </para>
            <para>Call IGTApplication's RefreshWindows method to see changes in the map window or the plot map frame.
            </para></remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTLegendEntry.Locatable">
            <summary>Property to return/set the locatable status for this legend entry.</summary>
            <remarks>This property returns the current status from the Display Control, even if the user changes it after obtaining this object.
            <para>When set, the Display Control's user interface is updated immediately.
            </para>
            <para>Locate operations (for example, IGTLocateService.Locate and mouse-locate operations) immediately honor the new setting.
            </para>
            <para>Calling IGTApplication's RefreshWindows method has no effect after setting this property.
            </para></remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTLegendEntry.DisplayScaleMode">
            <summary>Property to return/set the display scale mode for this legend entry.
            <para>The DisplayScaleMode property applies only to metadata legend entry nodes and to query nodes. If you change this property for any other node type, an error is raised.
            </para></summary>
            <remarks>This property returns the current status from the Display Control, even if the user changes it after obtaining this object.
            <para>The G3E_DisplayControlDisplayScaleEnabled database role is honored for this property. If the user does not have the proper role, an error is raised. See the Enabling the Display Scale Status Check Box Help topic.
            </para>
            <para>When set, the Display Control's user interface is updated immediately.
            </para>
            <para>Call IGTApplication's RefreshWindows method to see changes in the map window or the plot map frame.
            </para></remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTLegendEntry.Filter">
            <summary>Property to return/set the filter clause for this legend entry.</summary>
            <remarks>This property returns the current filter from the Display Control, even if the user changes it after obtaining this object.
            <para>This property applies to metadata legend nodes only; it does not apply to ad hoc nodes.
            <list type="bullet">
            <item><description>Setting a new filter replaces the existing filter; the new filter is not combined with the existing filter.
            </description></item>
            <item><description>The filter should not include the word, WHERE.
            </description></item>
            <item><description>See Supported Operators for the list of supported operators.
            </description></item>
            </list>
            </para>
            <para>If the filter is invalid, an error is raised. The syntax might be wrong or a field in the filter might not apply to this legend entry.
            </para>
            <para>If this property is changed for an ad hoc item, an error is raised.
            </para>
            <para>When set, the Display Control's user interface is updated immediately.
            </para>
            <para>Call IGTApplication's RefreshWindows method to see changes in the map window or the plot map frame.
            </para>
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTFeatureLoaderService">
            <summary>Intergraph G/Technology IGTFeatureLoaderService API.</summary>
            <remarks>
            IGTFeatureLoaderService object is sent as parameter to the Execute method of the IGTImportFeature interface. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.BeginTrans">
            <summary>Method to begin a database transaction and open/create a feature based on the FNO and FID properties.</summary>
            <remarks>The FNO and FID properties need to be set before calling this method.
            <para/>If FID is set to -1, it will trigger the creation of a new feature.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.CommitTrans(System.String)">
            <summary>Method to end a database transaction saving changes to the database.</summary>
            <param name="UndoDescription">Description for undo.</param>
            <remarks>CommitTrans should be called before calling the UpdateRelationship method.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.PutGeometryValue(System.String,System.Int16@,Intergraph.GTechnology.API.IGTPoint[])">
            <summary>Method to set a component's geometry based on the FNO and FID properties, a component name, CID, and array of coordinates.</summary>
            <param name="ComponentName">The geometry component name.</param>
            <param name="CID">The geometry component ID.</param>
            <param name="Location">The 2-D position array that stores the X,Y location of the geometry.</param>
            <remarks>Default values 0.0 and 0 are used for RotationInDegree and Alignment.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.PutGeometryValue(System.String,System.Int16@,Intergraph.GTechnology.API.IGTPoint[],System.Double)">
            <summary>Method to set a component's geometry based on the FNO and FID properties, a component name, CID, and array of coordinates.</summary>
            <param name="ComponentName">The geometry component name.</param>
            <param name="CID">The geometry component ID.</param>
            <param name="Location">The 2-D position array that stores the X,Y location of the geometry.</param>
            <param name="RotationInDegree">The rotation value in degrees. Valid for symbol and text geometry only.</param>
            <remarks>Default value 0 is used for Alignment.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.PutGeometryValue(System.String,System.Int16@,Intergraph.GTechnology.API.IGTPoint[],System.Double,System.Int32)">
            <summary>Method to set a component's geometry based on the FNO and FID properties, a component name, CID, and array of coordinates.</summary>
            <param name="ComponentName">The geometry component name.</param>
            <param name="CID">The geometry component ID.</param>
            <param name="Location">The 2-D position array that stores the X,Y location of the geometry.</param>
            <param name="RotationInDegree">The rotation value in degrees. Valid for symbol and text geometry only.</param>
            <param name="Alignment">The alignment value. Valid for text geometry only.</param>
            <remarks>Sets the geometry value to be written in the database.
            <para/>
            If the occurrence number (CID) is zero, Feature Loader will create a new occurrence of the specified geometry. This is an input/output variable to send back the occurrence number.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.PutAttributeValue(System.String,System.Int16@,System.String,System.Object)">
            <summary>Method to set an attribute value based on the FNO and FID properties, a component name, CID, and field name.</summary>
            <param name="ComponentName">The name of the component that has this attribute.</param>
            <param name="AttributeName">The attribute name that stores the value.</param>
            <param name="CID">The component ID.</param>
            <param name="InputValue">The attribute value to be stored.</param>
            <remarks>If the attribute name is G3E_*, an error results.
            <para/>
            If the occurrence number (CID) is zero, Feature Loader creates a new occurrence of the specified record. This is an input/output variable 
            to send back the occurrence number.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.GetAttributeValue(System.String,System.Int16,System.String)">
            <summary>Method to return an attribute value based on the FNO and FID properties, a component name, CID, and field name.</summary>
            <param name="ComponentName">The name of the component that has this attribute. This must match G3E_COMPONENT.G3E_NAME.</param>
            <param name="CID">The component ID.</param>
            <param name="AttributeName">The attribute name that stores the value. This must match G3E_ATTRIBUTE.G3E_FIELD.</param>
            <remarks>Do cleanup for the object. If the PutAttributeValue or PutGeometryValue method has been called, then a GetAttributeValue 
            on the specified component recordset that has a pending edit or AddNew is cancelled.</remarks>
            <returns>Attribute value.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.Update(System.String)">
            <summary>Method to mark the end of updates to an occurrence and prepare for a new occurrence.</summary>
            <param name="ComponentName">The component name to update.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.CancelUpdate(System.String)">
            <summary>Method to cancel the feature loading process.  This cancels the specified component's active occurrence.</summary>
            <param name="ComponentName">The name of the component record to cancel.</param>
            <remarks>Do cleanup for the object. If the PutAttributeValue or PutGeometryValue method has been called, then CancelUpdate on 
            the specified component recordset that has a pending edit, or AddNew will be cancelled.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.DiscardJobEdits">
            <summary>Method to discard any pending edits in the active job.</summary>
            <remarks>This method checks for pending edits for the active job and discards any it finds.
            <para/>The calling object is responsible for calling this method before passing any new data to GIS.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.BreakFeature(System.String,System.Int16,Intergraph.GTechnology.API.IGTPoint,System.String,System.Int32@,Intergraph.GTechnology.API.IGTPoint@)">
            <summary>Method to break the feature, specified by the FNO and FID properties, at the input point.</summary>
            <param name="ComponentName">The component name to be broken.</param>
            <param name="CID">The component ID.</param>
            <param name="NewFID">The new feature ID.</param>
            <param name="UndoDescription">The undo description.</param>
            <param name="BreakPoint">The 2-D position array that stores X,Y break location.</param>
            <param name="EndPoint">The 2-D position array that stores the X,Y end location.</param>
            <remarks>The new feature (NewFID) is from the break point (BreakPoint) to the end point (EndPoint).
            <para/>
            This method should be called after the CommitTrans and before the UpdateRelationship method.
            <para/>
            The BreakPoint must contain a break point that is exactly coincident with the component that 
            is to be broken. This may require that the break point be acquired by snap using the GTSnapService.
            <para/>
            The method raises an error if it fails.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.UpdateRelationship(System.Int16,System.Int32,System.String,System.Object@)">
            <summary>Method to establish a relationship between the features in the input collection and the feature identified by the FNO and FID properties.</summary>
            <param name="ActiveFNO">The active feature number.</param>
            <param name="ActiveFID">The active feature ID.</param>
            <param name="UndoDescription">The undo description string.</param>
            <param name="RelatedFeatures">The related features collection. Each member of the collection is of user-defined type GTRelatedFeature.</param>
            <remarks>Updates the ownership and connectivity for the specified feature. The implementation is responsible for sending in the related feature 
            information to Feature Loader. This should not be called if the feature is a replacement.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.GetRelationshipInfo(System.Int16,System.Int32)">
            <summary>Method to return a VB collection of GTRelatedFeature structures for features related to the FNO and FID properties.</summary>
            <param name="ActiveFNO">The active feature number.</param>
            <param name="ActiveFID">The active feature ID.</param>
            <remarks>This function returns the related features collection for the specified feature. Each member of the collection is of 
            user-defined type GTRelatedFeature.</remarks>
            <returns>A collection of GTRelatedFeature structures</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.GetComponentID(System.String)">
            <summary>Method to return an array of CIDs based on the FNO and FID properties, a component name.</summary>
            <param name="ComponentName">The component name.</param>
            <remarks>The method raises an error if it fails.</remarks>
            <returns>An array of CID's</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.Rollback">
            <summary>Method to terminate and discard changes in the current transaction.</summary>
            <remarks>This method is necessary for handling the potential error in processing the input file.
            <para/>Specifying the Rollback method calls UndoManager.Rollback.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.Undo(System.Int32)">
            <summary>Method to undo one or more transactions done within the current session.</summary>
            <param name="NumberOfTransactions">The number of operations to undo.</param>
            <remarks>Specifying the Undo method calls UndoManager.Undo, passing the count into that method.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureLoaderService.BroadcastDatabaseChanges">
            <summary>Method to notify the G/Technology product that changes have been made to the database.</summary>
            <remarks>Call this method once after passing all feature updates (new and edited) and once after all UpdateRelationships.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTFeatureLoaderService.FID">
            <summary>Property to return/set the active feature identifier.</summary>
            <remarks>Specify only if editing or replacing feature attributes. Get the FID of a newly added feature after calling the CommitTrans method.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTFeatureLoaderService.FNO">
            <summary>Property to return/set the active feature number.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTDisplayControlNodes">
            <summary>Intergraph G/Technology IGTDisplayControlNodes API</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDisplayControlNodes.Item(System.Int32)">
            <summary>Property to return a IGTDisplayControlNode object given an index.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDisplayControlNodes.Item(System.String)">
            <summary>Method to return a specific DisplayControlNode object given a DisplayControlNode's Key property.
            It returns null if DisplayControlNode's Key property is invalid or not found.</summary>
            <exception cref="T:System.ArgumentNullException">Thrown when DisplayControlNode's Key property is not provided.</exception>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTCompositePolygonGeometry">
            <summary>Intergraph G/Technology IGTCompositePolygonGeometry API.</summary>
            <remarks> IGTCompositePolygonGeometry represents a closed polygon formed by a linear combination
            of polylines and arcs. Conceptually, IGTCompositePolygonGeometry is just a collection of
            geometries, except that the geometry elements are required to touch end-to-end and the
            last point of the last element must be coincident with the first point of the first element.
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTCompositePolylineGeometry">
            <summary>Intergraph G/Technology IGTCompositePolylineGeometry API.</summary>
            <remarks>IGTCompositePolylineGeometry represents a linear combination of polylines and arcs.
            Conceptually, GTCompositePolylineGeometry is just a collection of geometries, except
            that the geometry elements are required to touch end-to-end.
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTGeometryCollection">
            <summary> Intergraph G/Technology IGTGeometryCollection API.</summary>
            <remarks>The IGTGeometryCollection object is a collection of geometry objects. These geometry objects are created apart from the IGTGeometryCollection object and then added to it. They can also be removed from the collection.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCollection.GetComponentKeypointIndexOffset(System.Int32)">
            <summary>
            The GetComponentKeypointIndexOffset function returns the offset from which keypoint indexes begin for a specific
            component in the given geometry object.
            </summary>
            <remarks>
            A geometry object which can have component geometries, such as a GeometryCollection object, contains all of the
            keypoints defined by its components. It is sometimes necessary to find out what the index of a keypoint defined by a
            certain component is in the scope of the parent geometry.
            <para/>
            Example:
            <para/>
            A certain GeometryCollection object, P, contains two components C1 and C2. C1 (a PolylineGeometry) has 5 keypoints, and
            C2 (an ArcGeometry) has 3 keypoints. Therefore, P has a total of 8 keypoints. To find the index of C2’s second keypoint
            within the scope of P, you can use GetComponentKeypointIndexOffset. The keypoint index offset for C2 in this case would
            be 5 because C1 has 5 keypoints. So C2’s second keypoint has an index of 7 ( 2 + 5) with respect to the list of
            keypoints in P.
            </remarks>
            <param name="keypoint_index">The index of the component.  Must be between 0 and Count-1.</param>
            <returns>Offset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCollection.GetParent(Intergraph.GTechnology.API.IGTGeometry)">
            <summary>
            The GetParent method takes a descendent geometry of this geometry and returns the immediate parent of the descendent.
            </summary>
            <param name="child_geometry">Some descendent of the root geometry object.</param>
            <remarks>
            The return value may be this geometry, if it is the immediate parent of the given <paramref name="child_geometry"/>.
            If the given <paramref name="child_geometry"/> is not really a descendant of this geometry, an exception is raised.
            </remarks>
            <returns>IGTGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the indicated index.
            </summary>
            <param name="index">The index number for the object to be removed. The index must be an integer type.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometryCollection.Count">
            <summary>
            Returns the number of elements in the collection.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometryCollection.IsReadOnly">
            <summary>
            GTGeometryCollection objects are never read-only, so this property always
            returns false.
            </summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCompositePolylineGeometry.ReplaceVertexByFillet(System.Int32,System.Double)">
            <summary>
            Replaces the vertex specified by the key point index argument on the linear or area geometry by a fillet with the
            specified radius.
            </summary>
            <remarks>
            For CompositePolyline geometries, keypoint_index must specify an interior vertex.
            <para/>
            For CompositePolygon geometries, keypoint_index may specify any vertex.
            <para/>
            The vertex is replaced by a fillet only if there is a line segment between (keypoint_index - 1) and keypoint_index
            vertices and there is a line segment between keypoint_index and (keypoint_index + 1) vertices.
            <para/>
            The vertex is replaced by a fillet only if the line segments adjacent to the specified vertex are modified. The fillet
            is not inserted if one or both of the adjacent line segments would be completely eliminated.
            <para/>
            <b>Valid case</b>
            <para/>
            There is a smooth transition between the fillet arc and the line segments adjacent to the vertex to replace. The vertex will be replaced.
            <para/>
            <img src="../AdditionalContent/ArcAPI9.gif" alt="Fillet Example1"/>
            <para/>
            <b>Invalid case</b>
            <para/>
            The radius is too large. A complete line segment would be eliminated and there would not be a smooth transition between the fillet arc and the adjacent line segment. The vertex will not be replaced.
            <para/>
            <img src="../AdditionalContent/ArcAPI10.gif" alt="Fillet Example2"/>
            <para/>
            Boundary geometry is not valid as the Geometry parameter. If a vertex of a boundary geometry has to be replaced by a fillet, custom code has to retrieve the boundary exterior or a hole where the vertex replacement should take place and pass this subgeometry the Geometry parameter.
            <para/>
            If KeyPointIndex specifies an interior vertex of a polyline item, the polyline item is broken into two new polyline items and the fillet arc is inserted between them.
            <para/>
            If KeyPointIndex specifies a boundary vertex between two polyline items, the fillet arc is inserted between them. The last vertex of the before item is adjusted to become connected to the start point of the fillet arc. The first vertex of the after item is adjusted to become connected to the end point of the fillet arc.
            <para/>
            If KeyPointIndex specifies the first vertex of the composite polygon geometry, the fillet arc is inserted as the first item and the last vertex is adjusted appropriately so that the shape remains closed. The start point of the fillet arc thus becomes the first keypoint of the composite polygon.
            <para/>
            If KeyPointIndex specifies the last vertex of the composite polygon geometry, the fillet arc is inserted as the last item, and the first vertex is adjusted appropriately so that the shape remains closed. The end point of the fillet arc thus becomes the last keypoint of the composite polygon.
            <para/>
            <b>Example:</b> Input Geometry is a composite polygon consisting of one polyline item.
            <para/>
            <img src="../AdditionalContent/ArcAPI11.gif" alt="Fillet Example3"/>
            <para/>
            <b>KeyPointIndex = 1</b>
            <para/>
            The fillet arc is the first item of the composite polygon. The polyline is the second item. The last point of the polyline has been adjusted so that it is identical with the start point of the arc.
            <para/>
            <img src="../AdditionalContent/ArcAPI12.gif" alt="Fillet Example4"/>
            <para/>
            <b>KeyPointIndex = 5</b>
            <para/>
            The polyline is the first item of the composite polygon. Fillet arc is the second item. The first item of the polyline is adjusted so that it is identical with the start point of the fillet arc.
            <para/>
            <img src="../AdditionalContent/ArcAPI13.gif" alt="Fillet Example5"/>
            <para/>
            Positional tolerance must be greater than zero for all calculations to complete successfully.
            </remarks>
            <param name="keypoint_index">The key point index of the vertex to be replaced.</param>
            <param name="radius">The radius of the fillet arc.</param>
            <returns>GTReplaceVertexByFilletConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCompositePolygonGeometry.Contains(Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            The Contains function determines whether a point is inside this polygon.  The polygon is stroked to create a
            simple polygon.
            </summary>
            <remarks>
            Returns gtiptOutside if the point is outside the polygon, gtiptOnPolygon if on the polygon, and gtiptInside if it is in
            the polygon.
            </remarks>
            <param name="point">IGTPoint used to determined whether it is inside or outside of the polygon.</param>
            <returns>Result of testing whether a point is inside a polygon.</returns>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTMathLibraryException">
            <summary>
            GTMathLibraryException is thrown by some geometry math functions if an error occurs.
            </summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTMathLibraryException.GetMathException(System.Exception)">
            <remarks>For internal use only.</remarks>
            <summary>
            Call this function after calling a PGeoMath or PAdvGMth function that raised an
            exception.  This function returns a GTMathLibraryException with the information obtained from
            GetGeoMathLastError, and attaches the provided Exception as the InnerException.
            </summary>
            <param name="source_ex">Source exception.</param>
            <returns>GTMathLibraryException object.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTMathLibraryException.#ctor(System.Int32,System.String,System.String,System.String,System.Int32,System.Exception)">
            <summary>Method to initialize a new instance of GTMathLibraryException.</summary>
            <remarks>For internal use only.</remarks>
            <param name="err_number">Error number</param>
            <param name="source">Source</param>
            <param name="err_description">Error description</param>
            <param name="help_filename">Help filename</param>
            <param name="help_context_id">Context ID</param>
            <param name="inner_ex">Inner Exception</param>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTFocusBaseEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTCustomCommandHelper events - GainedFocus and LostFocus.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTFocusBaseEventArgs.#ctor(Intergraph.GTechnology.API.IGTMapWindow@)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTFocusBaseEventArgs class.</summary>
            <param name="MapWindow">MapWindow argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTFocusBaseEventArgs.MapWindow">
            <summary>MapWindow argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTRelationshipService">
            <summary>Intergraph G/Technology IGTRelationshipService API.</summary>
            <remarks>
            The IGTRelationshipService object is used in the editing and review of feature relationships for relationship instances derived from the following types: 
            <list type="bullet">
            <item>Node-Edge Connectivity</item>
            <item>Node-Ordered Connectivity</item>
            <item>Ownership</item>
            <item>Many-to-Many Ownership</item>
            <item>Details</item>
            <item>Dimensioning</item>
            <item>Stationing</item>
            </list>
            <para/>This object could be used by a custom command to edit or review a feature's relationships.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.SilentEstablish(System.Int16,Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method to silently establish relationships.</summary>
            <param name="RNO">The relationship instance number for the relationship being established.</param>
            <param name="EstablishToFeature">The IGTKeyObject of the feature that is being related.</param>
            <remarks>Default value gtrelRelationshipOrdinal1 is used for ActiveFeatureRelationshipOrdinal and EstablishToFeatureRelationshipOrdinal.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.SilentEstablish(System.Int16,Intergraph.GTechnology.API.IGTKeyObject,Intergraph.GTechnology.API.GTRelationshipOrdinalConstants)">
            <summary>Method to silently establish relationships.</summary>
            <param name="RNO">The relationship instance number for the relationship being established.</param>
            <param name="EstablishToFeature">The IGTKeyObject of the feature that is being related.</param>
            <param name="ActiveFeatureRelationshipOrdinal">If the type of relationship described in the RNO parameter is one that requires relationship point information (NEC, OWN), then 
            this is the integer description of the point on which the active feature will be related to the RelateTo feature.
            <para/>
            <b>Example:</b> If the ActiveFeature is a conductor and the RelateTo feature is to be connected at Node 2, this parameter would be set to 2.</param>
            <remarks>
            Default value gtrelRelationshipOrdinal1 is used for EstablishToFeatureRelationshipOrdinal.
            <para/>
            You cannot use this method to silently establish a relationship with a nongraphic feature.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.SilentEstablish(System.Int16,Intergraph.GTechnology.API.IGTKeyObject,Intergraph.GTechnology.API.GTRelationshipOrdinalConstants,Intergraph.GTechnology.API.GTRelationshipOrdinalConstants)">
            <summary>Method to silently establish relationships.</summary>
            <param name="RNO">The relationship instance number for the relationship being established.</param>
            <param name="EstablishToFeature">The IGTKeyObject of the feature that is being related.</param>
            <param name="ActiveFeatureRelationshipOrdinal">If the type of relationship described in the RNO parameter is one that requires relationship point information (NEC, OWN), then 
            this is the integer description of the point on which the active feature will be related to the RelateTo feature.
            <para/>
            <b>Example:</b> If the ActiveFeature is a conductor and the RelateTo feature is to be connected at Node 2, this parameter would be set to 2.</param>
            <param name="EstablishToFeatureRelationshipOrdinal">If the type of relationship described in the RNO parameter is one that requires relationship point information (NEC, OWN), then 
            this is the integer description of the point on which the active feature will be related to the RelateTo feature.</param>
            <remarks>The SilentEstablish method is used when:
            <para/>
            <list type="bullet">
            <item>The relationship instance to be used is known.</item>
            <item>The exact pair of features to be related is known.</item>
            <item>The exact relationship point information is known (if applicable for the relationship type given in the RNO parameter).</item>
            </list>
            <para/>
            The two features are given as well as the relationship instance to use in relating the two. If this is a relationship instance that is concerned with relationship point information (NEC and OWN), then 
            these parameters should be set with the correct node or owner ordinal to use for the Active or EstablishTo feature. An error is returned if the constant gtrelRelationshipOrdinalAll is used with either 
            of these parameters.
            <para/>
            Generally, AllowSilentEstablish should be called to ensure that there are not any relational attribute conflicts between the ActiveFeature and EstablishToFeature.
            <para/>
            You cannot use this method to silently establish a relationship with a nongraphic feature.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.AllowDelete(System.Int16)">
            <summary>Method to verify if relationships may be deleted.</summary>
            <param name="RNO">The relationship instance number for the relationship being established.</param>
            <remarks>You call the AllowDelete method to determine if there is some reason the relationships of the ActiveFeature should not be deleted. This method can be called before SilentDelete.
            <para/>The CNO and CID properties of the ActiveFeature must be set to reflect the triggering component instance for which relationships will be deleted.
            <para/>If any relationship instance has a problem with the delete, then False is returned.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.SilentDelete(System.Int16)">
            <summary>Method to silently delete relationships.</summary>
            <param name="RNO">The relationship instance number for the relationships being deleted.</param>
            <remarks>Default value gtrelRelationshipOrdinalAll is used for RelationshipOrdinal.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.SilentDelete(System.Int16,Intergraph.GTechnology.API.GTRelationshipOrdinalConstants)">
            <summary>Method to silently delete relationships.</summary>
            <param name="RNO">The relationship instance number for the relationships being deleted.</param>
            <param name="RelationshipOrdinal">The relationship ordinal. Node number or Owner ID number, for example, at 
            which relationships should be deleted. If omitted, all relationships will be deleted.</param>
            <remarks>This method can be used to delete relationships for the relationship instance given in the RNO parameter.
            <para/>The CNO and CID properties of the ActiveFeature must be set to reflect the triggering component instance for 
            which relationships will be deleted.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.Reestablish(System.Int16,Intergraph.GTechnology.API.IGTMapWindow)">
            <summary>Method to reestablish relationships.</summary>
            <param name="RNO">The relationship instance number for the relationships being reestablished.</param>
            <param name="MapWindow">The MapWindow in which the active feature resides.</param>
            <remarks>Default value null is used for PreviousTriggeringGeometry.</remarks>
            <returns>GTReestablishStatusConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.Reestablish(System.Int16,Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTGeometry)">
            <summary>Method to reestablish relationships.</summary>
            <param name="RNO">The relationship instance number for the relationships being reestablished.</param>
            <param name="MapWindow">The MapWindow in which the active feature resides.</param>
            <param name="PreviousTriggeringGeometry">The geometry object of the triggering component of the ActiveFeature.</param>
            <remarks>Reestablish should be used when a complete reevaluation of relationships to the ActiveFeature is necessary, such as when a feature is moved.
            <para/>
            ReestablishAll takes the current state of the feature's relationships and recalculates relationship candidates. Relationships are recomputed based on 
            the latest state of the ActiveFeature. Existing relationships may be lost or maintained based on tolerance and other relationship parameters.
            <para/>
            If the triggering geometry of the ActiveFeature was modified, the previous geometry should be provided, if possible. By providing the geometry in its 
            prior state, the software may be able to act more efficiently.
            <para/>
            The CNO and CID properties of the ActiveFeature must be set to reflect the triggering component instance of the ActiveFeature for which relationships 
            are being reestablished.</remarks>
            <returns>GTReestablishStatusConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.ReestablishWithCandidatePoint(System.Int16,Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to reestablish relationships by providing a point for candidate gathering.</summary>
            <param name="RNO">The relationship instance number for the relationships to be reestablished.</param>
            <param name="MapWindow">The MapWindow in which the active feature resides.</param>
            <param name="CandidateLocatePoint">The point at which relationship candidates should be gathered.</param>
            <remarks>To resolve any candidate or relational ambiguities, the ReestablishWithCandidatePoint method can present GUI to the user.</remarks>
            <returns>GTReestablishStatusConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.AllowSilentEstablish(Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method to verify if relationships may be established.</summary>
            <param name="CandidateFeature">The IGTKeyObject of the candidate feature. The KeyObject must have been obtained by a call to NewFeature or OpenFeature.</param>
            <remarks>This method is to be called before SilentEstablish to ensure that there are no relational attribute conflicts.
            <para/>
            <b>Example:</b> Call this routine to determine if there is a problem connecting two different cable types such as fiber to copper.
            <para/>
            This method returns False if an attribute conflict is found.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.GetRelatedFeatures(System.Int16)">
            <summary>Method to get features related to the ActiveFeature.</summary>
            <param name="RNO">The relationship instance number for which relationships are to be interrogated.</param>
            <remarks>Default value gtrelRelationshipOrdinalAll is used for RelationshipOrdinal.</remarks>
            <returns>IGTKeyObjects</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.GetRelatedFeatures(System.Int16,Intergraph.GTechnology.API.GTRelationshipOrdinalConstants)">
            <summary>Method to get features related to the ActiveFeature.</summary>
            <param name="RNO">The relationship instance number for which relationships are to be interrogated.</param>
            <param name="RelationshipOrdinal">The relationship ordinal for which related features are to be retrieved.
            <para/><b>Example:</b> If only those features at a given node value are desired, this parameter would be used 
            to define that node—1 or 2, for example.</param>
            <remarks>This method finds all features related to the ActiveFeature and returns them in a IGTKeyObjects collection.
            <para/>
            The user can—but is not required to—set the CNO and CID properties of the ActiveFeature when reviewing detail or dimensioning 
            relationships. CNO and CID are not needed for other relationships. This is useful when trying to find, for instance, which 
            referencing feature references the detail window in which a particular cable component resides.
            <para/>
            Note that the IGTKeyObjects returned have been opened and may be used immediately in edit operations.</remarks>
            <returns>IGTKeyObjects</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.GetCandidatesAtPoint(System.Int16,Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to locate relationship candidates at a given point.</summary>
            <param name="RNO">The relationship instance number for which candidates are to be gathered and highlighted.</param>
            <param name="MapWindow">The MapWindow in which the active feature resides.</param>
            <param name="CandidateLocatePoint">The IGTPoint that defines the location in the IGTMapWindow at which candidates are to be gathered.</param>
            <remarks>Default value true is used for Highlight.</remarks>
            <returns>IGTDDCKeyObjects</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.GetCandidatesAtPoint(System.Int16,Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint,System.Boolean)">
            <summary>Method to locate relationship candidates at a given point.</summary>
            <param name="RNO">The relationship instance number for which candidates are to be gathered and highlighted.</param>
            <param name="MapWindow">The MapWindow in which the active feature resides.</param>
            <param name="CandidateLocatePoint">The IGTPoint that defines the location in the IGTMapWindow at which candidates are to be gathered.</param>
            <param name="Highlight">Should candidates be highlighted in the given IGTMapWindow or not? Defaults to True.</param>
            <remarks>This method will find all existing relationships and all relationships existing in the current transaction.</remarks>
            <returns>IGTDDCKeyObjects</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.GetDetailWindowInformation(System.Int16)">
            <summary>Method to find the detail windows which are referenced by a given geographic referencing feature.</summary>
            <param name="RNO">The relationship instance number for which relationships are to be interrogated.</param>
            <remarks>This method returns a collection of ADODB.Recordset objects containing rows that have referencing detail attribute information 
            such as detail name, legend, and MBR. The recordset corresponds to the component defined in G3E_DETAIL.G3E_ATTRIBUTECNO for the corresponding 
            reference feature.</remarks>
            <returns>IGTRecordsets</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTRelationshipService.GetGeographicReferencingFeatures(System.Int16)">
            <summary>Method to find geographic referencing feature(s) that point to a detail window in which the active feature is contained.</summary>
            <param name="RNO">The relationship instance number for which relationships are to be interrogated.</param>
            <remarks>The returned IGTKeyObjects will be open and ready for edit.</remarks>
            <returns>IGTKeyObjects</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTRelationshipService.ActiveFeature">
            <summary>Property to return/set the ActiveFeature object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTRelationshipService.DataContext">
            <summary>Property to return/set the DataContext object.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTRedlineGroupDataTypeConstants">
            <summary>Intergraph G/Technology Redline Group Data Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRedlineGroupDataTypeConstants.gtrgdtRedlineLines">
            <summary>Redline Lines</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRedlineGroupDataTypeConstants.gtrgdtRedlineAreas">
            <summary>Redline Areas</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRedlineGroupDataTypeConstants.gtrgdtRedlinePoints">
            <summary>Redline Points</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRedlineGroupDataTypeConstants.gtrgdtRedlineText">
            <summary>Redline Text</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPlotRedline">
            <summary>Intergraph G/Technology IGTPlotRedline API.</summary>
            <remarks>IGTPlotRedline provides access to a redline element of a plot.
            <para/>The AutomaticTextSource, AutomaticTextFrame, and AutomaticTextField 
            properties are used together to define an automatic field. Only text redline 
            elements can be defined as automatic fields. Setting or reading these properties 
            for other redline elements raises an exception.
            <para/>The following table illustrates the valid combinations of these three properties:
            <para/>
            <list type="table">
            <listheader>
            <term>AutomaticTextSource</term>
            <term>AutomaticTextFrame</term>
            <description>AutomaticTextFrame</description>
            </listheader>
            <item>
            <term>gtpatNone</term>
            <term>Not used</term>
            <description>Not used</description>
            </item>
            <item>
            <term>gtpatSystemDate</term>
            <term>Not used</term>
            <description>Not used</description>
            </item>
            <item>
            <term>gtpatSystemTime</term>
            <term>Not used</term>
            <description>Not used</description>
            </item>
            <item>
            <term>gtpatSystemUser</term>
            <term>Not used</term>
            <description>Not used</description>
            </item>
            <item>
            <term>gtpatPlotByQuery</term>
            <term>Not used</term>
            <description>Field name from query results.</description>
            </item>
            <item>
            <term>gtpatMapFrameByQuery</term>
            <term>Map frame name</term>
            <description>Field name from query results.</description>
            </item>
            <item>
            <term>gtpatMapFrameByScale</term>
            <term>Map frame name</term>
            <description>Not used</description>
            </item>
            <item>
            <term>gtpatMapFrameByRatio</term>
            <term>Map frame name</term>
            <description>Not used</description>
            </item>
            </list>
            <para/>
            When reading these properties, you must first get the AutomaticTextSource property value 
            and, from that, determine whether the other properties are meaningful. To set the AutomaticTextSource 
            property to a different value, the AutomaticTextFrame and AutomaticTextField properties must have values 
            that are valid for the desired new type of automatic text.
            <para/>
            <b>Examples</b>
            <para/>
            <b>To change AutomaticTextSource from gtpatNone to gtpatMapFrameByQuery:</b>
            <para/>
            First set AutomaticTextFrame to the name of the frame you want to associate with the text and set AutomaticTextField 
            to the name of the field from the query. Then set AutomaticTextSource to gtpatMapFrameByQuery.
            <para/>
            <b>To change AutomaticTextSource from gtpatPlotByQuery to gtpatMapFrameByQuery, but keep the same field name:</b>
            <para/>
            AutomaticTextField is already set to a valid field name; set AutomaticTextFrame to a valid frame name before setting 
            AutomaticTextSource to gtpatMapFrameByQuery.
            <para/>
            <b>To change AutomaticTextSource from gtpatSystemDate to gtpatMapFrameByScale:</b>
            <para/>
            Set AutomaticTextFrame to a valid frame name; then set AutomaticTextSource.
            <para/>
            <b>To change AutomaticTextSource from gtpatMapFrameByQuery to gtpatPlotByQuery, keeping the same field name:</b>
            <para/>
            You need not change any other properties before setting AutomaticTextSource. AutomaticTextField will retain its existing 
            value, and AutomaticTextFrame will become invalid.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotRedline.Delete">
            <summary>Method to delete this redline.</summary>
            <remarks>The IGTPlotRedline object's properties and methods raise an error if called 
            after the Delete method has been called once.
            <para/>
            This method also unselects all redlines that are currently selected.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.AutomaticTextField">
            <summary>Property to return/set the query field name for an automatic text field.</summary>
            <remarks>You must set this property before setting AutomaticTextSource to certain values.
            <para/>Setting this property for redlines that are not text elements raises an exception.
            <para/>If the specified field does not exist in the results of the query associated with 
            the automatic field, the redline text will display an error string when the automatic fields 
            are updated.
            <para/>This property cannot be set to the empty string.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.AutomaticTextFrame">
            <summary>Property to return/set the plot frame name associated with an automatic text field.</summary>
            <remarks>The value of this property must be the name of a valid map frame in the plot containing this redline, for 
            those values of AutomaticTextSource where this property is valid.
            <para/>You must set this property before setting AutomaticTextSource to certain values.
            <para/>Setting this property for redlines that are not text elements raises an exception.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.AutomaticTextSource">
            <summary>Property to return/set the source for an automatic text field.</summary>
            <remarks>For redline elements other than text, accessing this property raises an exception. For text 
            elements that are not defined as an automatic field, this property returns gtpatNone.
            <para/>Before setting this property to gtpatPlotByQuery or gtpatMapFrameByQuery, you must first set the 
            AutomaticTextField property to the name of the field returned by the query that will supply the text.
            <para/>Before setting this property to gtpatMapFrameByQuery, gtpatMapFrameByScale, or gtpatMapFrameByRatio, you 
            must first set the AutomaticTextFrame property to the name of a valid map frame to which the automatic field is 
            to be associated.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.Frame">
            <summary>Property to return the IGTPlotFrame associated with this redline.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.Geometry">
            <summary>Property to return/set the geometry associated with this redline element.</summary>
            <remarks>The type of geometry returned depends on the type of redline element.
            <list type="Bullet">
            <item>For text, the geometry is a IGTTextPointGeometry.</item> 
            <item>For lines, the geometry is always a IGTPolylineGeometry.</item> 
            <item>For areas, the geometry is always a IGTPolygonGeometry, even if the 
            original redline was created as a rectangle.</item>
            </list>
            <para/>
            This property raises an error for a redline that corresponds to a IGTPlotFrame. To 
            modify the position and extents of a plot frame, use the Range property of IGTPlotFrame. See 
            also the ClipGeometry property of IGTPlotFrame.
            <para/>
            All geometry coordinates for redlines are expressed in paper coordinates.
            <para/>The object returned by this property is a copy of the geometry. If you modify the object 
            returned, it will not affect the redline element unless you set the Geometry property with the 
            modified geometry object.
            <para/>While G/Technology does not currently support composite geometries for redlines, you should 
            write your code to handle IGTCompositePolygonGeometry and IGTCompositePolylineGeometry as well as 
            IGTPolygonGeometry and IGTPolylineGeometry.
            <para/>After modifying this property, you must call the IGTApplication's RefreshWindows method to 
            cause the redline to be redrawn.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.StyleID">
            <summary>Property to return/set the style ID used to symbolize this redline.</summary>
            <remarks>The style you specify must be an appropriate style type for the type of redline element.
            <para/>
            After modifying this property, you must call the IGTApplication's RefreshWindows method to cause the redline to be redrawn.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.Symbology">
            <summary>Property to return/set the symbology overrides of the redline element.</summary>
            <remarks>If no override has been set, the corresponding property of the IGTSymbology object will be null.
            <para/>
            You can use GTStyleColorConstants instead of a specific RGB value for the Color and FillColor properties of the 
            IGTSymbology object.
            <para/>
            After modifying this property, you must call the IGTApplication's RefreshWindows method to cause the redline to be redrawn.
            <para/>
            You must set this property after setting the properties of the IGTSymbology object. Modifying the properties of the IGTSymbology 
            object itself has no effect unless you then set the Symbology property.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.Type">
            <summary>Property to return the type of this redline element.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.GroupNumber">
            <summary>Property to return the group number of this redline.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.ObjectID">
            <summary>Property to return/set the object ID of this redline.</summary>
            <remarks>For most redlines, this property is zero. However, when the redline 
            geometry is created using a redline group interface, this property is assigned 
            the G3E_REDLINEGROUPIFACE.G3E_OBJECTID.
            <para/>When the redline geometry is created using the Insert Legend command, this 
            property is assigned the value, gtroiInsertLegend (-1).</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotRedline.UserTag">
            <summary>Property to return/set a user-defined string associated with this redline.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTNamedPlots">
            <summary>Intergraph G/Technology IGTNamedPlots API.</summary>
            <remarks>
            The IGTNamedPlots object provides a collection of named plots in the current workspace. This collection can be obtained from the IGTApplication.Named Plots property. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTNamedPlots.Remove(System.String)">
            <summary>Method to remove a IGTNamedPlot from the collection.</summary>
            <param name="PlotName">The name of the plot.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when PlotName is null or empty.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTNamedPlots.Remove(System.Int32)">
            <summary>Method to remove a IGTNamedPlot from the collection.</summary>
            <param name="index">The zero-based numeric index of the plot.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTNamedPlots.GetEnumerator">
            <summary>
            Method to return an enumerator that iterates through the items.
            </summary>
            <returns>IEnumerator</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTNamedPlots.Item(System.String)">
            <summary>Property to return a specific IGTNamedPlot in the collection.</summary>
            <param name="PlotName">The name of the plot.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when PlotName is null or empty.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTNamedPlots.Item(System.Int32)">
            <summary>Property to return a specific IGTNamedPlot in the collection.</summary>
            <param name="index">The zero-based numeric index of the plot.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTNamedPlots.Count">
            <summary>Property to return the number of Named Plot objects in this collection.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTGeometryCreationService">
            <summary>Intergraph G/Technology IGTGeometryCreationService API.</summary>
            <remarks>
            The IGTGeometryCreationService object constructs geometry by appending points or subgeometries. As the geometry is constructed, it is displayed in a map window. In addition, the service can validate the constructed geometries. Multiple geometries can be created and displayed simultaneously in one instance of IGTGeometryCreationService. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.AddGeometry(Intergraph.GTechnology.API.IGTGeometry,System.Int32)">
            <summary>Method to add the geometry to the collection of geometries of IGTGeometryCreationService.</summary>
            <param name="Geometry">The geometry object to be added.</param>
            <param name="StyleID">G3E_SNO specifying the style definition to be used to display geometry. Alternately, the StyleID can be one of the GTStyleIDConstants values.</param>
            <remarks>The method returns the index of the geometry that can be used to reference the geometry when manipulating it later.
            <para/>
            The geometry is immediately rendered in the map window referenced by the TargetMapWindow property.
            <para/>
            An error is raised for a nonexistent StyleID.</remarks>
            <returns>Index of the geometry added to the collection.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.GetGeometry(System.Int32)">
            <summary>Method to return the specified geometry.</summary>
            <param name="Index">The index of the geometry to be returned.</param>
            <remarks>The dynamic point set by the DynamicPoint property is not present in the 
            geometry object returned by this method. 
            <para/>
            Polygon and composite polygon geometries are 
            closed before they are returned. If a polygon is not closed, this method appends a point 
            that is identical with the polygon's first point. If a composite polygon is not closed and the 
            last subgeometry is a polyline, an additional point is appended to it that is identical with the 
            composite polygon's first point. If a composite polygon is not closed and the last subgeometry is 
            a complete arc (all three points appended), a two-point polyline is appended connecting the arc end 
            point and composite polygon first point. If the arc is not complete, the end point, identical with the 
            composite polygon first point, is appended.
            <para/>
            The geometry is also cleaned up: Any polylines that have fewer than two points are removed.
            <para/>
            <b>Example:</b>  You append the first point (A) to a composite polyline. Then you append entire arc 
            geometry through AppendGeometryToComposite and the first point of the arc is identical with point A. This 
            leads to a situation where in the composite polyline you have two subgeometries, the "polyline with only the 
            point A" and an arc. Since this is invalid, the polyline will be removed when calling GetGeometry.
            <para/>
            When working with boundaries, this method first checks to see if the exterior overlaps any of the holes. If it 
            does, an error is raised. This is an invalid condition.
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.</remarks>
            <returns>IGTGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.GetStyleID(System.Int32)">
            <summary>Method to return the style ID corresponding to the geometry specified by the index argument.</summary>
            <param name="Index">The index of the geometry for which the G3E_SNO is being retrieved.</param>
            <remarks>Index is the value returned by AddGeometry or CreateGeometry.</remarks>
            <returns>Style ID</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.RemoveGeometry(System.Int32)">
            <summary>Method to remove the specified geometry from the collection of geometries of IGTGeometryCreationService.</summary>
            <param name="Index">Index of the geometry to be removed.</param>
            <remarks>The specified geometry will no longer be displayed in the map window referenced by the TargetMapWindow property.
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.RemoveAllGeometries">
            <summary>Method to remove all geometries from the collection of geometries of IGTGeometryCreationService.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.AppendPoint(System.Int32,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to add the specified point to the specified geometry.</summary>
            <param name="Index">Index of the geometry to which the point will be appended.</param>
            <param name="point">The point to be appended.</param>
            <remarks>If the geometry referenced by Index is a boundary geometry, the point is appended to its 
            exterior. It is not possible to appended points to a boundary's holes. Construct the hole geometries as 
            separate geometries first and then add them to the boundary geometry using AddHole.
            <para/>
            The geometry is immediately redrawn in the map window referenced by the TargetMapWindow property.
            <para/>
            This method should be called twice when working with oriented point geometries and text point geometries. The 
            first appended point determines the origin. The second point determines the orientation relative to the origin.
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.RemoveLastPoint(System.Int32)">
            <summary>Method to remove the last appended point from the specified geometry.</summary>
            <param name="Index">Index of the geometry from which the last point will be removed.</param>
            <remarks>The geometry will be redrawn in the map window referenced by the TargetMapWindow property. 
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.RemoveAllPoints">
            <summary>Method to remove all points from the specified geometry. If no geometry is specified, this method will remove all points from all geometries.</summary>
            <remarks>Default value -1 is used for Index.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.RemoveAllPoints(System.Int32)">
            <summary>Method to remove all points from the specified geometry. If no geometry is specified, this method will remove all points from all geometries.</summary>
            <param name="Index">Index of the geometry from which the points will be removed.</param>
            <remarks>Geometries will no longer be displayed in the map window referenced by the TargetMapWindow property.
            <para/>
            This method is different from RemoveAllGeometries because RemoveAllPoints removes no geometries from IGTGeometryCreationService. This method keeps the 
            geometries in IGTGeometryCreationService. However, it resets the geometries as if they were added by CreateGeometry.
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.RemoveLastGeometryFromComposite(System.Int32)">
            <summary>Method to remove the last sub-geometry from the specified composite geometry.</summary>
            <param name="Index">Index of the composite polygon or composite polyline geometry from which the last subgeometry will be removed.</param>
            <remarks>The geometry referenced by Index must be a composite polyline, a composite polygon, or a boundary. If boundary geometry, its exterior must be a composite polygon. The subgeometry is removed from its exterior.
            <para/>
            The geometry will be redrawn in the map window referenced by the TargetMapWindow property.
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.AppendGeometryToComposite(System.Int32,Intergraph.GTechnology.API.IGTGeometry)">
            <summary>Method to add the specified geometry as the sub-geometry of the specified composite geometry.</summary>
            <param name="Index">Index of the composite polyline or composite polygon to which the subgeometry will be added.</param>
            <param name="NewGeometry">The subgeometry to be added.</param>
            <remarks>The geometry referenced by Index must be a composite polyline, a composite polygon or a boundary. If it is a boundary 
            geometry, its exterior must be a composite polygon. The subgeometry is added to the exterior. 
            <para/>
            It is not possible to add subgeometries to a boundary's holes. Construct the hole geometries as separate geometries first and add 
            them to the boundary geometry using AddHole.
            <para/>
            The geometry to be added is always added as a new subgeometry. If there already are some subgeometries in the composite polyline or 
            composite polygon and the subgeometry being appended is not empty, the last point of the last subgeometry is moved so that it is identical 
            with the first point of the subgeometry being appended.
            <para/>
            If you do not want to move the last point, then call AppendPoint with the first point of the subgeometry being appended.
            <para/>
            The geometry is immediately redrawn in the map window referenced by the TargetMapWindow property.
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.RefreshDisplay">
            <summary>Method to redraw the constructed geometries in the map window.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.CreateGeometry(System.String,System.Int32)">
            <summary>Method to create a geometry of the specified type. The IGTGeometryCreationService will keep the created geometry. Returns the index of the new geometry created.</summary>
            <param name="GeometryType">The geometry type to be created. The value of this parameter should be one of the items in the enumerated type GTGeometryTypeConstants.</param>
            <param name="StyleID">G3E_SNO specifying the style definition to be used to display geometry. Alternately, the StyleID can be one of the GTStyleIDConstants values.</param>
            <remarks>The method returns the index of the geometry that can be used to reference the geometry when manipulating it later.
            <para/>
            The created geometry is empty and has to be further updated by other methods of the IGTGeometryCreationService.
            <para/>
            <B>Example:</B> This method creates a polyline geometry with zero points. AppendPoint has to be called to append each point of this polyline geometry.
            <para/>
            If a boundary geometry is created, its exterior is automatically created. It is a composite polygon.
            <para/>
            An error is raised for a nonexistent StyleID.
            </remarks>
            <returns>int</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.IsGeometryValid(System.Int32)">
            <summary>Method to check if the specified geometry is valid.</summary>
            <param name="Index">Index of the geometry to check for validity.</param>
            <remarks>These are the conditions when the geometries are considered invalid:
            <para/>
            <list type="table">
            <listheader>
            <term>Geometry Type</term>
            <description>Invalid when</description>
            </listheader>
            <item>
            <term>Point</term>
            <description>Created by appending points and no point has been appended yet.</description>
            </item>
            <item>
            <term>Oriented Point</term>
            <description>Created by appending points and fewer than two points have been appended.</description>
            </item>
            <item>
            <term>Text Point</term>
            <description>Created by appending points and no point has been appended yet.</description>
            </item>
            <item>
            <term>Polyline</term>
            <description>Created by appending points and fewer than two points have been appended.</description>
            </item>
            <item>
            <term>Polygon</term>
            <description>The geometry has fewer than three points.</description>
            </item>
            <item>
            <term>Arc</term>
            <description>Created by appending points and fewer than three points have been appended.</description>
            </item>
            <item>
            <term>Composite Polyline</term>
            <description>It has fewer than two points; or it has more than two points but the last subgeometry is an arc and it has fewer than three points.</description>
            </item>
            <item>
            <term>Composite Polygon</term>
            <description>It has fewer than three points; or it has more than three points but the last subgeometry is an arc and it has fewer than three points.</description>
            </item>
            <item>
            <term>Boundary</term>
            <description>The exterior is invalid.</description>
            </item>
            </list>
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.
            </remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.IsGeometryComplete(System.Int32)">
            <summary>Method to check if the specified geometry is complete.</summary>
            <param name="Index">Index of the geometry to check for completeness.</param>
            <remarks>These are the conditions when the geometries are considered incomplete:
            <para/>
            <list type="table">
            <listheader>
            <term>Geometry Type</term>
            <description>Incomplete when</description>
            </listheader>
            <item>
            <term>Point</term>
            <description>Created by appending points and no point has been appended yet.</description>
            </item>
            <item>
            <term>Oriented Point</term>
            <description>Created by appending points and fewer than two points have been appended.</description>
            </item>
            <item>
            <term>Text Point</term>
            <description>Created by appending points and no point has been appended yet.</description>
            </item>
            <item>
            <term>Polyline</term>
            <description>Always incomplete. Use IsGeometyrValid to determine whether there is a sufficient number of points in the geometry.</description>
            </item>
            <item>
            <term>Polygon</term>
            <description>The geometry has fewer than three points.</description>
            </item>
            <item>
            <term>Arc</term>
            <description>Created by appending points and fewer than three points have been appended.</description>
            </item>
            <item>
            <term>Composite Polyline, Composite Polygon</term>
            <description>It has no subgeometry or the last subgeometry is not complete.</description>
            </item>
            <item>
            <term>Boundary</term>
            <description>The exterior is incomplete.</description>
            </item>
            </list>
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.
            </remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.ContainsKickbacks(System.Int32)">
            <summary>Method to check if the specified geometry contains kickbacks. If no kickbacks are present, returns False.</summary>
            <param name="Index">Index of the geometry to check.</param>
            <remarks>True is returned if the geometry referenced by Index contains at least one kickback. False is returned if the geometry contains no kickback.
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.ContainsLoops(System.Int32)">
            <summary>Method to check if the specified geometry contains loops. If no loops are present, returns False.</summary>
            <param name="Index">Index of the geometry to check.</param>
            <remarks>True is returned if the geometry referenced by Index contains at least one loop. False is returned if the geometry 
            contains no loop.
            <para/>
            Index is the value returned by AddGeometry or CreateGeometry.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.AddHole(System.Int32,Intergraph.GTechnology.API.IGTGeometry)">
            <summary>Method to add a hole (polygon or composite polygon) geometry to the specified boundary geometry.</summary>
            <param name="Index">Index of the boundary geometry to which the hole is being added.</param>
            <param name="NewHole">The hole geometry to be added. Must be polygon or composite polygon geometry.</param>
            <remarks>The method returns the index of the hole in the boundary geometry. This index can be used to retrieve the hole 
            geometry using the GetHole method or to remove the hole using the RemoveHole method. If the hole being added overlaps 
            another hole in the boundary geometry, IGTGeometryCreationService raises an error. The hole geometry is immediately rendered 
            in the map window referenced by the TargetMapWindow property.</remarks>
            <returns>int</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.RemoveHole(System.Int32,System.Int32)">
            <summary>Method to remove the specified hole geometry from the specified boundary geometry.</summary>
            <param name="Index">Index of the boundary geometry from which the hole will be removed.</param>
            <param name="HoleIndex">Index of the hole that will be removed.</param>
            <remarks>The hole geometry will no longer be displayed in the map window referenced by the TargetMapWindow property.
            <para/>
            Index is the value returned by Index is the value returned by AddGeometry or CreateGeometry.
            <para/>
            HoleIndex is a value returned by AddHole.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.GetHole(System.Int32,System.Int32)">
            <summary>Method to return the specified hole geometry in the specified boundary geometry.</summary>
            <param name="Index">The index of the boundary geometry for which the hole geometry is being retrieved.</param>
            <param name="HoleIndex">The index of the hole geometry in the boundary geometry referenced by Index.</param>
            <remarks>Index is the value returned by AddGeometry or CreateGeometry.
            <para/>
            HoleIndex is a value returned by AddHole.</remarks>
            <returns>IGTGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.GetArcConstructionMode(System.Int32)">
            <summary>Method to return the mode in which the points appended to the specified composite geometry will be interpreted.</summary>
            <param name="Index">The index of the geometry in IGTGeometryCreationService.</param>
            <returns>For arc geometries, the value returned is always True. For all other geometries, the value returned is always False.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.SetArcConstructionMode(System.Int32,System.Boolean)">
             <summary>Method to set the mode in which the points appended to the specified composite geometry will be interpreted.</summary>
             <param name="Index">The index of the geometry in IGTGeometryCreationService.</param>
             <param name="bValue">For arc geometries, the value of this property is always True. Setting it will raise an error. For all other geometries, the value of this property is always False. Setting it will raise an error.</param>
             <remarks>Changing the value of this property makes sense only for composite polylines and composite polygons. These geometries are collections of polyline geometries and arc geometries. 
             The default value of this property for composite polylines and composite polygons is False. Therefore, when a point is appended, it is interpreted as the next point of the current polyline subgeometry. 
             In order to append an arc subgeometry, you need to set this property to True. After collecting all needed arc points (see section Arc Construction for detailed discussion about arc construction), the property resets itself to False. 
             Setting this property to False while arc points are being collected removes the last arc subgeometry from the composite polyline or composite polygon. 
             The exterior of a boundary geometry is a composite polygon, therefore this property can be also used while constructing the exterior of a boundary geometry. 
             <para/>
             Using this property, you can construct only an arc by three points. If other parameters of the arc are known, use one of the following instead:
             <list type="bullet">
             <item>The API functions for arc computation (and then add the points of the resulting arc in the expected order)</item>
             <item>The AddGeometry method.</item>
             <item>The AppendGeometryToComposite method.</item>
             </list>
             <para/>
             Index is the value returned by AddGeometry or by CreateGeometry. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.SetDynamicPoint(System.Int32,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to set the point for the dynamically displayed geometry (dynamic lines and points) when the geometry is being constructed.</summary>
            <param name="Index">The index of the geometry in IGTGeometryCreationService to add the dynamic point to.</param>
            <param name="Point">The IGTPoint to be set.</param>
            <remarks>This property is normally used to display a line or arc between the last point of the constructed geometry and the current position of the mouse cursor. 
            If the custom software receives mouse move events, it would set this property in each mouse move event with the position of the mouse cursor in world coordinates. 
            However, you may set DynamicPoint with any point, not just the current mouse position. 
            The dynamic point is not returned when the geometry identified by Index is returned by the GetGeometry method. 
            When working with oriented point geometries where the origin point has already been appended, setting the dynamic point determines the orientation. 
            Setting this property to Nothing removes dynamic line or arc. 
            Index is the value returned by AddGeometry or CreateGeometry. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryCreationService.GetHoleCount(System.Int32)">
            <summary>Method to return the number of hole geometries that the specified geometry has.</summary>
            <param name="Index">The index of the geometry in IGTGeometryCreationService.</param>
            <remarks>An error is raised when the geometry identified by Index is not a boundary geometry. Index is the 
            value returned by AddGeometry or CreateGeometry.</remarks>
            <returns>int</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometryCreationService.GeometriesVisible">
            <summary>Property to return/set the visibility of all geometries that have been created/added to IGTGeometryCreationService.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometryCreationService.GeometryCount">
            <summary>Property to return the number of geometries that have been created/added to IGTGeometryCreationService.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometryCreationService.TargetMapWindow">
            <summary>Property to return/set the IGTMapWindow where IGTGeometryCreationService renders (draws) the geometries.</summary>
            <remarks>This property must be set before creating or appending the first geometry.
            <para/>It is possible to change this property so that it references another IGTMapWindow object while the geometry construction 
            is in progress. The geometries in the IGTGeometryCreationService are immediately rendered in the new IGTMapWindow and cleared from 
            the previous map window.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTFieldValue">
            <summary>Intergraph G/Technology IGTFieldValue API.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFieldValue.IsGTGeometry">
            <summary>Method to return true when field value is of type GTGeometry.</summary>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFieldValue.GTFeldValueToInt(Intergraph.GTechnology.API.IGTFieldValue)">
            <summary>
            Converts IGTFieldValue to int.
            </summary>
            <param name="oValue">IGTFieldValue</param>
            <returns>Integer.</returns>
            <exception cref="T:System.InvalidCastException">Thrown when invalid casting.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFieldValue.GTFeldValueToDouble(Intergraph.GTechnology.API.IGTFieldValue)">
            <summary>
            Converts IGTFieldValue to double.
            </summary>
            <param name="oValue">IGTFieldValue</param>
            <returns>Double.</returns>
            <exception cref="T:System.InvalidCastException">Thrown when invalid casting.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFieldValue.GTFeldValueToBool(Intergraph.GTechnology.API.IGTFieldValue)">
            <summary>
            Converts IGTFieldValue to bool.
            </summary>
            <param name="oValue">IGTFieldValue</param>
            <returns>Boolean</returns>
            <exception cref="T:System.InvalidCastException">Thrown when invalid casting.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFieldValue.GTFeldValueToString(Intergraph.GTechnology.API.IGTFieldValue)">
            <summary>
            Converts IGTFieldValue to string.
            </summary>
            <param name="oValue">IGTFieldValue</param>
            <returns>String</returns>
            <exception cref="T:System.InvalidCastException">Thrown when invalid casting.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFieldValue.GTFeldValueToGTGeometry(Intergraph.GTechnology.API.IGTFieldValue)">
             <summary>
             Converts IGTFieldValue to IGTGeometry.
             </summary>
            <param name="oValue">IGTFieldValue</param>
             <returns>String</returns>
             <exception cref="T:System.InvalidCastException">Thrown when invalid casting.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTFieldValue.FieldValue">
            <summary>Property to set/return field value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTGainedFocusEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTCustomCommandHelper GainedFocus event.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTGainedFocusEventArgs.#ctor(Intergraph.GTechnology.API.IGTMapWindow@)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTGainedFocusEventArgs class.</summary>
            <param name="NewMapWindow">NewMapWindow argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTGainedFocusEventArgs.NewMapWindow">
            <summary>NewMapWindow argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.GTFunctionalTypeConstants">
            <summary>The GTFunctionalTypeConstants are Intergraph G/Technology functional type constants.  
            This GTFunctionalType enumeration is used with the IGTFunctional.Type property.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTFunctionalTypeConstants.gtftcAddNew">
            <summary>Functional Type add new constant.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTFunctionalTypeConstants.gtftcSetValue">
            <summary>Functional Type set value constant.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTFunctionalTypeConstants.gtftcEdit">
            <summary>Functional Type edit constant.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTFunctionalTypeConstants.gtftcUpdate">
            <summary>Functional Type update constant.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryProcessingModeConstants">
            <summary>The GTRelationshipGeometryProcessingModeConstants are Intergraph G/Technology relationship geometry processing mode constants.  
            These constants are used with the IGTRelationshipGeometry object's ProcessingMode property.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryProcessingModeConstants.gtrgiUnknown">
            <summary>Relationship Geometry processing mode constant.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryProcessingModeConstants.gtrgiEstablish">
            <summary>Relationship Geometry processing mode constant.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryProcessingModeConstants.gtrgiReestablish">
            <summary>Relationship Geometry processing mode constant.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryProcessingModeConstants.gtrgiMerge">
            <summary>Relationship Geometry processing mode constant.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryProcessingModeConstants.gtrgiBreak">
            <summary>Relationship Geometry processing mode constant.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryProcessingModeConstants.gtrgiValidation">
            <summary>Relationship Geometry processing mode constant.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryDeleteActionConstants">
            <summary>The GTRelationshipGeometryDeleteActionConstants are Intergraph G/Technology 
            relationship geometry delete action constants.  
            These constants are used with the IGTRelationshipGeometry object's BeforeDelete method.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryDeleteActionConstants.gtrgiDeleteNoFeature">
            <summary>Relationship Geometry delete action constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryDeleteActionConstants.gtrgiDeleteActiveFeature">
            <summary>Relationship Geometry delete action constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTRelationshipGeometryDeleteActionConstants.gtrgiDeleteRelatedFeature">
            <summary>Relationship Geometry delete action constant</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.GTConstructionAidStatusConstants">
            <summary>GTConstructionAidStatusConstants are Intergraph G/Technology construction aid status constants.
            These constants are the values returned by the CAStatus return parameters for several methods on the IGTConstructionAid interface.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTConstructionAidStatusConstants.gtcasAbort">
            <summary>The Construction Aid is aborting, and control should return to freehand mode.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTConstructionAidStatusConstants.gtcasInProgress">
            <summary>The Construction Aid is in progress.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTConstructionAidStatusConstants.gtcasDone">
            <summary>The Construction Aid is finished.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTConstructionAidStatusConstants.gtcasProcessGeom">
            <summary>Process geometry</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.GTConstructionAidFieldNumberConstants">
            <summary>GTConstructionAidFieldNumberConstants are Intergraph G/Technology construction aid field number constants used by the SetValue method of the IGTConstructionAid interface. 
            The incoming FieldNumber will be one of these constant values to indicate from which field the value came. </summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTConstructionAidFieldNumberConstants.gtvmField1">
            <summary>Construction Aid field number constant.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTConstructionAidFieldNumberConstants.gtvmField2">
            <summary>Construction Aid field number constant.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTConstructionAidFieldNumberConstants.gtvmField3">
            <summary>Construction Aid field number constant.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants">
            <summary>The GTEditToolButtonConstants are Intergraph G/Technology edit tool button constants.
            These constants are used by the ButtonEnabled method on the IGTDisableEditTool object to identify the button to disable or keep enabled.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbDelete">
            <summary>Delete selected feature geometry or vertices key</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbMove">
            <summary>Move selected features key</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbMoveDimensionText">
            <summary>Move dimensioning text key</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbMoveAlong">
            <summary>Move a single point or text feature along a linear or area geometry key</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbRotate">
            <summary>Rotate a symbol or text key.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbRotateAround">
            <summary>Rotate selected features around a point key</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbTrim">
            <summary>Trim the geometry of a linear feature back to the nearest intersecting point key</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbExtend">
            <summary>Extend the geometry of a linear feature key</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbExtendByPoint">
            <summary>Extend the geometry of a linear feature to a specified point key</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbExtendByDistance">
            <summary>Extend the geometry of a linear feature by a specified distance key.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbContinueGeometry">
            <summary>Continues the geometry of a feature key.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbManipulateVertex">
            <summary>Move selected feature vertices key.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbFilletArc">
            <summary>Convert a vertex into a fillet arc key.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbReestablishRelationships">
            <summary>Automatically establish a relationship in the new configuration or maintain the existing relationship key.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants.gtetbSelectAll">
            <summary>Select all vertices of all selected feature or components key.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTMergeFeaturesService">
            <summary>Intergraph G/Technology IGTMergeFeaturesService Interface.</summary>
            <remarks>
            The IGTMergeFeaturesService object provides merge capabilities for custom commands that merge two existing linear features. The API is capable of accepting two proposed features to merge and performs the merge as specified in metadata. You also have the alternative of implementing a silent merge. 
            <para/>See the Merge Subsystem topic for general information about merging.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMergeFeaturesService.CancelMerge">
            <summary>Method to cancel the merge of features.</summary>
            <remarks>The method is useful if the custom command wants to cancel the merge after another mouse or keyboard event than 
            pressing ESC. CancelMerge does not raise an Aborted event.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMergeFeaturesService.StartMerge(Intergraph.GTechnology.API.IGTKeyObject,Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method to initiate the merge of features.</summary>
            <param name="Feature1">The first feature to be merged. This feature will be also updated with the merged data.</param>
            <param name="Feature2">The second feature to be merged. After a successful merge, all components of this feature will be deleted.</param>
            <remarks>The method first determines if it is allowed to merge the two features specified in the input arguments. If it is not, the Disallowed event is raised and 
            DisallowedErrorArray property contains the reasons why merge is not allowed.
            <para/>
            A successful merge is communicated to the command by raising the Finished event. If the merge is not approved, a Disapproved event is raised, and the DisapprovedErrorArray 
            property contains the reasons why.
            <para/>
            If the merge is not successful for any reason, an Aborted event is raised.
            <para/>
            If all components can be merged without any feedback from the user, the control returns to the command after the merge has been completed. If there is a component that is 
            merged with a feedback from the user, the control returns back to the command when the Merge Features control is displayed and the user is prompted to select the merge 
            option. The command should ignore any user events until the merge is complete. IGTMergeFeaturesService receives those events in parallel with the command.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMergeFeaturesService.DisallowedErrorArray">
            <summary>Property to return the reasons why merge was not allowed.</summary>
            <remarks>If the merge is allowed, this property returns a Null variant. If the merge is not allowed, the return value is a variant containing a 2 x N array of strings, where 
            N is number of reasons why the merge was not allowed. The first "column" in this array contains an error description and the second "column" contains the error location, such 
            as the name of the Node-Edge Connectivity relationship that would become invalid after the merge. This property is set before the Disallowed event is raised so that the custom 
            command can display the reasons for not allowing the merge instead of letting IGTMergeFeaturesService display them.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMergeFeaturesService.DisapprovedErrorArray">
            <summary>Property to return the reasons why merge was not approved.</summary>
            <remarks>If the merge is approved, this property returns a Null variant. If the merge is not approved, the return value is a variant containing a 2 x N array of strings, where N 
            is number of reasons why the merge was not approved. The first "column" in this array contains an error description and the second "column" contains the error location, such as 
            the name of the Node-Edge Connectivity relationship that would become invalid after the merge. This property is set before the Disapproved event is raised so that the custom command 
            can display the reasons for not approving the merge instead of letting IGTMergeFeaturesService display them.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMergeFeaturesService.ErrorDialogCaption">
            <summary>Property to return/set the Error Dialog Caption.</summary>
            <remarks>Initially, this property does not have to be set. It can be set in the Disallowed or Disapproved event handler when it is clear whether allow or approve failed. The default 
            value is an empty string, which implies that the standard caption is shown.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMergeFeaturesService.ErrorDialogMessage">
            <summary>Property to return/set the Error Dialog text.</summary>
            <remarks>Initially, this property does not have to be set. It can be set in the Disallowed or Disapproved event handler when it is clear whether allow or approve failed. The default 
            value is an empty string, which implies that the standard caption is shown.</remarks>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTMergeFeaturesService.Disallowed">
            <summary>Event raised when the merge is not allowed.</summary>
            <remarks>If the command lets IGTMergeFeaturesService display the dialog box, it can set the IGTMergeFeaturesService ErrorDialogBoxCaption and ErrorDialogBoxMessage properties to 
            customize the caption and message on the dialog box. The StartMerge method may not be called from this event handler.</remarks>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTMergeFeaturesService.Disapproved">
            <summary>Event raised when the merge is not approved.</summary>
            <remarks>If the command lets GTMergeFeaturesService display the dialog box, it can set the IGTMergeFeaturesService ErrorDialogBoxCaption and ErrorDialogBoxMessage properties to 
            customize the caption and message on the dialog box. The StartMerge method may not be called from this event handler.</remarks>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTMergeFeaturesService.Aborted">
            <summary>Event raised when the merge has been aborted.</summary>
            <remarks>This event is raised when:
            <list type="bullet">
            <item>A runtime error occurs in IGTMergeFeaturesService in a place other than in StartMerge, such as in the process of selecting merge options.</item>
            <item>The merge is not allowed or not approved, after displaying the dialog box with reasons for not allowing or approving the merge.</item>
            </list>
            <para/>
            The custom command should roll back the database transaction in this event handler.</remarks>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTMergeFeaturesService.Finished">
            <summary>Event raised when the merge has been completed successfully.</summary>
            <remarks>If the custom command merges several features one after another, it can call the StartMerge method from this event handler with the references to the next two features 
            to be merged. The custom command may commit the database transaction in this event handler.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTMeasureService">
            <summary>Intergraph G/Technology IGTMeasureService API.</summary>
            <remarks>
            The IGTMeasureService object provides the automation for calculating the area, length, and perimeter of a geometry object. Before performing the calculations, a CoordSystem object, the reference space, and the geometry object for which the calculations are made must be specified. Referencing the applicable property or executing a method returns the measurements. 
            <para/>The calculations that can be performed depend on the type of geometry object being measured. 
            <para/><b>Example:</b>
            <para/>The area of a line or a point is not calculated. Therefore, referencing the Area property for either of these geometry objects returns a calculation of zero. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMeasureService.PointFromDistanceAndAzimuth(System.Double,System.Double)">
            <summary>Method to return a point a given distance (in meters) and an azimuth (in radians) away from a point in the specified reference space.</summary>
            <param name="Distance">The distance in meters from the IGTMeasureService.Geometry point object to the generated point.</param>
            <param name="Azimuth">The azimuth in radians (defined clockwise from north) defining the direction from the IGTMeasureService.Geometry point object to the generated point.</param>
            <returns>IGTPoint</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMeasureService.Area">
            <summary>Property to return the area (in square meters) of the specified geometry object.  The return value depends on the geometry type and reference space.</summary>
            <remarks>The return value depends on the geometry type.
            <list type="table">
            <listheader>
            <term>Geometry Object</term>
            <description>Return Value</description>
            </listheader>
            <item>
            <term>IGTPointGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTOrientedPointGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTTextPointGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTLineGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTArcGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTPolylineGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTCompositePolylineGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTPolygonGeometry</term>
            <description>Returns the area of the polygon.</description>
            </item>
            <item>
            <term>IGTCompositePolygonGeometry</term>
            <description>Returns the area of the polygon.</description>
            </item>
            <item>
            <term>IGTBoundaryGeometry</term>
            <description>Returns the area of the PolygonGeometry boundary minus the PolygonGeometry holes.</description>
            </item>
            <item>
            <term>IGTGeometryCollection</term>
            <description>Cumulative area of all geometries in the collection.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMeasureService.BackAzimuth">
            <summary>Property to return the back azimuth in radians of a line or 2-point linestring geometry in the specified reference space.</summary>
            <remarks>Azimuths are computed only for lines and two-point line strings. All other geometries return a value of 0.0.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMeasureService.CoordSystem">
            <summary>Property to return/set the coordinate system to use for reference space transformation.  If DataContext has been set, there is no need to set this property, unless you would like to measure in a coordinate system different from the current configuration.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMeasureService.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this service.  This property indirectly specifies that the coordinate system of the current configuration will be used.  If this property is set, there is no need to specify CoordSystem.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMeasureService.ForwardAzimuth">
            <summary>Property to return the forward azimuth in radians of a line or 2-point linestring geometry in the specified reference space.</summary>
            <remarks>Azimuths are computed only for lines and two-point line strings. All other geometries return a value of 0.0.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMeasureService.Geometry">
            <summary>Property to return/set the geometry object to be measured.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMeasureService.Length">
            <summary>Property to return the length (in meters) of the specified geometry object.  The return value depends on the geometry type and refererence space.</summary>
            <remarks>
            <list type="table">
            <listheader>
            <term>Geometry Object</term>
            <description>Return Value</description>
            </listheader>
            <item>
            <term>IGTPointGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTOrientedPointGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTTextPointGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTLineGeometry</term>
            <description>Always returns length from starting to ending points.</description>
            </item>
            <item>
            <term>IGTArcGeometry</term>
            <description>Always returns length from starting to ending points.</description>
            </item>
            <item>
            <term>IGTPolylineGeometry</term>
            <description>Cumulative distance from first to last point in the polyline.</description>
            </item>
            <item>
            <term>IGTCompositePolylineGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTPolygonGeometry</term>
            <description>Returns the length of the diagonal of the minimum bounding rectangle.</description>
            </item>
            <item>
            <term>IGTCompositePolygonGeometry</term>
            <description>Returns the length of the diagonal of the minimum bounding rectangle.</description>
            </item>
            <item>
            <term>IGTBoundaryGeometry</term>
            <description>Returns the length of the diagonal of the minimum bounding rectangle.</description>
            </item>
            <item>
            <term>IGTGeometryCollection</term>
            <description>Cumulative length of all geometries in the collection.</description>
            </item>
            </list></remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMeasureService.Perimeter">
            <summary>Property to return the distance (in meters) around the perimeter of the specified geometry object.  The return value depends on the geometry type and reference space.</summary>
            <remarks>
            <list type="table">
            <listheader>
            <term>Geometry Object</term>
            <description>Return Value</description>
            </listheader>
            <item>
            <term>IGTPointGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTOrientedPointGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTTextPointGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTLineGeometry</term>
            <description>Always returns length from starting to ending points.</description>
            </item>
            <item>
            <term>IGTArcGeometry</term>
            <description>Always returns length from starting to ending points.</description>
            </item>
            <item>
            <term>IGTPolylineGeometry</term>
            <description>Cumulative distance from first to last point in the polyline.</description>
            </item>
            <item>
            <term>IGTCompositePolylineGeometry</term>
            <description>Always returns 0.</description>
            </item>
            <item>
            <term>IGTPolygonGeometry</term>
            <description>Returns the perimeter of the polygon.</description>
            </item>
            <item>
            <term>IGTCompositePolygonGeometry</term>
            <description>Returns the perimeter of the polygon.</description>
            </item>
            <item>
            <term>IGTBoundaryGeometry</term>
            <description>Returns the perimeter of the PolygonGeometry boundary.</description>
            </item>
            <item>
            <term>IGTGeometryCollection</term>
            <description>Cumulative perimeters of all geometries in the collection.</description>
            </item>
            </list></remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMeasureService.ReferenceSpace">
            <summary>Property to return/set the active reference space used for performing measurements.  Projected measurements are taken in the projection plane and have distortions.  Geographic measurements are performed on the ellipsoid's surface (no distortions).</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTMapWindow">
            <summary>Intergraph G/Technology IGTMapWindow API.</summary>
            <remarks>
            IGTMapWindow represents a single window object containing a map view display. The IGTMapWindow object provides methods and properties to control and return information about the map window and its contents. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.Activate">
            <summary>Method to activate the map.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.Close">
            <summary>Method to close the map.</summary>
            <remarks>When Close is called on the last IGTMapWindow, the document will be closed.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.FitAll">
            <summary>Method to fit all objects in the map.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.CenterSelectedObjects">
            <summary>Method to center the set of selected objects in the map.</summary>
            <remarks>The center point of IGTApplication.SelectedObjects is determined using the center of the MBR of all selected geometries.
            <para/>
            If there is no object in IGTApplication.SelectedObjects, this method returns without error.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.FitSelectedObjects">
            <summary>Method to fit the set of selected objects in the map.</summary>
            <remarks>Default value 1.0 is used for ZoomFactor.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.FitSelectedObjects(System.Double)">
            <summary>Method to fit the set of selected objects in the map.</summary>
            <param name="ZoomFactor">The zoom factor to use when fitting the selected objects collection.</param>
            <remarks>If ZoomFactor is less than or equal to 1.0, no zoom out operation will be performed. If there is 
            no object in IGTApplication.SelectedObjects this method does nothing and returns without error.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.GetRange">
            <summary>Method to return the range of the map.</summary>
            <remarks>Resizing the window or recentering, panning, or zooming the objects in the IGTMapWindow changes 
            the range values.</remarks>
            <returns>IGTWorldRange</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.WindowToWorld(Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to convert a window point to a world point.</summary>
            <param name="WindowPoint">The window point to convert.</param>
            <remarks>The world coordinate value is in the same units as all other geometry in the published DDC files.</remarks>
            <returns>IGTPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.WorldToWindow(Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to convert a world point to a window point.</summary>
            <param name="WorldPoint">The world point to convert.</param>
            <remarks>The geometry in published DDC files is in world coordinates. Thus, geometry obtained from a IGTDDCKeyObject has coordinates in ground units.
            <para/>
            The following events from IGTCustomCommandHelper supply both a world point and its corresponding window point.
            <list type="bullet">
            <item>Click</item>
            <item>DblClick</item>
            <item>MouseDown</item>
            <item>MouseMove</item>
            <item>MouseUp</item>
            <item>WheelRotate</item>
            </list></remarks>
            <returns>IGTPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.WorldToWindowDistance(System.Double)">
            <summary>Method to convert a world distance to a window distance.</summary>
            <param name="Distance">The world distance to convert.</param>
            <remarks>The WorldToWindowDistance method converts a world distance to a window distance (in pixels).</remarks>
            <returns>double</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.WindowToWorldDistance(System.Double)">
            <summary>Method to convert a window distance to a world distance.</summary>
            <param name="Distance">The window distance to convert.</param>
            <returns>double</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMapWindow.ZoomArea(Intergraph.GTechnology.API.IGTWorldRange)">
            <summary>Method to zoom to the range of the given area.</summary>
            <param name="WorldRange">The area for which the zoom will occur.</param>
            <remarks>The ZoomArea method fills the IGTMapWindow with the portion of the display contained within a specified rectangular area.
            <para/>
            The rectangular area is defined by specifying its lower-left and upper-right corners in world coordinates through the IGTWorldRange 
            object. The objects in the IGTMapWindow resize proportionally to fill the window.
            <para/>
            The map window is refreshed automatically after the zoom operation.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.ApplySelectBehaviorWhenActive">
            <summary>Property to return/set if the select behavior property should be applied when this map is active.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.Caption">
            <summary>Property to return/set the map caption.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.DetailID">
            <summary>Property to return the map detail identifier.</summary>
            <remarks>By default, if the IGTMapWindow does not contain a detail view, the DetailID returns a value of 0.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.DisplayScale">
            <summary>Property to return/set the map display scale.</summary>
            <remarks>Setting this property to a value less than 1 will result in an error message. Setting the display scale automatically changes the internal view matrix. This property takes places immediately and there is no need to perform a refresh.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.BackColor">
            <summary>
            Gets or sets the background color of a map window.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.DisplayService">
            <summary>Property to return the IGTDisplayService for this map.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.HighlightedObjects">
            <summary>Property to return the IGTHighlightedObjects service.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.hWnd">
            <summary>Property to return the handle of the client area of the map.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.LegendName">
            <summary>Property to return the map legend name.</summary>
            <remarks>This will be the name of the first legend in the Display Control. This name maps to the G3E_USERNAME field 
            in G3E_LEGENDS_OPTABLE.</remarks>
            <remarks>This name maps to the G3E_USERNAME field in G3E_LEGENDS_OPTABLE.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.LocateService">
            <summary>Property to return the IGTLocateService for this map.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.MousePointer">
            <summary>Property to return/set the map mouse pointer.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.ReferencingFNO">
            <summary>Property to return the map referencing FNO.</summary>
            <remarks>By default, the ReferencingFNO property returns a value of 0 when no referencing feature exists.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.SelectBehavior">
            <summary>Property to return/set the map select behavior.</summary>
            <remarks>The SelectBehavior property returns or sets the selection behavior for the GTMapWindow—highlight only, highlight and fit, or highlight and center.
            <para/>
            Changes to this property are effective on the next select operation.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.SelectBehaviorZoomFactor">
            <summary>Property to return/set the map select behavior zoom factor.</summary>
            <remarks>The SelectBehaviorZoomFactor property is used by the highlight-and-fit operation 
            of the SelectBehavior property to determine the division factor applied to an object's display size 
            when a fit occurs. A larger value results in the selected objects' displaying at a smaller scale.
            <para/>
            The SelectBehaviorZoomFactor property is set to 1.05 by default.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindow.WindowState">
            <summary>Property to return/set the map window state.</summary>
            <remarks>The WindowState property returns or sets the state—maximize, minimize, or restore—of the IGTMapWindow.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTHelperService">
            <summary>Intergraph G/Technology IGTHelperService API.</summary>
            <remarks>
            The IGTHelperService object provides the automation for miscellaneous functionality.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.RunReport(ADODB.Recordset,System.String,System.Int32)">
            <summary>Method to run a user-defined report interface.</summary>
            <param name="QueryResults">Query result to report.</param>
            <param name="QueryName">Name of query.</param>
            <param name="RPMNO">The type of report to run.</param>
            <remarks>If the feature does not have a label defined, the feature name followed by the feature ID (FID) is returned for the label.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.RunPostProcess(ADODB.Recordset,System.String,System.Int32)">
            <summary>Method to run a user-defined post process interface.</summary>
            <param name="QueryName">Name of query.</param>
            <param name="QueryResults">Query result to report.</param>
            <param name="PPMNO">The type of post-process operation to run.</param>
            <remarks>There must be an active job when calling this method. If there is no active job, an error is raised.
            <para/>
            There cannot be a transaction in progress when calling this method. If a transaction is in progress, an error is raised.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.RunComputeMarkerLocation(ADODB.Recordset,System.Double,System.Int32,System.Int32)">
            <summary>Method to run a user-defined compute marker location interface.</summary>
            <param name="CandidateFeatures">The recordset containing all the candidate features.</param>
            <param name="StopCriteria">Input stop criteria value.</param>
            <param name="RINO">The relation interface number that corresponds to the Compute Marker Location object.</param>
            <param name="RIArgGroupNo">The relation interface argument group number that corresponds to the Compute Marker Location object.</param>
            <remarks>This method can be called only in the desktop implementation of a Report object.
            <para/>This method returns a recordset containing all the marker location points computed based on the specified stop criteria values.</remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.RunComputeGeoPoint(ADODB.Recordset,System.Int32,System.Int32)">
            <summary>Method to run a user-defined compute geo point interface.</summary>
            <param name="InputRecordset">The input recordset containing the computed marker location points for the geographic window.</param>
            <param name="RINO">The relation interface number that corresponds to the Compute GeoPoint object.</param>
            <param name="RIArgGroupNo">The relation interface argument group number that corresponds to the Compute GeoPoint object.</param>
            <remarks>This method can be called only in the desktop implementation of a Report object.
            <para/>If there are no computed marker location points in the detail window, this method returns the input recordset. Otherwise, this method adds the marker location points projected back to the geo window for each computed marker location point in the detail window. 
            </remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.RunCreateMarker(ADODB.Recordset,System.String,System.Int32,System.Int32)">
            <summary>Method to run a user-defined create marker interface.</summary>
            <param name="CoordinateRecordset">Contains all the coordinate location points for the markers.</param>
            <param name="QueryName">Contains the name of trace executed for computing marker location.</param>
            <param name="RINO">The relation interface number that corresponds to the Create Marker object.</param>
            <param name="RIArgGroupNo">The relation interface argument group number that corresponds to the Create Marker object.</param>
            <remarks>After this method is executed, the markers are created at the specified location points.
            <para/>
            This method can be called only in the desktop implementation of a Report object.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.FindFile(System.String)">
            <summary>Method to return the full path to the input file using OTHERPATHS found in the FileUNCPaths.xml file.</summary>
            <param name="FileName">Name of file to find</param>
            <remarks>If the file name is not found, an empty string is returned.</remarks>
            <returns>string</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.GetComponentViewLabel(Intergraph.GTechnology.API.IGTDDCKeyObject)">
            <summary>Method to return a label representing the input IGTDDCKeyObject.</summary>
            <param name="DDCKeyObject">Key object defining the feature component.</param>
            <remarks>If the input component is nongraphic, GetFeatureLabel is called internally to produce the label. This includes a 
            database query. If the component does not have a label defined, the component name followed by the feature ID (FID) is returned 
            for the label.</remarks>
            <returns>string</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.GetFeatureLabel(Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method to return a label representing the input IGTKeyObject.</summary>
            <param name="KeyObject">Key object defining the feature.</param>
            <remarks>If the feature does not have a label defined, the feature name followed by the feature ID (FID) is returned for the label.</remarks>
            <returns>string</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.GeographicPointToStorage(Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to convert a point from geographic coordinates to database storage coordinates.</summary>
            <param name="GeographicPoint">Geographic point. X is longitude in radians and Y is latitude in radians.</param>
            <remarks>The coordinate system of the current configuration of the DataContext is used when converting coordinates.</remarks>
            <returns>IGTPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.GetComponentLabel(Intergraph.GTechnology.API.IGTKeyObject,System.Int16,System.String@,Intergraph.GTechnology.API.GTAlignmentConstants@)">
            <summary>Method to return a label and its alignment for the input component (CNO) of the input IGTKeyObject.</summary>
            <param name="KeyObject">Key object defining the feature component.</param>
            <param name="CNO">CNO of the component whose label and alignment are to be returned.</param>
            <param name="Label">The label for the input CNO.</param>
            <param name="Alignment">The alignment for the input CNO.</param>
            <remarks>This method can be called only in a desktop application context. That is, it cannot be called from interfaces that batch executables instantiate, such as BatchValidation.exe.
            <para/>
            This method supports only the gtctGraphicText(1024) component type (G3E_COMPONENT.G3E_TYPE).
            <para/>
            Each component's recordset represented in the KeyObject's Components collection is expected to be on the appropriate row for attribute evaluation.
            <para/>
            The output label is determined by evaluating the label rule (G3E_LRNO) that comes from the G3E_LEGENDENTRY table where G3E_LENO = G3E_COMPONENTVIEWDEFINITION.G3E_LENO.
            G3E_COMPONENTVIEWDEFINITION.G3E_LENO is the LENO where G3E_COMPONENTVIEWDEFINITION.G3E_CNO matches the input CNO and G3E_COMPONENTVIEWDEFINITION.G3E_FNO matches the input KeyObject's FNO.
            <para/>
            The output alignment is determined from the component's alignment field as identified by G3E_COMPONENT.G3E_ALIGNMENTFIELD.
            <para/>
            If the input component is not gtctGraphicText or is secondary data, then an error is raised.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.GetComponentStyleID(Intergraph.GTechnology.API.IGTKeyObject,System.Int16)">
            <summary>Method to return a StyleID used to draw the input component (CNO) of the input IGTKeyObject.</summary>
            <param name="KeyObject">Key object defining the feature component.</param>
            <param name="CNO">CNO of the component whose style ID is to be returned.</param>
            <remarks>This method can be called only in a desktop application context. That is, it cannot be called from interfaces that batch executables instantiate, such as BatchValidation.exe.
            <para/>
            This method does not support the following component types (G3E_COMPONENT.G3E_TYPE):
            <para/>
            gtctNonGraphic(1)
            <para/>
            gtctSpecialNonGraphic(2048)
            <para/>
            gtctSpatialCoverage(32) 
            <para/>
            The gtctSpecialNonGraphic component type is not likely to be encountered since components of this type cannot be part of a feature. If the input component is one of these types, an error is raised.
            <para/>
            Each component's recordset represented in the KeyObject's Components collection is expected to be on the appropriate row for attribute evaluation.
            <para/>
            The output style ID is determined by evaluating the style rule (G3E_SRNO) that comes from the G3E_LEGENDENTRY table where G3E_LENO = G3E_COMPONENTVIEWDEFINITION.G3E_LENO. G3E_COMPONENTVIEWDEFINITION.G3E_LENO is the 
            LENO where G3E_COMPONENTVIEWDEFINITION.G3E_CNO matches the input CNO and G3E_COMPONENTVIEWDEFINITION.G3E_FNO matches the input KeyObject's FNO.
            <para/>
            For the gtctDimension component type, the style ID for the dimension line is returned where G3E_DIMSTYLEGROUP.G3E_DIMSEGMENT = 1.
            <para/>
            If a style ID cannot be determined by evaluating a style rule, then the default style ID for the input CNO is returned.</remarks>
            <returns>int</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.RunCustomValidation(System.String,Intergraph.GTechnology.API.IGTKeyObjects,ADODB.Recordset@,System.Int32,System.Int32)">
            <summary>Method to run a user-defined feature validation interface.</summary>
            <param name="ProcessingMode">The context in which the validation interface is being called. The validation interface's Validate method can be 
            coded to perform different types of validation depending on the value of the processing mode.</param>
            <param name="Features">The collection of IGTKeyObjects to be validated by the interface.</param>
            <param name="ValidationErrors">The recordset of validation errors found by the validation interface. This recordset can be created by the caller or by the function. If the recordset passed in 
            is Nothing, the function will create the recordset.</param>
            <param name="RINO">The relation interface number that corresponds to the validation interface to be run. The RINO must correspond to a G3E_RINO value in 
            the G3E_FEATURE or G3E_PLACEMENTCONFIGURATION table.</param>
            <param name="RIArgGroupNo">The relation interface argument group number that corresponds to arguments for this validation interface. The RIARGGROUPNO must correspond to 
            a G3E_RIARGGROUPNO value in the G3E_RELATIONIFACEARGS table. Specify a value of 0 if no arguments are needed for this interface.</param>
            <remarks>The ValidationErrors recordset has following fields: 
            <list type="table">
            <listheader>
            <term>Field</term>
            <term>Type</term>
            <term>Max Length</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>Error Priority</term>
            <term>adVarWChar</term>
            <term>500</term>
            <description>Contains the priority of the error that was detected while validating the feature.</description>
            </item>
            <item>
            <term>ErrorDescription</term>
            <term>adVarWChar</term>
            <term>500</term>
            <description>Contains the descriptive text of the error.</description>
            </item>
            <item>
            <term>ErrorLocation</term>
            <term>adVarWChar</term>
            <term>500</term>
            <description>Identifies the name of the module or phase of validation. You can define this semantic.</description>
            </item>
            <item>
            <term>Connection</term>
            <term>adVarWChar</term>
            <term>500</term>
            <description>Value from DataContext.ConfigurationName. The active connection is assumed, so you need not 
            supply a value for this field.</description>
            </item>
            <item>
            <term>G3E_FNO</term>
            <term>adInteger</term>
            <term>n/a</term>
            <description>The feature number.</description>
            </item>
            <item>
            <term>G3E_FID</term>
            <term>adInteger</term>
            <term>n/a</term>
            <description>The feature identifier.</description>
            </item>
            <item>
            <term>G3E_CNO</term>
            <term>adInteger</term>
            <term>n/a</term>
            <description>The component number.</description>
            </item>
            <item>
            <term>G3E_CID</term>
            <term>adInteger</term>
            <term>n/a</term>
            <description>The component occurrence.</description>
            </item>
            </list>
            <para/>
            This method lets you code the Validate method for a placement configuration to call the validation interfaces of the individual features that make up that configuration.
            <para/>
            When using RunCustomValidation to call validation interfaces for for a placement configuration, be conscious of any message boxes, status bar prompts, or validation 
            errors that are displayed in the validation interfaces for the features. Ideally, the validation functions for the features should be implemented so that they can 
            defer display of such information to the calling validation interface for the placement configuration whenever the ProcessingMode contains a G3E_PCNO value.
            <para/>
            The DataContext property of the IGTHelperService object must be set before calling the RunCustomValidation function. If it is not set when this function is called, an 
            error will occur, a failure status will be returned, and the interface will terminate.
            <para/>
            If the RINO cannot be found in the G3E_FEATURE or G3E_PLACEMENTCONFIGURATION table, or if the G3E_PRJNO is not set for this RINO in the G3E_RELATIONINTERFACE table, an 
            error will occur, a failure status will be returned, and the interface will terminate.
            <para/>
            If an invalid RIARGGROUPNO is specified, no arguments will be set on the interface. No error will occur.
            <para/>
            If the validation interface encounters an unexpected problem while setting its properties or calling the Validate method, RunCustomValidation will raise an error, return 
            a failing status of False, and terminate.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHelperService.DisplayHTML(System.String,System.String)">
            <summary>Method to display an HTML file in the web browser.</summary>
            <param name="URL">The URL to be displayed by the Web browser.</param>
            <param name="Caption">The caption or title to be displayed on the Web browser.</param>
            <remarks>This method lets you format validation errors using HTML and display the results in a Web browser.
            <para/>
            This Web browser is displayed as a dockable control.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTHelperService.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this service.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTApplication">
            <summary>Intergraph G/Technology IGTApplication API.</summary>
            <remarks>The Intergraph G/Technology IGTApplication object represents a single instance of G/Technology and contains methods and properties to control the application through automation. This is the top-level object in the automation model.
            <para/>
            The IGTApplication object has very limited use within batch executables like Batch Validation and Job Life Cycle. 
            <para/>
            Furthermore, the IGTApplication object cannot be used at all from interfaces that are executed within G/Technology NetViewer. 
            <para/>The application interface provides access to the following: 
            <list type="bullet">
            <item>The active database connection</item>
            <item>Map windows</item>
            <item>Selected objects</item>
            <item>Properties</item>
            <item>Services Units of measure</item>
            <item>Preferences</item>
            </list>
            <para/>
            The interface also provides the following information and controls: 
            <list type="bullet">
            <item>Creation of new map and detail windows</item>
            <item>Window arrangement and refresh</item>
            <item>Control of the status bar text, progress bar, and cursor states</item>
            <item>Changes to preferences</item>
            <item>Changes to selected objects</item>
            <item>Changes to the active job </item>
            </list>
            <para/>
            You can get the instance through GTClassFactory.Create&lt;IGTApplication&gt;() call.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.GetStatusBarText(Intergraph.GTechnology.API.GTStatusPanelConstants)">
            <summary>Method to get the status bar text in a given panel.</summary>
            <param name="Panel">The panel from which to retrieve the text.</param>
            <returns>Status bar text.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.SetStatusBarText(Intergraph.GTechnology.API.GTStatusPanelConstants,System.String)">
            <summary>Method to set the status bar text in a given panel.</summary>
            <param name="Panel">The panel on which to set the text.</param>
            <param name="value">The text value.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.ArrangeWindows(Intergraph.GTechnology.API.GTWindowActionConstants)">
            <summary>Method to arrange the application windows.</summary>
            <param name="Arrange">The window arrangement.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.RefreshWindows">
            <summary>Method to repaint each window in the application.</summary>
            <remarks>Only the dirty areas from the windows will be redrawn, not the entire window.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.NewMapWindow">
            <summary>Method to create a new map window given a legend.</summary>
            <remarks>Default value string.Empty is used for LegendName.
            <para/>
            When a new map window is created without a specified legend, an empty legend is created for that map window.
            <para/>
            The new map window appears on top of all other map windows and becomes the active map window. When the window 
            is created, the map will not automatically paint. After calling this method, you must call IGTApplication's RefreshWindows 
            to cause the new window to be redrawn.</remarks>
            <returns>IGTMapWindow</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.NewMapWindow(System.String)">
            <summary>Method to create a new map window given a legend.</summary>
            <remarks>The new map window appears on top of all other map windows and becomes the active map window. When the window 
            is created, the map will not automatically paint.
            <para/>If the open window fails because the current user does not have permission to access the specified legend, then the window should close.
            <para/>After calling this method, you must call IGTApplication's RefreshWindows to cause the new window to be redrawn.</remarks>
            <param name="LegendName">The name of an existing legend to be used with the new window. This name maps to the G3E_USERNAME field in G3E_LEGENDS_OPTABLE </param>
            <returns>IGTMapWindow</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.OpenDetailWindow(System.String,System.Int32)">
            <summary>Method to open an existing detail drawing in a new map window.</summary>
            <remarks>The detail window appears on top of all other map windows and becomes the active map window. When the window is created, the map 
            will not automatically paint. You must call IGTApplication.RefreshWindows. New detail windows need to be closed if they were created during 
            a database transaction.
            <para/>
            If the open window fails because the current user does not have permission to access the specified legend, then the window should close.</remarks>
            <param name="LegendName">The name of an existing legend to be used with the new window. This name maps to the G3E_USERNAME field in G3E_LEGENDS_OPTABLE.</param>
            <param name="DetailID">The detail ID of the detail to be opened.</param>
            <returns>IGTMapWindow</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.BeginWaitCursor">
            <summary>Method to begin using the wait cursor.</summary>
            <remarks>The BeginWaitCursor method sets the style of the mouse pointer to hourglass. Every 
            BeginWaitCursor call requires a corresponding EndWaitCursor call.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.EndWaitCursor">
            <summary>Method to end using the wait cursor.</summary>
            <remarks>The EndWaitCursor method sets the style of the mouse pointer to the default arrow. Every 
            EndWaitCursor call requires a corresponding BeginWaitCursor call.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.BeginProgressBar">
            <summary>Method to begin using the progress bar.</summary>
            <remarks>This method resets the range to 1-100.
            <para/>
            The BeginProgressBar method enables the progress bar and must be called before calling SetProgressBarRange.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.EndProgressBar">
            <summary>Method to end using the progress bar.</summary>
            <remarks>The EndProgressBar method renders the progress bar invisible. This method is used after the 
            progress has reached the upper limit and the progress bar is no longer required.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.SetProgressBarPosition(System.Int32)">
            <summary>Method to set the progress bar's position.</summary>
            <remarks>The specified progress value must fall within the limits defined using the SetProgressBarRange method.</remarks>
            <param name="Position">Defines the current progress value.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.SetProgressBarRange(System.Int32,System.Int32)">
            <summary>Method to set the progress bar's range.</summary>
            <remarks>The limits cannot be negative, and the lower limit cannot be greater than the upper limit.</remarks>
            <param name="LowerBound">The lower limit for the progress range.</param>
            <param name="UpperBound">The upper limit for the progress range.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.GetMapWindows(Intergraph.GTechnology.API.GTMapWindowTypeConstants)">
            <summary>Method to get a collection of open map windows of specified type.</summary>
            <remarks>This is a snapshot of open windows of specified type at the time the method was called. </remarks>
            <param name="MapWindowType">Defines the type of windows to retrieve. This parameter defaults to all.</param>
            <returns>IGTMapWindows</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.GetPreference(Intergraph.GTechnology.API.GTPreferenceConstants)">
            <summary>Method to get a specific preference setting.</summary>
            <param name="PreferenceID">Defines the preference value that is to be retrieved.</param>
            <returns>Preference setting.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.ShowHelpTopic(System.Int32)">
            <summary>Method to show a given help topic.</summary>
            <param name="HelpContextID">The context ID for a topic in the help file.</param>
            <remarks>Default values string.Empty and -1 are used for HelpFileName and ParentHWND.
            <para/>
            If a HelpFileName is not specified, it is assumed you have integrated your custom help topics into the help files delivered with <b>G/Technology</b>.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.ShowHelpTopic(System.Int32,System.String)">
            <summary>Method to show a given help topic.</summary>
            <remarks>Default value -1 is used for ParentHWND.</remarks>
            <param name="HelpContextID">The context ID for a topic in the help file.</param>
            <param name="HelpFileName">The name of the help file to display the specified context ID.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.ShowHelpTopic(System.Int32,System.String,System.Int32)">
            <summary>Method to show a given help topic.</summary>
            <param name="HelpContextID">The context ID for a topic in the help file.</param>
            <param name="HelpFileName">The name of the help file to display the specified context ID.</param>
            <param name="ParentHWND">Handle to the parent window. If the help is displayed for a modal form, the ParentHWnd is the form's hWND.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.NewNamedPlot(System.String)">
            <summary>Method to create a new plot.</summary>
            <param name="PlotName">The name of the plot to create. It must not be the name of any existing plot.</param>
            <remarks>An exception is raised and no plot is created if the specified name is the same as an existing plot in the workspace.</remarks>
            <returns>IGTNamedPlot</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.NewPlotWindow(Intergraph.GTechnology.API.IGTNamedPlot)">
            <summary>Method to create a new plot window.</summary>
            <remarks>After calling this method, you must call IGTApplication's RefreshWindows to cause the new window to be redrawn.</remarks>
            <param name="Plot">The plot to display.</param>
            <returns>IGTPlotWindow</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTApplication.GetPlotWindows">
            <summary>Method to return a collection of all plot windows in the current session.</summary>
            <remarks>This is a snapshot of open plot windows at the time the method was called.</remarks>
            <returns>IGTPlotWindows</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.Application">
            <summary>Property to return the IGTApplication instance.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.ActiveMapWindow">
            <summary>Property to return the active map window.</summary>
            <remarks>This property returns nothing when a plot window is active.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.ActivePlotWindow">
            <summary>Property to return the currently active plot window.</summary>
            <remarks>If the active window is not a plot window, this property returns nothing.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.AOIGeometry">
            <summary>Property to return the current AOI Geometry.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.AOILocationIdentifier">
            <summary>Property to return the current AOI Location Identifier.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.ApplicationWindow">
            <summary>
            Property to return the top-level IGTApplication window.  The IGTApplication.ApplicationWindow.Handle and IGTApplication.hWnd values are same.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.DataContext">
            <summary>Property to return the IGTDataContext for the first non-secondary connection.</summary>
            <remarks>A DataContext object provides access to the database as well as access to published metadata. Since G/Technology 
            can access multiple connections, the Application.DataContext always represents the first non-secondary connection opened 
            in the session. When a workspace is saved, the order of connection is preserved.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.hWnd">
            <summary>Property to return the IGTApplication window handle.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.NamedPlots">
            <summary>Property to return collection of all named plots in the current workspace.</summary>
            <remarks>Named plots need not be displayed in a window; but if a plot is displayed, you cannot create another window viewing that same plot.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.Properties">
            <summary>Property to return the IGTProperties collection.</summary>
            <remarks>The IGTProperties object is a collection of various user-defined properties. This is a place to store data that you need as long as the session is active. Properties are not persisted in any way.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.SelectedObjects">
            <summary>Property to return the IGTSelectedObjects service.</summary>
            <remarks>The IGTSelectedObjects service is used to access the features that the user has selected.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.UnitsOfMeasure">
            <summary>Property to return the UnitsOfMeasure service.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.ActiveZ">
            <summary>Property to set or return the Active-Z value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.UseActiveZ">
            <summary>Property to set or return the UseActiveZ value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTApplication.ExitRequested">
            <summary>Property to set or return the flag to end the G/Technology session immediately after completion of the currently running custom command.</summary>
            <remarks>Any open documents are closed but not saved.  Setting this property outside of custom commands does not end the G/Technology session.</remarks>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTApplication.PreferenceChanged">
            <summary>Event raised when a preference setting is changed.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTApplication.SelectedObjectsChanged">
            <summary>Event raised when the selected objects are changed.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTApplication.ActiveJobChanged">
            <summary>Event raised when the active job is changed.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPlacementTechniqueEventMode">
            <summary>Intergraph G/Technology IGTPlacementTechniqueEventMode Interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlacementTechniqueEventMode.RelationshipProcessingEnabled">
            <summary>Property to return/set whether relationships should be processed after the event through which this object is passed.</summary>
            <remarks>The default value for this property is True, which means relationship processing is enabled and will occur for the mouse event.
            <para/>
            If the IGTPlacementTechnique sets this property to False, then relationship processing is disabled for the current mouse event. Relationship 
            processing is automatically re-enabled for all subsequent mouse events.
            <para/>
            The IGTPlacementTechnique must reset this flag to False for every call to a mouse event where relationship processing should be disabled. Disabling 
            relationships on mouse click and key up events should be used in combination to keep relationship processing synchronized. Note the following:
            <list type="bullet">
            <item>Setting this flag to False during a mouse move prevents relationship candidates from being highlighted.</item>
            <item>Setting this flag to False during a mouse click prevents relationships from being established at the location of the mouse click.</item>
            <item>Setting this flag to False during a keyup for a backspace prevents relationships from being deleted for the point that was removed.</item>
            </list>
            <para/>
            Relationship processing is resumed once the technique signals that it is done, regardless of the value of this flag. At a minimum, relationships will 
            be established at the start and end points of the completed geometry once the technique finishes.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPlacementTechniqueEventMode">
            <summary>Intergraph G/Technology GTPlacementTechniqueEventMode Object.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTPlacementTechniqueEventMode.#ctor(GTech.GTPlacementTechniqueEventMode)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTPlacementTechniqueEventMode class.</summary>
            <remarks>For internal use only.</remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when oGTechGTPlacementTechniqueEventMode is Null.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTPlacementTechniqueEventMode.RelationshipProcessingEnabled">
            <summary>Property to return/set whether relationships should be processed after the event through which this object is passed.</summary>
            <remarks>The default value for this property is True, which means relationship processing is enabled and will occur for the mouse event.
            <para/>
            If the IGTPlacementTechnique sets this property to False, then relationship processing is disabled for the current mouse event. Relationship 
            processing is automatically re-enabled for all subsequent mouse events.
            <para/>
            The IGTPlacementTechnique must reset this flag to False for every call to a mouse event where relationship processing should be disabled. Disabling 
            relationships on mouse click and key up events should be used in combination to keep relationship processing synchronized. Note the following:
            <list type="bullet">
            <item>Setting this flag to False during a mouse move prevents relationship candidates from being highlighted.</item>
            <item>Setting this flag to False during a mouse click prevents relationships from being established at the location of the mouse click.</item>
            <item>Setting this flag to False during a keyup for a backspace prevents relationships from being deleted for the point that was removed.</item>
            </list>
            <para/>
            Relationship processing is resumed once the technique signals that it is done, regardless of the value of this flag. At a minimum, relationships will 
            be established at the start and end points of the completed geometry once the technique finishes.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTArguments">
            <summary>Intergraph G/Technology GTArguments Object.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTArguments.#ctor(System.Object[])">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTArguments class.</summary>
            <remarks>For internal use only.</remarks>
            <param name="ArgumentArray">The interface argument array.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when ArgumentArray is Null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTArguments.GetArgument(System.Int32)">
            <summary>Method to return argument value associated with this index.</summary>
            <param name="Index">A zero-based index of argument whose value needs to be retrieved.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when Index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTArguments.GTechArgumentArray">
            <summary>
            Property to return the interface argument array.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTArguments.Count">
            <summary>Property to return total number of arguments.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTStatusPanelConstants">
            <summary>Intergraph G/Technology Status Panel Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStatusPanelConstants.gtaspcMessage">
            <summary>Message.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStatusPanelConstants.gtaspcESC">
            <summary>ESC.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStatusPanelConstants.gtaspcJob">
            <summary>Job.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStatusPanelConstants.gtaspcZoom">
            <summary>Zoom.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPreferenceChangedConstants">
            <summary>Intergraph G/Technology Preference Changed Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceChangedConstants.gtpcAdd">
            <summary>Add.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceChangedConstants.gtpcModify">
            <summary>Modify.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceChangedConstants.gtpcDelete">
            <summary>Delete.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTMousePointerConstants">
            <summary>Intergraph G/Technology Mouse Pointer Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpCrossHair">
            <summary>Cross Hair</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpCrossHairZeroTolerance">
            <summary>Cross Hair Zero Tolerance</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpCrossHairOnEndPoint">
            <summary>Cross Hair On End Point</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpCrossHairOnElement">
            <summary>Cross Hair On Element</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpCrossHairOnVertex">
            <summary>Cross Hair On Vertex</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpNWArrow">
            <summary>NW Arrow</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpNWArrowWithEllipsis">
            <summary>NW Arrow With Ellipsis</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpNWArrowOnEndPoint">
            <summary>NW Arrow On End Point</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpNWArrowOnElement">
            <summary>NW Arrow On Element</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpNWArrowOnVertex">
            <summary>NW Arrow On Vertex</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpPan">
            <summary>Pan</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpRotate">
            <summary>Rotate</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpZoomIn">
            <summary>Zoom In</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpZoomOut">
            <summary>Zoom Out</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpCrossHairOnCorner">
            <summary>Cross Hair On Corner</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpCrossHairOnMidPoint">
            <summary>Cross Hair On Mid Point</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpCrossHairOnOrigin">
            <summary>Cross Hair On Origin</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpNWEditMove">
            <summary>NW Edit Move</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpNWEditSelectMove">
            <summary>NW Edit Select Move</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMousePointerConstants.gtmwmpNWEditTool">
            <summary>NW Edit Tool</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSelectBehaviorConstants">
            <summary>Intergraph G/Technology Select Behavior Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectBehaviorConstants.gtmwsbHighlightOnly">
            <summary>Highlight Only</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectBehaviorConstants.gtmwsbHighlightAndCenter">
            <summary>Highlight And Center</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectBehaviorConstants.gtmwsbHighlightAndFit">
            <summary>Highlight And Fit</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTWindowStateConstants">
            <summary>Intergraph G/Technology Window State Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTWindowStateConstants.gtmwwsMinimize">
            <summary>Minimize</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTWindowStateConstants.gtmwwsMaximize">
            <summary>Maximize</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTWindowStateConstants.gtmwwsRestore">
            <summary>Restore</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTDisplayScaleModeConstants">
            <summary>Intergraph G/Technology Display Scale Mode Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDisplayScaleModeConstants.gtdsdsOn">
            <summary>On</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDisplayScaleModeConstants.gtdsdsOff">
            <summary>Off</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDisplayScaleModeConstants.gtdsdsUseMetadata">
            <summary>Use Metadata</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTDisplayPositionConstants">
            <summary>Intergraph G/Technology Display Position Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDisplayPositionConstants.gtdsdpFront">
            <summary>Front</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDisplayPositionConstants.gtdsdpBack">
            <summary>Back</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTDisplayPersistenceConstants">
            <summary>Intergraph G/Technology Display Persistence Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDisplayPersistenceConstants.gtdspSaveOff">
            <summary>Saved in workspace, and turned off when coming up.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDisplayPersistenceConstants.gtdspSaveSettings">
            <summary>Saved in workspace, and comes up in same displayed state.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDisplayPersistenceConstants.gtdspDoNotSave">
            <summary>Not saved in workspace.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDisplayPersistenceConstants.gtdspSavePosition">
            <summary>Position saved on Display Control. Data not saved.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTFileTypeConstants">
            <summary>Intergraph G/Technology File Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTFileTypeConstants.gtdsftRaster">
            <summary>Raster files</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTFileTypeConstants.gtdsftAutoCAD">
            <summary>AutoCAD files</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTFileTypeConstants.gtdsftMicroStation">
            <summary>MicroStation files</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSelectionTypeConstants">
            <summary>Intergraph G/Technology Selection Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectionTypeConstants.gtmwstSelectAll">
            <summary>Select All</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectionTypeConstants.gtmwstSelectSingle">
            <summary>Select Single</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectionTypeConstants.gtmwstSelectMultiple">
            <summary>Select Multiple</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPickQuickTypeConstants">
            <summary>Intergraph G/Technology Pick Quick Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPickQuickTypeConstants.gtlspqtSelectSingle">
            <summary>Select Single</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPickQuickTypeConstants.gtlspqtSelectMultiple">
            <summary>Select Multiple</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTComponentTypeConstants">
            <summary>Intergraph G/Technology Component Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctNonGraphic">
            <summary>Nongraphic components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctSpatialAny">
            <summary>Spatial components of any type</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctSpatialLine">
            <summary>Spatial linear components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctSpatialArea">
            <summary>Spatial area components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctSpatialPoint">
            <summary>Spatial point components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctSpatialCoverage">
            <summary>Spatial coverage components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctGraphicAny">
            <summary>Graphic components of any type</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctGraphicLine">
            <summary>Graphic linear components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctGraphicArea">
            <summary>Graphic area components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctGraphicPoint">
            <summary>Graphic point components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctGraphicText">
            <summary>Graphic text components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctSpecialNonGraphic">
            <summary>Special components that cannot be part of a feature</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentTypeConstants.gtctDimension">
            <summary>Dimension components</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTConstructionAidsEnabledConstants">
            <summary>Intergraph G/Technology Construction Aids Enabled Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidsEnabledConstants.gtptConstructionAidsNone">
            <summary>No construction aids</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidsEnabledConstants.gtptConstructionAidsAll">
            <summary>All construction aids</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidsEnabledConstants.gtptConstructionAidsForPoints">
            <summary>Point construction aids</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidsEnabledConstants.gtptConstructionAidsForLines">
            <summary>Linear construction aids</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPlotFrameTypeConstants">
            <summary>Intergraph G/Technology Plot Frame Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotFrameTypeConstants.gtpftObject">
            <summary>Plot Object Frame</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotFrameTypeConstants.gtpftMap">
            <summary>Plot Map Frame</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPlotRedlineCollectionConstants">
            <summary>Intergraph G/Technology Plot Redline Collection Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineCollectionConstants.gtprcAll">
            <summary>All Redlines</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineCollectionConstants.gtprcPointsOnly">
            <summary>Point Redlines Only</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineCollectionConstants.gtprcTextOnly">
            <summary>Text Redlines Only</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineCollectionConstants.gtprcLinesOnly">
            <summary>Line Redlines Only</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineCollectionConstants.gtprcAreasOnly">
            <summary>Area Redlines Only</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineCollectionConstants.gtprcFramesOnly">
            <summary>Frame Border Redlines Only</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPlotAutomaticTextSourceConstants">
            <summary>Intergraph G/Technology Plot Redline Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotAutomaticTextSourceConstants.gtpatNone">
            <summary>Not an automatic field</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotAutomaticTextSourceConstants.gtpatSystemDate">
            <summary>Automatic system date</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotAutomaticTextSourceConstants.gtpatSystemTime">
            <summary>Automatic system time</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotAutomaticTextSourceConstants.gtpatSystemUser">
            <summary>Automatic system username</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotAutomaticTextSourceConstants.gtpatPlotByQuery">
            <summary>Automatic from plot query</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotAutomaticTextSourceConstants.gtpatMapFrameByQuery">
            <summary>Automatic from map frame query</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotAutomaticTextSourceConstants.gtpatMapFrameByScale">
            <summary>Automatic map frame scale units</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotAutomaticTextSourceConstants.gtpatMapFrameByRatio">
            <summary>Automatic map frame scale ratio</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPlotRedlineTypeConstants">
            <summary>Intergraph G/Technology Plot Redline Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineTypeConstants.gtprtPoint">
            <summary>Point Redline</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineTypeConstants.gtprtText">
            <summary>Text Redline</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineTypeConstants.gtprtLine">
            <summary>Line Redline</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineTypeConstants.gtprtArea">
            <summary>Area Redline</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineTypeConstants.gtprtFrame">
            <summary>Frame Border Redline</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTComponentDestinationConstants">
            <summary>Intergraph G/Technology Component Destination Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentDestinationConstants.gtcdToOriginal">
            <summary>Component Destination constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentDestinationConstants.gtcdToCopy">
            <summary>Component Destination constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentDestinationConstants.gtcdToBoth">
            <summary>Component Destination constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentDestinationConstants.gtcdToNeither">
            <summary>Component Destination constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentDestinationConstants.gtcdByBreak">
            <summary>Component Destination constant</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTWindowActionConstants">
            <summary>Intergraph G/Technology Window Action Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTWindowActionConstants.gtapwaTileHorizontal">
            <summary>Tile Horizontal</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTWindowActionConstants.gtapwaTileVertical">
            <summary>Tile Vertical</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTWindowActionConstants.gtapwaCascade">
            <summary>Cascade</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTMapWindowTypeConstants">
            <summary>Intergraph G/Technology Map Window Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMapWindowTypeConstants.gtapmtAll">
            <summary>All</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMapWindowTypeConstants.gtapmtGeographic">
            <summary>Geographic</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMapWindowTypeConstants.gtapmtDetail">
            <summary>Detail</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTMapWindowTypeConstants.gtapmtAlternateGeographic">
            <summary>Alternate Geographic</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPreferenceConstants">
            <summary>Intergraph G/Technology Preference Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcConfirmDeletions">
            <summary>Confirm Deletions</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcDisplayZoomScaleOnStatusBar">
            <summary>Display Zoom Scale On StatusBar</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcPreserveMapScaleWhenResizingWindows">
            <summary>Preserve Map Scale When Resizing Windows</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcLonLatOrder">
            <summary>Lon Lat Order</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcGeographicUnit">
            <summary>Geographic Unit</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcProjectionUnit">
            <summary>Projection Unit</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcBearingUnit">
            <summary>Bearing Unit</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcAzimuthUnit">
            <summary>Azimuth Unit</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcHeightUnit">
            <summary>Height Unit</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcPaperUnit">
            <summary>Paper Unit</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcGeographicPrecision">
            <summary>Geographic Precision</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcProjectionPrecision">
            <summary>Projection Precision</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcBearingPrecision">
            <summary>Bearing Precision</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcAzimuthPrecision">
            <summary>Azimuth Precision</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcHeightPrecision">
            <summary>Height Precision</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcPaperPrecision">
            <summary>Paper Precision</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcHemisphereDesignation">
            <summary>Hemisphere Designation</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcProjectionQuadrant">
            <summary>Projection Quadrant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcAzimuthDirection">
            <summary>Azimuth Direction</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcAzimuthStartFrom">
            <summary>Azimuth StartFrom</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcDefaultZ">
            <summary>Default Z</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcMeasurementReferenceSpace">
            <summary>Measurement Reference Space</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcGroundUnitDistance">
            <summary>Ground Unit Distance</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcGroundUnitDistancePrecision">
            <summary>Ground Unit Distance Precision</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcGroundUnitArea">
            <summary>Ground Unit Area</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcGroundUnitAreaPrecision">
            <summary>Ground Unit Area Precision</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcSmartLocateHesitationTime">
            <summary>Smart Locate Hesitation Time</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcSmartLocatePixelTolerance">
            <summary>Smart Locate Pixel Tolerance</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcPanMapWindowsAutomatically">
            <summary>Pan Map Windows Automatically</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcAutoPanZoneSize">
            <summary>Auto Pan Zone Size</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcAutoPanZoneDisplay">
            <summary>Auto Pan Zone Display</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcSaveGeoWorkspaceFileLocation">
            <summary>Save Geo Workspace File Location</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcSaveGeoWorkspaceTemplateFileLocation">
            <summary>Save Geo Workspace Template File Location</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcGeoWorkspaceFileLocation">
            <summary>GeoWorkspace File Location</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcGeoWorkspaceTemplateFileLocation">
            <summary>GeoWorkspace Template File Location</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcWarehouseFileLocation">
            <summary>Warehouse File Location</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcWarehouseTemplateFileLocation">
            <summary>Warehouse Template File Location</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcClosedSymbolMaximumTolerance">
            <summary>The maximum diameter of a closed or solid raster symbol.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcClosedSymbolMinimumTolerance">
            <summary>The minimum diameter of a closed or solid raster symbol.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcOpenSymbolMaximumTolerance">
            <summary>The maximum diameter of the hole in an open raster symbol.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcOpenSymbolMinimumTolerance">
            <summary>The minimum diameter of the hole in an open raster symbol.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcRasterSnapNoiseTolerance">
            <summary>The maximum size of a raster element, measured across the element, that the software should ignore when performing raster snaps.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcRasterSnapTypes">
            <summary>Defines snap points for raster snapping.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcVectorSnapTypes">
            <summary>Defines snap points for vector snapping.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcAlternateCoordSystemName">
            <summary>Name from the coordinate system table of the CS being used for readouts and keyins.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcUseAlternateCoordSystem">
            <summary>Whether or not that CS is an alternate (as opposed to the CS of the configuration).</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcBreakInProgress">
            <summary>Whether or not Break process is In-Progress.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPreferenceConstants.gtpcMergeInProgress">
            <summary>Whether or not Merge process is In-Progress.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTServiceConstants">
            <summary>Intergraph G/Technology Service Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcMeasureService">
            <summary>Measure Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcSpatialService">
            <summary>Spatial Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcSnapService">
            <summary>Snap Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcHelperService">
            <summary>Helper Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcWorldRange">
            <summary>World Range</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcSymbology">
            <summary>Symbology</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcGeometryCreationService">
            <summary>Geometry Creation Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcBreakLinearService">
            <summary>Break Linear Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcRelationshipService">
            <summary>Relationship Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcGeometryEditService">
            <summary>Geometry Edit Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcFeaturePlacementService">
            <summary>Feature Placement Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcPaperRange">
            <summary>Paper Range</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcFeatureExplorerService">
            <summary>Feature Explorer Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcDDCKeyObjects">
            <summary>DDC KeyObjects</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcKeyObjects">
            <summary>KeyObjects</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcMultiSectionCableService">
            <summary>Multi-Section Cable Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcMergeFeaturesService">
            <summary>Merge Features Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcPrintProperties">
            <summary>Print Properties</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcZoneService">
            <summary>Zone Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcJobManagementService">
            <summary>Job Management Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcSchematicGeneratorService">
            <summary>Schematic Generator Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcCUService">
            <summary>CU Service</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcPointGeometry">
            <summary>Point Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcLineGeometry">
            <summary>Line Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcPolylineGeometry">
            <summary>Polyline Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcPolygonGeometry">
            <summary>Polygon Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcGeometryCollection">
            <summary>Geometry Collection</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcBoundaryGeometry">
            <summary>Boundary Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcOrientedPointGeometry">
            <summary>Oriented Point Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcTextPointGeometry">
            <summary>Text Point Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcArcGeometry">
            <summary>Arc Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcCompositePolylineGeometry">
            <summary>Composite Polyline Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcCompositePolygonGeometry">
            <summary>Composite Polygon Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcPoint">
            <summary>Point</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcVector">
            <summary>Vector</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcMatrix">
            <summary>Matrix</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcPoints">
            <summary>Points</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcRasterGeometry">
            <summary>Raster Geometry</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTServiceConstants.gtsvcExportService">
            <summary>Export to CAD and PDF</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSelectModeConstants">
            <summary>Intergraph G/Technology Select Mode Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectModeConstants.gtsosmSelectedComponentsOnly">
            <summary>Selected Components Only</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectModeConstants.gtsosmAllComponentsOfFeature">
            <summary>All Components Of Feature</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectModeConstants.gtsosmAllComponentsInActiveLegend">
            <summary>All Components In Active Legend</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectModeConstants.gtsosmAllDisplayedComponentsInActiveLegend">
            <summary>All Displayed Components In Active Legend</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSelectModeConstants.gtsosmAllComponentsOfSelectedComponentType">
            <summary>All Components Of Selected Component Type</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTConnectOptionsConstants">
            <summary>Intergraph G/Technology Connect Options Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConnectOptionsConstants.gtcoTapped">
            <summary>Tapped</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConnectOptionsConstants.gtcoInline">
            <summary>Inline</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTAlignmentConstants">
            <summary>Intergraph G/Technology Alignment Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTAlignmentConstants.gtalCenterCenter">
            <summary>Center Center</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTAlignmentConstants.gtalCenterLeft">
            <summary>Center Left</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTAlignmentConstants.gtalCenterRight">
            <summary>Center Right</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTAlignmentConstants.gtalTopCenter">
            <summary>Top Center</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTAlignmentConstants.gtalTopLeft">
            <summary>Top Left</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTAlignmentConstants.gtalTopRight">
            <summary>Top Right</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTAlignmentConstants.gtalBottomCenter">
            <summary>Bottom Center</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTAlignmentConstants.gtalBottomLeft">
            <summary>Bottom Left</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTAlignmentConstants.gtalBottomRight">
            <summary>Bottom Right</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPostErrorConstants">
            <summary>Intergraph G/Technology Post Error Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPostErrorConstants.gtjmsNoError">
            <summary>No error detected.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPostErrorConstants.gtjmsValidation">
            <summary>Validation error was detected.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPostErrorConstants.gtjmsConflict">
            <summary>Conflict was detected.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPostErrorConstants.gtjmsDatabase">
            <summary>Database error was detected.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPostErrorConstants.gtjmsPostNotConfigured">
            <summary>Post not configured in metadata.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPostErrorConstants.gtjmsNoPendingEdits">
            <summary>No pending edits.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTRelationshipOrdinalConstants">
            <summary>Intergraph G/Technology Relationship Ordinal Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRelationshipOrdinalConstants.gtrelRelationshipOrdinalAll">
            <summary>Relationship Ordinal All</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRelationshipOrdinalConstants.gtrelRelationshipOrdinal1">
            <summary>Relationship Ordinal 1</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRelationshipOrdinalConstants.gtrelRelationshipOrdinal2">
            <summary>Relationship Ordinal 2</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTReestablishStatusConstants">
            <summary>Intergraph G/Technology Reestablish Status Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReestablishStatusConstants.gtrelReestablishCanceled">
            <summary>Reestablish - canceled</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReestablishStatusConstants.gtrelReestablishAssociated">
            <summary>Reestablish - associated features</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReestablishStatusConstants.gtrelReestablishDisassociated">
            <summary>Reestablish - disassociated features</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReestablishStatusConstants.gtrelReestablishNotPerformed">
            <summary>Reestablish - operation not performed</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSnapTypesConstants">
            <summary>Intergraph G/Technology Snap Types Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnElement">
            <summary>Snap point is on the element (not a vertex, endpoint, ...)</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnVertex">
            <summary>Snap point is on a vertex.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnEndVertex">
            <summary>Snap point is on an endpoint of a linestring.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnOrigin">
            <summary>Snap point is on an origin.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnMidPoint">
            <summary>Snap point is on the midpoint.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnEndPoint">
            <summary>Snap point is on an endpoint of a line.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssNotSnapped">
            <summary>Designates input point was not snapped.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnRasterCenter">
            <summary>Snap point is on raster center.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnRasterClosedSymbol">
            <summary>Snap point on raster closed symbol.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnRasterCorner">
            <summary>Snap point is on raster corner.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnRasterEndOfLine">
            <summary>Snap point is on raster end of line.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnRasterIntersection">
            <summary>Snap point is on raster intersection.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesConstants.gtssOnRasterOpenSymbol">
            <summary>Snap point is on raster open symbol.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTRasterSnapTypesEnabledConstants">
            <summary>Intergraph G/Technology Raster Snap Types Enabled Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRasterSnapTypesEnabledConstants.gtssAllRasterSnaps">
            <summary>Enable snapping of all raster snap points</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRasterSnapTypesEnabledConstants.gtssNoRasterSnaps">
            <summary>Disable snapping to raster</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRasterSnapTypesEnabledConstants.gtssSnapToRasterCenter">
            <summary>Snap to the center of raster</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRasterSnapTypesEnabledConstants.gtssSnapToRasterClosedSymbol">
            <summary>Snap to raster closed symbol</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRasterSnapTypesEnabledConstants.gtssSnapToRasterCorner">
            <summary>Snap to corner of raster</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRasterSnapTypesEnabledConstants.gtssSnapToRasterEndOfLine">
            <summary>Snap to raster end of line</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRasterSnapTypesEnabledConstants.gtssSnapToRasterIntersection">
            <summary>Snap to raster intersection</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTRasterSnapTypesEnabledConstants.gtssSnapToRasterOpenSymbol">
            <summary>Snap to raster open symbol</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSnapTypesEnabledConstants">
            <summary>Intergraph G/Technology Snap Types Enabled Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesEnabledConstants.gtssNoSnaps">
            <summary>Disable snapping of all keypoints.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesEnabledConstants.gtssSnapToEndPoint">
            <summary>Snap to endpoints.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesEnabledConstants.gtssSnapToVertex">
            <summary>Snap to vertices.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesEnabledConstants.gtssSnapToOrigin">
            <summary>Snap to origins (text, point).</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesEnabledConstants.gtssSnapToMidPoint">
            <summary>Snap to midpoints (arcs, rectangles).</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesEnabledConstants.gtssSnapToElement">
            <summary>Snap to elements (project in perpendicular; not to a vertex, ...).</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSnapTypesEnabledConstants.gtssAllSnaps">
            <summary>Enable snapping of all keypoints (endpoints, vertices, ...).</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTComponentGeometryConstants">
            <summary>Intergraph G/Technology Component Geometry constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentGeometryConstants.gtddcgPrimaryGeographic">
            <summary>Primary Geographic Components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentGeometryConstants.gtddcgAllGeographic">
            <summary>All Geographic Components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentGeometryConstants.gtddcgAllDetail">
            <summary>All Detail Components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentGeometryConstants.gtddcgPrimaryDetail">
            <summary>Primary Detail Components</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTComponentGeometryConstants.gtddcgAllPrimary">
            <summary>All Primary Components</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSpatialOperatorConstants">
            <summary>Intergraph G/Technology Spatial Operator Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSpatialOperatorConstants.gtsoEntirelyContains">
            <summary>Filter geometry entirely contains component view geometries.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSpatialOperatorConstants.gtsoEntirelyContainedBy">
            <summary>Filter geometry entirely contained by component view geometries.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSpatialOperatorConstants.gtsoTouches">
            <summary>Filter geometry touches component view geometries.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSpatialOperatorConstants.gtsoNotTouches">
            <summary>Filter geometry does not touch component view geometries.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSpatialOperatorConstants.gtsoIndexIntersect">
            <summary>Filter geometry MBR intersects component view geometries.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTLinearZoneEndCapTypeConstants">
            <summary>Intergraph G/Technology Linear Zone End Cap Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTLinearZoneEndCapTypeConstants.gtectRound">
            <summary>Round zone end cap for linear geometries.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTLinearZoneEndCapTypeConstants.gtectSquare">
            <summary>Square zone end cap for linear geometries.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSchematicFormatConstants">
            <summary>Intergraph G/Technology Schematic Format Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicFormatConstants.gtsfBottomToTop">
            <summary>Formats oriented entities from bottom to top</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicFormatConstants.gtsfLeftToRight">
            <summary>Formats oriented entities from left to right.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicFormatConstants.gtsfRightToLeft">
            <summary>Formats oriented entities from right to left.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicFormatConstants.gtsfTopToBottom">
            <summary>Formats oriented entities from top to bottom.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSchematicTypeConstants">
            <summary>Intergraph G/Technology Schematic Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicTypeConstants.gtstGeographical">
            <summary>Creates a geographical schematic.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicTypeConstants.gtstTopological">
            <summary>Creates a topological schematic.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicTypeConstants.gtstOriented">
            <summary>Creates an oriented schematic.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTDataConnectionTypeConstants">
            <summary>Intergraph G/Technology Data Connection Type Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDataConnectionTypeConstants.gtdcctDevelopment">
            <summary>Data Connection Type constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDataConnectionTypeConstants.gtdcctTest">
            <summary>Data Connection Type constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDataConnectionTypeConstants.gtdcctProduction">
            <summary>Data Connection Type constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDataConnectionTypeConstants.gtdcctField">
            <summary>Data Connection Type constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDataConnectionTypeConstants.gtdcctSecondary">
            <summary>Data Connection Type constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTDataConnectionTypeConstants.gtdcctImport">
            <summary>Data Connection Type constant</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTFormatConstants">
            <summary>
            Intergraph G/Technology Text Format Type Constants.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTFormatConstants.gtfmtRichText">
            <summary>
            Rich text format constant
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTFormatConstants.gtfmtUnGTFormatted">
            <summary>
            Unformatted text constant
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPlotRedlineGroupNumberConstants">
            <summary>
            Intergraph G/Technology Plot Redline Group Number Constants.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineGroupNumberConstants.gtprgNoGroupNumber">
            <summary>
            No redline group number
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineGroupNumberConstants.gtprgNewGroupNumber">
            <summary>
            New redline group number
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPlotRedlineObjectIDConstants">
            <summary>
            Intergraph G/Technology Plot Redline Object ID Constants.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTPlotRedlineObjectIDConstants.gtproInsertLegend">
            <summary>
            Insert Legend redlines
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTStyleIDConstants">
            <summary>Intergraph G/Technology Style ID Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStyleIDConstants.gtstyleHandleSquare">
            <summary>Solid square in handle color</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStyleIDConstants.gtstyleHandleSquareCross">
            <summary>Hollow square with cross in handle color</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStyleIDConstants.gtstyleHandleSquareX">
            <summary>Hollow square with X in handle color</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStyleIDConstants.gtstyleLineSelectSolid2">
            <summary>Solid line with weight 2 in select color</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStyleIDConstants.gtstyleTextSelectArial12">
            <summary>Arial text 12 point in select color</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTInPolygonType">
            <summary>
            GTInPolygonType represents the possible result of testing whether a point is inside a polygon.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTInPolygonType.gtiptOutside">
            <summary>
            The point lies outside the specified polygon.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTInPolygonType.gtiptOnPolygon">
            <summary>
            The point lies on the polygon boundary (within GTMath.PositionalTolerance).
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTInPolygonType.gtiptInside">
            <summary>
            The point lies inside the specified polygon.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTConstructionAidFieldConstants">
            <summary>Intergraph G/Technology Construction Aid Field Constants.</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmNone">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmDistanceField1">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmDistanceField2">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmRadiusField1">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmRadiusField2">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmAzimuthField1">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmAzimuthField2">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmDistanceField3">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmRadiusField3">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmAzimuthField3">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmAngleField1">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmAngleField2">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTConstructionAidFieldConstants.gtvmAngleField3">
            <summary>Construction Aid Field constant</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTStyleColorConstants">
            <summary>Intergraph G/Technology Style Color Constants.</summary>
            <remarks>Used by <see cref="P:Intergraph.GTechnology.API.IGTSymbology.Color">Symbology Color</see>.
            Used by <see cref="P:Intergraph.GTechnology.API.IGTSymbology.FillColor">Symbology FillColor</see>.
            </remarks>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStyleColorConstants.gtcolTransparent">
            <summary>
            Deprecated constant.  To make a style transparent, specify a translucency of 100%.
            Maintained for backward compatibility.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTStyleColorConstants.gtcolBackground">
            <summary>
            Specifies that the background color of the map or plot sheet be used to draw the
            element. Often used as a fill color to mask out elements below.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants">
            <summary>
            The GTReplaceVertexByFilletConstants enumeration is used with the GTCompositePolylineGeometry.ReplaceVertexByFillet
            function.
            <para/>
            The following values can be used by the caller to determine whether the replacement succeeded or find out why the
            replacement did not take place.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfSuccess">
            <summary>
            The vertex has been successfully replaced by the fillet arc.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfInvalidRadius">
            <summary>
            Radius must be greater than 0.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfInvalidGeometryType">
            <summary>
            The input geometry must be either composite polygon or composite polyline.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfCannotReplaceFirstVertex">
            <summary>
            The first vertex of composite polyline cannot be replaced by a fillet.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfCannotReplaceLastVertex">
            <summary>
            The last vertex of composite polyline cannot be replaced by a fillet.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfInvalidKeyPointIndex">
            <summary>
            Invalid key point index (must be greater than 0 and less or equal than key point count).
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfCannotManipulateArcItem">
            <summary>
            The specified key point and its adjacent key points must be polyline vertices. This method does not adjust any of the existing arc items in the input geometry.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfInvalidPolylineItem">
            <summary>
            A polyline item with less than 2 points present in the composite polyline/polygon.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfInvalidCompositeGeometryItem">
            <summary>
            An item that is neither polyline nor arc present in the composite polyline/polygon.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfRadiusTooLarge">
            <summary>
            The specified radius is too large. The calculated fillet arc cannot be merged with the line segment(s) adjacent to the specified key point.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTReplaceVertexByFilletConstants.gtrvfCannotCalculateFilletArc">
            <summary>
            Cannot calculate the fillet arc. The input geometry may contain overlapping vertices or collinear line segments.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.DGNVersion">
            <summary>
            Microstation versions.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.DGNVersion.V7">
            <summary>
            Microstation version 7.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.DGNVersion.V8">
            <summary>
            Microstation version 8.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.CADGeometryDimension">
            <summary>
            CAD output geometry dimensions.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.CADGeometryDimension.Output2D">
            <summary>
            2D geometry dimension.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.CADGeometryDimension.Output3D">
            <summary>
            3D geometry dimension.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.AutoCADOutputFileType">
            <summary>
            AutoCAD output file types.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.AutoCADOutputFileType.DWG">
            <summary>
            AutoCAD DWG format.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.AutoCADOutputFileType.ASCIIDXF">
            <summary>
            AutoCAD ASCII DXF.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.AutoCADOutputFileType.BinaryDXF">
            <summary>
            AutoCAD Binary DXF.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.PageOrientationType">
            <summary>
            The Paper Orientation.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.PageOrientationType.Portrait">
            <summary>
            Portrait.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.PageOrientationType.Landscape">
            <summary>
            Landscape.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.PageSizeValue">
            <summary>
            The paper size.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.PageSizeValue.Custom">
            <summary>
            Custom Size.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.PageSizeValue.Letter">
            <summary>
            Letter (8 1/2 x 11 in).
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.PageSizeValue.Legal">
            <summary>
            Legal (8 1/2 x 14 in).
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.PageSizeValue.A3">
            <summary>
            A3 (297 x 420 mm).
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.PageSizeValue.A4">
            <summary>
            A4 (210 x 297 mm).
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.PageSizeValue.Auto">
            <summary>
            Auto Size.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.ResolutionValue">
            <summary>
            The printer resolution.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.ResolutionValue.DPI72">
            <summary>
            72 dpi.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.ResolutionValue.DPI150">
            <summary>
            150 dpi.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.ResolutionValue.DPI300">
            <summary>
            300 dpi.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.ResolutionValue.DPI600">
            <summary>
            600 dpi.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.ResolutionValue.DPI1200">
            <summary>
            1200 dpi.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTKeypointConstants">
            <summary>
            KeyPoint constant.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTKeypointConstants.gtkptVertex">
            <summary>
            An ordinary vertex.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTKeypointConstants.gtkptEndVertex">
            <summary>
            An end vertex, meaning the very first or last point of a polyline or polygon geometry.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTKeypointConstants.gtkptOrigin">
            <summary>
            Origin point of the geometry.  For example, a GTOrientedPointGeometry has
            an origin.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTKeypointConstants.gtkptMidPoint">
            <summary>
            Midpoint of an arc.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTKeypointConstants.gtkptEndPoint">
            <summary>
            Endpoint of an arc or line geometry.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSegmentPointType">
            <summary>
            GTSegmentPointType conveys additional information about the associated point.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSegmentPointType.gtsptOnSegment">
            <summary>
            For an intersection, indicates that the intersection lies on the two geometries intersected.
            For a projection, indicates that the projection lies on the target segment.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSegmentPointType.gtsptOnEndpoint">
            <summary>
            Not used for intersections.  For a projection, indicates that a perpendicular projection was not possible,
            so the result is an endpoint of the target segment.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSegmentPointType.gtsptOnExtendedSegment">
            <summary>
            For an intersection, indicates that the intersection lies on the extension of one or both input segments.
            For a projection, indicates that the projection lies on an extension of the target segment.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSegmentPointType.gtsptOverlap">
            <summary>
            Not used for projections.
            For an intersection, indicates that the input geometries overlap in an infinite number of points.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSchematicArrangement">
            <summary>
            Describes the arrangement of a schematic element..
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicArrangement.gtsaOriented">
            <summary>
            Oriented.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicArrangement.gtsaTopological">
            <summary>
            Topological.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicArrangement.gtasGeographical">
            <summary>
            Geographical.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSchematicLabelAlignment">
            <summary>
            Describes the horizontal alignment of a label.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelAlignment.gtslaBottomCenter">
            <summary>
            Bottom center.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelAlignment.gtslaBottomLeft">
            <summary>
            Bottom left.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelAlignment.gtslaBottomRight">
            <summary>
            Bottom right.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelAlignment.gtslaMiddleCenter">
            <summary>
            Middle center.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelAlignment.gtslaMiddleLeft">
            <summary>
            Middle left.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelAlignment.gtslaMiddleRight">
            <summary>
            Middle right.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelAlignment.gtslaTopCenter">
            <summary>
            Top center.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelAlignment.gtslaTopLeft">
            <summary>
            Top left.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelAlignment.gtslaTopRight">
            <summary>
            Top right.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTSchematicLabelPosition">
            <summary>
            Describes the vertical position of a label.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelPosition.gtslpAboveCenter">
            <summary>
            Above center.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelPosition.gtslpAboveLeft">
            <summary>
            Above left.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelPosition.gtslpAboveRight">
            <summary>
            Above right.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelPosition.gtslpBelowCenter">
            <summary>
            Below center.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelPosition.gtslpBelowLeft">
            <summary>
            Below left.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelPosition.gtslpBelowRight">
            <summary>
            Below right.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelPosition.gtslpOnEntityCenter">
            <summary>
            On entity center.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelPosition.gtslpOnEntityLeft">
            <summary>
            On entity left.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTSchematicLabelPosition.gtslpOnEntityRight">
            <summary>
            On entity right.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTZoneService">
            <summary>Intergraph G/Technology IGTZoneService API.</summary>
            <remarks>
            The IGTZoneService object can be used by custom command software or any of the Microsoft Visual Basic for Applications interfaces to generate zones around features and merge areas. This service supports both merging and zone generation independently as well as enables the possibility to combine zoning and merging in one step. 
            <para/>For general information about configuring the sample Temporary Geometry Placement interface, see Customizing the Sample Temporary Geometry Placement Interfaces. 
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTZoneService.InputGeometries">
            <summary>Property to return/set the geometries which should be processed (around which the zone should be created or which should be merged).</summary>
            <remarks>All geometries are expected to be in the same units and in the coordinate system of the published configuration.
            <para/>The InputGeometries property accepts the following types of input objects:
            <list type="bullet">
            <item>IGTPointGeometry</item>
            <item>IGTOrientedPointGeometry</item>
            <item>IGTLineGeometry</item>
            <item>IGTArcGeometry</item>
            <item>IGTPolylineGeometry</item>
            <item>IGTCompositePolylineGeometry</item>
            <item>IGTPolygonGeometry</item>
            <item>IGTCompositePolygonGeometry</item>
            <item>IGTBoundaryGeometry</item>
            </list>
            <para/>
            In addition to this set of objects, the property also accepts a <see cref="T:Intergraph.GTechnology.API.IGTGeometryCollection">IGTGeometryCollection</see>. This collection is expected to contain any combination of the 
            above mentioned geometry types.
            <para/>
            If the object set using this property is not any of the above mentioned types, an error is raised.
            <para/>
            The content of the IGTGeometryCollection is also verified and an error is raised if the collection contains an object of a type that is not 
            supported. However, this is done in the OutputGeometries property because the content of the collection can change between these two calls.
            <para/>
            The following geometry types are not supported:
            <list type="bullet">
            <item>IGTRasterGeometry</item>
            <item>IGTTextPointGeometry</item>
            </list>
            <para/>
            When a zone around a polygon or composite polygon (area) geometry is generated, the result is an area larger by ZoneWidth.
            <para/>
            When a zone around a boundary geometry with a hole is generated, the result is a larger area (by ZoneWidth) with a smaller hole (which might be omitted 
            completely if the hole size is smaller than ZoneWidth/2).</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTZoneService.LinearZoneEndCapType">
            <summary>Property to return/set the end cap type of the zone that will be created for linear geometries. Ignored for non-linear geometries.</summary>
            <remarks>Specifying the LinearZoneEndCapType tells the service to create either a round or rectangular end cap when creating the zone around a linear 
            geometry. If the LinearZoneEndCapType is not specified, the service defaults to round end caps.
            <para/>This property applies to linear geometries only. It is ignored for point and area geometries. You cannot get rectangular or square zones around 
            point features.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTZoneService.Merged">
            <summary>Property to return/set a flag determining if the area geometries that overlap each other should be returned as one merged geometry. Default is False.</summary>
            <remarks>
            Specifying the Merged property tells the service to return the geometries merged where possible. For instance, if two lines with an intersection are the geometry 
            input for the service, the result will be one of the following:
            <para/>
            <list type="bullet">
            <item>One zone — A zone around both input lines if Merged is set to True.</item>
            <item>Two zones — One zone around each of the input lines if Merged is set to False. As the lines intersect, there will be an area where the resulting areas overlap each other.</item>
            </list>
            <para/>If the Merged property is set to True and ZoneWidth is set to 0 and the InputGeometries collection of features contains geometries other than polygon, composite polygon, 
            or boundary, an error is raised.
            <para/>
            The default value is False.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTZoneService.OutputGeometries">
            <summary>Property to return the resulting (zone or merged) geometries.</summary>
            <remarks>A collection with no geometries is returned if no geometries have been set using the InputGeometries property.
            <para/>Regardless from the number of geometries set by the InputGeometries property, the output of this property will 
            always be a IGTGeometryCollection.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTZoneService.ZoneWidth">
            <summary>Property to return/set the width of the zone to be created around input geometries.</summary>
            <remarks>The ZoneWidth is specified in the units of coordinate system of geometry.
            <para/>Specifying a negative ZoneWidth for point features results in the point geometries' not being present in 
            the output collection of geometries.
            <para/>Specifying a negative ZoneWidth for area geometries will shrink the area geometry.
            <para/>When set to 0, the input geometries are not to be modified.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTVector">
            <summary>Intergraph G/Technology IGTVector Interface.</summary>
            <remarks>
            IGTVector represents a 3-dimensional mathematical vector.
            Note that GTVector is a value type which implements IGTVector interface.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTVector.Normalize">
            <summary>
            Returns a unit vector in the same direction as the input IGTVector.
            </summary>
            <returns>IGTVector</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTVector.BuildVector(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            Returns the vector from point <paramref name="p1"/> to point <paramref name="p2"/>.
            </summary>
            <param name="p1">A IGTPoint object.</param>
            <param name="p2">A IGTPoint object.</param>
            <returns>IGTVector</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTVector.DotProduct(Intergraph.GTechnology.API.IGTVector,Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Returns the inner (dot) products of IGTVector <paramref name="v1"/> and <paramref name="v2"/>.
            </summary>
            <param name="v1">A IGTVector object.</param>
            <param name="v2">A IGTVector object.</param>
            <returns>double</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTVector.CrossProduct(Intergraph.GTechnology.API.IGTVector,Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Returns the outer (cross) product of IGTVector <paramref name="v1"/> and <paramref name="v2"/>.
            </summary>
            <param name="v1">A IGTVector object.</param>
            <param name="v2">A IGTVector object.</param>
            <returns>IGTVector</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTVector.AddVectors(Intergraph.GTechnology.API.IGTVector,Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Returns the vector sum of the two vectors.
            </summary>
            <param name="v1">A IGTVector object.</param>
            <param name="v2">A IGTVector object.</param>
            <returns>IGTVector</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTVector.SubtractVectors(Intergraph.GTechnology.API.IGTVector,Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Returns the vector difference between the two vectors.
            </summary>
            <param name="v1">A IGTVector object.</param>
            <param name="v2">A IGTVector object.</param>
            <returns>IGTVector</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTVector.NegateVector(Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Returns the negation of the input vector <paramref name="v"/>.  Note that this
            is equivalent to <paramref name="v"/>*(-1.0).
            </summary>
            <param name="v">A IGTVector object.</param>
            <returns>IGTVector</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTVector.ScaleVector(System.Double)">
            <summary>
            Returns a vector pointing in the same direction as the input vector
            but with a magnitude <paramref name="value"/> times the magnitude
            of the input vector.  In other words,
            <para/>
            x.ScaleVector(v).Magnitude == v*x.Magnitude
            <para/>and<para/>
            x.ScaleVector(v).Normalize == x.Normalize.
            </summary>
            <param name="value">A value to scale the GTVector object.</param>
            <returns>IGTVector</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTVector.IsNull">
            <summary>
            Returns true if this vector's length is within the positional
            tolerance of zero.  <seealso cref="P:Intergraph.GTechnology.API.IGTMath.PositionalTolerance"/>.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTVector.XAxis">
            <summary>
            Returns a unit vector in the X-direction.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTVector.YAxis">
            <summary>
            Returns a unit vector in the Y-direction.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTVector.ZAxis">
            <summary>
            Returns a unit vector in the Z-direction.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTVector.I">
            <summary>
            Returns or sets the X-axis component of the vector.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTVector.J">
            <summary>
            Returns or sets the Y-axis component of the vector.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTVector.K">
            <summary>
            Returns or sets the Z-axis component of the vector.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTVector.Magnitude">
            <summary>
            Returns the magnitude of this IGTVector.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTTextPointGeometry">
            <summary>Intergraph G/Technology IGTTextPointGeometry API.</summary>
            <remarks>
            IGTTextPointGeometry represents a textual label with a position and rotation.
            <para/>The IGTTextPointGeometry object consists of an origin point, text (formatted as rich or ordinary text), an indicator of how the text is formatted, a rotation angle, an alignment, and a normal unit vector. 
            <para/>The origin point is stored as a IGTPoint object in the Origin property. The coordinates for the origin can be returned or modified through the X, Y, and Z properties of the IGTPoint object. 
            <para/>The normal unit vector is stored as a IGTVector object in the Normal property. The components of the normal unit vector can be returned or modified through the I, J, and K properties of the Vector object. 
            <para/>All IGTTextPointGeometry objects have an angle of rotation. The rotation and the normal unit vector are calculated in relation to the origin point. 
            <para/>A feature stored as a IGTTextPointGeometry object is rendered at the stored rotation and normal unit vector. The amount of rotation in degrees is read from storage and is applied counterclockwise from the origin point. Likewise, the normal unit vector is read from storage and applied to the feature. 
            <para/>IGTTextPointGeometry is used only related to secondary published databases and in the display pathway.
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPointGeometry">
            <summary>Intergraph G/Technology IGTPointGeometry API.</summary>
            <remarks>
            The point is stored as a IGTPoint object in the Origin property. The coordinates for the origin can be returned or 
            modified through the X, Y, and Z properties of the IGTPoint object.
            <para/>
            A IGTPoint is distinct from the IGTPointGeometry in that the IGTPoint object is an X, Y, Z position in space that 
            describes higher geometry objects. This point can be a member of the IGTPoints collection. As a members of the 
            collection, IGTPoint objects describe multiple positions in a IGTPolylineGeometry object or a IGTPolylgonGeometry object.
            <para/>
            The IGTPointGeometry object is a type of geometry object as are IGTLineGeometry, IGTPolylineGeometry, and IGTPolylgonGeometry 
            objects. This IGTPointGeometry object can be a member of the IGTGeometryCollection object.
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPointGeometry.Origin">
            <summary>
            The Origin property returns the origin point or sets a point of reference that is used to determine the normal vector. This origin point is used to determine alignment, rotation, height and width, normal vectors, and so forth.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTTextPointGeometry.Alignment">
            <summary>
            Returns or sets the alignment of the geometry's position with its bounding
            box.  The 9 possible values correspond to the 4 corners of the bounding box,
            the 4 centers of each edge of the bounding box, and the center of the box.
            The Alignment determines where the text appears relative to the Origin (the
            position) of the geometry.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTTextPointGeometry.Format">
            <summary>
            Returns an indicator of the format of the text.
            <para/>
            A property value of gtfmtRichText indicates that the text is in Rich Text
            format. The property value gtfmtUnGTFormatted indicates plain
            unformatted text.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTTextPointGeometry.Normal">
            <summary>
            Returns or sets the vector that represents normal to the plane in which the textpoint geometry lies.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTTextPointGeometry.RichText">
            <summary>
            Returns or sets the rich text stored with the IGTTextPointGeometry object. This text must be in
            rich text format.
            </summary>
            <remarks>
            Text set by the RichText property is stored only if the Format property is set for rich text(gmfRichText).
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTTextPointGeometry.Rotation">
            <summary>
            Returns or sets the rotation in degrees of the text geometry.
            </summary>
            <remarks>
            This rotation angle is measured counterclockwise from the origin point. The new rotation angle is not stored until the applicable record is updated with the new geometry.
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTTextPointGeometry.Text">
            <summary>
            Returns or sets the unformatted text stored with the IGTTextPointGeometry object.
            </summary>
            <remarks>
            Text set by the Text property is stored only if the Format property is set for unformatted text(gmfUnformatted). 
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTNamedPlot">
            <summary>Intergraph G/Technology IGTNamedPlot API.</summary>
            <remarks>
            IGTNamedPlot provides access to the properties and methods of a named plot. A named plot is a named layout of a single sheet of paper containing maps, embedded objects, and redlines to be printed. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTNamedPlot.CopyPlot(System.String)">
            <summary>Method to create a copy of a specified plot.</summary>
            <param name="NewName">The name of the new plot to create.</param>
            <returns>IGTNamedPlot</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTNamedPlot.GetRedlines(Intergraph.GTechnology.API.GTPlotRedlineCollectionConstants)">
            <summary>Method to get a collection of plot redlines for this plot.</summary>
            <param name="PlotRedlinesType">The type of redlines to retrieve. Defaults to gtprcAll.</param>
            <remarks>The collection of redlines returned is not simply a snapshot of the current state; the collection may be implicitly 
            modified if redlines are added to the plot after calling GetRedlines.</remarks>
            <returns>IGTPlotRedlines</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTNamedPlot.CreateCustomInterface(System.Int32)">
            <summary>Method to create a custom plot interface.</summary>
            <param name="Interface">The G3E_RINO index for the interface to be created.</param>
            <remarks>This allows a custom command to call the interface. It also allows you to test and debug your custom interface interactively 
            and to reuse code from the custom interface for your command.</remarks>
            <returns>IGTCustomPlot</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTNamedPlot.NewRedline(Intergraph.GTechnology.API.IGTGeometry,System.Int32)">
            <summary>Method to create a new plot redline.</summary>
            <param name="RedlineGeometry">The geometry of the new redline. The type of geometry must be IGTPolygonGeometry for an area, IGTPolylineGeometry for 
            a line, IGTOrientedPointGeometry for a point, or IGTTextPointGeometry for text.</param>
            <param name="StyleID">The style number for the new redline. To override aspects of this style, use the Symbology property of the returned 
            GTRedline object to do so.</param>
            <remarks>Default value GTPlotRedlineGroupNumberConstants.gtprgNoGroupNumber is used for GroupNumber.</remarks>
            <returns>IGTPlotRedline</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTNamedPlot.NewRedline(Intergraph.GTechnology.API.IGTGeometry,System.Int32,System.Int32)">
            <summary>Method to create a new plot redline.</summary>
            <param name="GroupNumber">he group number assigned to the new redline unless omitted or new. If GroupNumber is gtprgNoGroupNumber (0) or is 
            not supplied, the new redline is not assigned to a new or existing group. If GroupNumber is gtprgNewGroupNumber (-1), the new redline is assigned 
            to a new group. The programmer can use the returned IGTPlotRedline's GroupNumber in a subsequent call to add geometries to the same group. If GroupNumber 
            is greater than 0, the new redline element is associated with the input GroupNumber. The behavior is undefined if this value is not the same as the GroupNumber 
            attribute of an existing GTPlotRedline object. If GroupNumber is less than -1 or greater than the last group number used by the GTNamedPlot, an error is raised.</param>
            <param name="StyleID">The style number for the new redline. To override aspects of this style, use the Symbology property of the returned 
            GTRedline object to do so.</param>
            <param name="RedlineGeometry">The geometry of the new redline. The type of geometry must be IGTPolygonGeometry for an area, IGTPolylineGeometry for 
            a line, IGTOrientedPointGeometry for a point, or IGTTextPointGeometry for text.</param>
            <remarks>You cannot create a new object or map frame using NewRedline. Use the InsertMap, InsertObjectFromFile, or InsertObjectFromProgID methods of IGTPlotWindow instead.</remarks>
            <returns>IGTPlotRedline</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTNamedPlot.FieldsQuery">
            <summary>Property to return/set an SQL string to use to update automatic fields.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTNamedPlot.Frames">
            <summary>Property to return a collection of IGTPlotFrame objects.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTNamedPlot.Name">
            <summary>Property to return/set the name of this plot.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTNamedPlot.PaperHeight">
            <summary>Property to return/set the height, in paper units, of the virtual sheet of paper on which this plot is drawn.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTNamedPlot.PaperWidth">
            <summary>Property to return/set the width, in paper units, of the virtual sheet of paper on which this plot is drawn.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTNamedPlot.StyleMap">
            <summary>Property to return/set the StyleMap for the named plot.</summary>
            <remarks>The StyleMap is specified by name. If specified, this identifies a named 
            set of style substitutions, defined in metadata, to use in drawing the elements of 
            the plot. An empty string can be passed in to indicate no style mapping is being used.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTMapWindows">
            <summary>Intergraph G/Technology IGTMapWindows API.</summary>
            <remarks>The IGTMapWindows object is a collection of IGTMapWindow objects. The IGTMapWindows interface provides properties for accessing each IGTMapWindow. </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTReadOnlyCollectionBase">
            <summary>Intergraph G/Technology IGTReadOnlyCollectionBase API.</summary>
            <remarks>
            Intergraph GTechnology read only collection objects like IGTPlotFrames, IGTPlotWindows and IGTRecordsets derive from IGTReadOnlyCollectionBase.
            For internal use only.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMapWindows.Item(System.Int32)">
            <summary>Property to return a specific IGTMapWindow in the collection.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTFeatureExplorerService">
            <summary>Intergraph G/Technology IGTFeatureExplorerService Object.</summary>
            <remarks>
            The IGTFeatureExplorerService object lets you use Feature Explorer to place, edit, and review features. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureExplorerService.Clear">
            <summary>Method to clear the contents of Feature Explorer.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureExplorerService.ExploreFeature(Intergraph.GTechnology.API.IGTKeyObject,System.String)">
            <summary>Method to load a single feature into Feature Explorer.</summary>
            <param name="Feature">The GTKeyObject for the feature that is to be explored.</param>
            <param name="DialogType">The type of dialog box to use when exploring the specified feature.</param>
            <remarks>There are three predefined values for dialog type: "Review", "Edit", and "Placement." In 
            addition to these values, the command can pass in a dialog-box name defined in metadata in G3E_DIALOG.G3E_TYPE. 
            For ExploreFeature, the dialog type must be set up for a single feature. The allowed values for DialogType for 
            a given feature are determined by the result of the following query:
            <para/>
            select distinct(g3e_type) from g3e_dialog where g3e_fno = [feature number]
            <para/>
            When displaying tabs, FeatureExplorer uses the following query to determine which tabs are to be displayed:
            <para/>
            select * from g3e_dialogs_optable where g3e_type = [DialogType] and g3e_fno = [feature number]
            <para/>
            When the DialogType parameter is "Review," the tree view is enabled and traversable. If the DialogType 
            parameter is any other value, the tree view is disabled, the Locked property is set to True, and the Edit 
            toolbar is displayed.
            <para/>
            If this method is called with any dialog type aside from "Review," a transaction should begin before this 
            call is made. The command is responsible for transaction management. Otherwise, the edits made to the feature 
            will not be saved when the database is updated.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureExplorerService.ExploreFeatures(Intergraph.GTechnology.API.IGTKeyObjects,System.String)">
            <summary>Method to load multiple features into Feature Explorer.</summary>
            <param name="Features">The GTKeyObjects object for the feature to be explored.</param>
            <param name="DialogType">The type of dialog box to use when exploring the specified feature.</param>
            <remarks>The predefined values for dialog type described in the ExploreFeature method are not permitted for this 
            method. The command must pass in a dialog type name defined in G3E_DIALOG.G3E_TYPE.
            <para/>
            For ExploreFeatures, no validation is done to make sure that the feature types required for the configuration are 
            present in the KeyObjects collection. If a feature present in the GTKeyObjects collection has a tab or set of tabs 
            defined, that feature is displayed. Otherwise, that feature is not displayed.
            <para/>
            The list of tabs defined for a DialogType can be found by the following query:
            <para/>
            select * from g3e_dialogs_optable where g3e_type = [DialogType]
            <para/>
            Specifying this method always puts Feature Explorer in Edit mode; that is, the Edit toolbar is displayed, the tree view 
            is disabled, and the Locked property is set to True.
            <para/>
            A transaction should begin before this call is made. The command is responsible for transaction management. Otherwise, 
            edits made to the feature will not be saved when the database is updated.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeatureExplorerService.Slide(System.Boolean)">
            <summary>Method to slide Feature Explorer out or in.</summary>
            <param name="SlideOut">Specifies whether the control is sliding out or sliding in. If True, Feature Explorer is slid out. If False, Feature 
            Explorer is slid in.</param>
            <remarks>The current state of Feature Explorer is not a consideration when calling this method.</remarks>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTFeatureExplorerService.CancelClick">
            <summary>Event raised when the cancel button is clicked on the Feature Explorer toolbar.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTFeatureExplorerService.SaveAndContinueClick">
            <summary>Event raised when the save and continue button is clicked on the Feature Explorer toolbar.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTFeatureExplorerService.SaveClick">
            <summary>Event raised when the save button is clicked on the Feature Explorer toolbar.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTFeatureExplorerService.Locked">
            <summary>Property to return/set whether the select set synchronization behavior of Feature Explorer is locked.</summary>
            <remarks>The Locked property is set to True by a command to lock FeatureExplorer so that it does not try to stay in sync 
            with the select set.
            <para/>This property is automatically set to True if the DialogType parameter for ExploreFeature or ExploreFeatures is 
            any value other than "Review".
            <para/>This property is set to False by a command to release FeatureExplorer after use. This action hides the Edit toolbar 
            if it is visible. It also allows the synchronization between Feature Explorer and the select set to continue.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTFeatureExplorerService.Visible">
            <summary>Property to return/set whether or not Feature Explorer is visible.</summary>
            <remarks>This is not an indication of whether Feature Explorer is slid in or out, but rather if it is visible within the framework.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTEliminationComponent">
            <summary>Intergraph G/Technology IGTEliminationComponent API.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTEliminationComponent.CID">
            <summary>Property to return/set the CID of the component instance to be destined.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTEliminationComponent.CNO">
            <summary>Property to return/set the CNO of the component instance to be destined.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTEliminationComponent.Destination">
            <summary>Property to return/set how this particular component instance is to be destined.  This property is only meaningful for objects in the DestinationList.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTBoundaryGeometry">
            <summary>Intergraph G/Technology IGTBoundaryGeometry API.</summary>
            <remarks>IGTBoundaryGeometry represents a polygon with excluded interior regions. Typically, the exterior geometry is a polygon geometry, although 
            it may be a closed polyline geometry, that defines the boundary geometry extents. 
            It is created separately from the IGTBoundaryGeometry Object and is then assigned to the IGTBoundaryGeometry.Exterior property.
            <para/>
            Interior regions are geometry objects that are completely contained within the area of the exterior geometry and must not 
            overlap each other. The collection of interior regions is a IGTGeometryCollection object that is automatically created when the 
            IGTBoundaryGeometry is created. It is stored in the IGTBoundaryGeometry.Holes property.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTBoundaryGeometry.GetComponentKeypointIndexOffset(System.Int32)">
            <summary>
            The GetComponentKeypointIndexOffset function returns the offset from which keypoint indexes begin for a specific
            component in the given geometry object.
            </summary>
            <remarks>
            A geometry object which can have component geometries, such as a GeometryCollection object, contains all of the
            keypoints defined by its components. It is sometimes necessary to find out what the index of a keypoint defined by a
            certain component is in the scope of the parent geometry.
            <para/>
            <b>Example:  </b>A certain GeometryCollection object, P, contains two components C1 and C2. C1 (a PolylineGeometry) has 5 keypoints, and
            C2 (an ArcGeometry) has 3 keypoints. Therefore, P has a total of 8 keypoints. To find the index of C2’s second keypoint
            within the scope of P, you can use GetComponentKeypointIndexOffset. The keypoint index offset for C2 in this case would
            be 5 because C1 has 5 keypoints. So C2’s second keypoint has an index of 7 ( 2 + 5) with respect to the list of
            keypoints in P.
            </remarks>
            <param name="keypoint_index">The index of the component.  Must be between 0 and Count-1.</param>
            <returns>Offset</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTBoundaryGeometry.Exterior">
            <summary>
            Returns or sets the geometry forming the exterior of the boundary.  This is
            typically a polygon geometry.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTBoundaryGeometry.Holes">
            <summary>
            Returns the geometry collection representing the holes (excluded regions) of
            the boundary. Note that modifying this collection will modify the holes of the
            boundary.
            <para/>
            Methods and properties for the IGTGeometryCollection object extend to the IGTBoundaryObject object through the Holes property. 
            Therefore, geometry objects representing holes in the area defined by the exterior object can be added, removed, and individually returned through the Holes property. 
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSymbology">
            <summary>Intergraph G/Technology IGTSymbology API.</summary>
            <remarks>
            The IGTSymbology object defines symbology information for displaying queries. The object describes the visual graphic attributes of the text, symbols, areas, and lines used to display a query. 
            <para/>After setting the properties of the IGTSymbology object, you must set the 
            Symbology property on the IGTPlotRedline object. Modifying the properties of the IGTSymbology 
            object itself will have no effect unless you then set the Symbology property of the 
            IGTPlotRedline object.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSymbology.Color">
            <summary>Property to return/set the RGB color value to be used as an override.  It defaults to Null, which indicates that this property should not be used as an override.  <see cref="T:Intergraph.GTechnology.API.GTStyleColorConstants">GTStyleColorConstants</see> can be used instead of a specific RGB value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSymbology.FillColor">
            <summary>Property to return/set the RGB fillcolor value to be used as an override.  It defaults to Null, which indicates that this property should not be used as an override.  <see cref="T:Intergraph.GTechnology.API.GTStyleColorConstants">GTStyleColorConstants</see> can be used instead of a specific RGB value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSymbology.Translucency">
            <summary>Property to return/set the translucency value to be used as an override.  It defaults to Null, which indicates that this property should not be used as an override.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSymbology.FillTranslucency">
            <summary>Property to return/set the fill translucency value to be used as an override.  It defaults to Null, which indicates that this property should not be used as an override.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSymbology.Size">
            <summary>Property to return/set the symbol/text size to be used as an override.  Size units are in Points (1 pt = 1/72 in) ranging from 1 to 500,000.  It defaults to Null, which indicates that this property should not be used as an override.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSymbology.Width">
            <summary>Property to return/set the line/boundary width to be used as an override.  Width units are in Points (1 pt = 1/72 in) ranging from 0 to 500,000.  It defaults to Null, which indicates that this property should not be used as an override.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSnapService">
            <summary>Intergraph G/Technology IGTSnapService API.</summary>
            <remarks>
            The IGTSnapService object provides the automation for snapping a point on or along a geometry object. The point that is snapped to can be constrained to snap to the ends, middle or existing vertices on the geometry.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSnapService.SnapToGeometry(Intergraph.GTechnology.API.IGTGeometry,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint@)">
            <summary>Method to analyze vector or raster data and snap to the closest location on the given geometry from a user-specified point within a user-specified tolerance.  The (Raster)SnapTypesEnabled property determines the types of points to which to snap.</summary>
            <param name="InputGeometry">Input geometry to which to snap.</param>
            <param name="InputPoint">Input point used to snap to InputGeometry.</param>
            <param name="SnapPoint">Point projected onto the SnapGeometry.</param>
            <returns>GTSnapTypesConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSnapService.SnapToGeometry(Intergraph.GTechnology.API.IGTGeometry,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint@,Intergraph.GTechnology.API.IGTGeometry@)">
            <summary>Method to analyze vector or raster data and snap to the closest location on the given geometry from a user-specified point within a user-specified tolerance.  The (Raster)SnapTypesEnabled property determines the types of points to which to snap.</summary>
            <param name="InputGeometry">Input geometry to which to snap.</param>
            <param name="InputPoint">Input point used to snap to InputGeometry.</param>
            <param name="SnapPoint">Point projected onto the SnapGeometry.</param>
            <param name="snapGeometry">Geometry to which the InputPoint was snapped. If the input geometry is a type that consists of multiple subgeometries, such as a boundary geometry, the SnapGeometry will be the subgeometry to which the input point was snapped.</param>
            <returns>GTSnapTypesConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSnapService.SnapToGeometry(Intergraph.GTechnology.API.IGTGeometry,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint@,Intergraph.GTechnology.API.IGTGeometry@,System.Double@)">
            <summary>Method to analyze vector or raster data and snap to the closest location on the given geometry from a user-specified point within a user-specified tolerance.  The (Raster)SnapTypesEnabled property determines the types of points to which to snap.</summary>
            <param name="InputGeometry">Input geometry to which to snap.</param>
            <param name="InputPoint">Input point used to snap to InputGeometry.</param>
            <param name="SnapPoint">Point projected onto the SnapGeometry.</param>
            <param name="snapGeometry">Geometry to which the InputPoint was snapped. If the input geometry is a type that consists of multiple subgeometries, such as a boundary geometry, the SnapGeometry will be the subgeometry to which the input point was snapped.</param>
            <param name="snapDistance">The distance from the InputPoint to the SnapPoint.</param>
            <returns>GTSnapTypesConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSnapService.SnapToGeometry(Intergraph.GTechnology.API.IGTGeometry,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint@,Intergraph.GTechnology.API.IGTGeometry@,System.Double@,System.Int32@)">
            <summary>Method to analyze vector or raster data and snap to the closest location on the given geometry from a user-specified point within a user-specified tolerance.  The (Raster)SnapTypesEnabled property determines the types of points to which to snap.</summary>
            <param name="InputGeometry">Input geometry to which to snap.</param>
            <param name="InputPoint">Input point used to snap to InputGeometry.</param>
            <param name="SnapPoint">Point projected onto the SnapGeometry.</param>
            <param name="snapDistance">The distance from the InputPoint to the SnapPoint.</param>
            <param name="snapGeometry">Geometry to which the InputPoint was snapped. If the input geometry is a type that consists of multiple subgeometries, such as a boundary geometry, the SnapGeometry will be the subgeometry to which the input point was snapped.</param>
            <param name="KeyPointIndex">The index value (as related to the snapped geometry) of the vertex that is previous to the snapped point. When the input geometry on which the snap is being performed is not a type that can contain multiple subgeometries, then this 
            value is the same as the KeyPointTotalIndex. When the input geometry is a type that can contain subgeometries, such as a boundary geometry, then this value would be the index as it relates to the subgeometry to which the point was snapped.</param>
            <returns>GTSnapTypesConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSnapService.SnapToGeometry(Intergraph.GTechnology.API.IGTGeometry,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint@,Intergraph.GTechnology.API.IGTGeometry@,System.Double@,System.Int32@,System.Int32@)">
            <summary>Method to analyze vector or raster data and snap to the closest location on the given geometry from a user-specified point within a user-specified tolerance.  The (Raster)SnapTypesEnabled property determines the types of points to which to snap.</summary>
            <param name="InputGeometry">Input geometry to which to snap.</param>
            <param name="InputPoint">Input point used to snap to InputGeometry.</param>
            <param name="SnapPoint">Point projected onto the SnapGeometry.</param>
            <param name="snapGeometry">Geometry to which the InputPoint was snapped. If the input geometry is a type that consists of multiple subgeometries, such as a boundary geometry, the SnapGeometry will be the subgeometry to which the input point was snapped.</param>
            <param name="snapDistance">The distance from the InputPoint to the SnapPoint.</param>
            <param name="KeyPointIndex">The index value (as related to the snapped geometry) of the vertex that is previous to the snapped point. When the input geometry on which the snap is being performed is not a type that can contain multiple subgeometries, then this 
            value is the same as the KeyPointTotalIndex. When the input geometry is a type that can contain subgeometries, such as a boundary geometry, then this value would be the index as it relates to the subgeometry to which the point was snapped.</param>
            <param name="keyPointTotalIndex">The index value (as it is related to the geometry contained in the total composite) of the vertex that is previous to the snapped point.</param>
            <returns>GTSnapTypesConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSnapService.GetClosedSymbolSize(System.Double@,System.Double@)">
            <summary>Method to return the minimum and maximum closed symbol size tolerance.  These tolerances are used to determine the size of a closed symbol.</summary>
            <param name="minimumSize">Minimum symbol size.</param>
            <param name="maximumSize">Maximum symbol size.</param>
            <remarks>The closed symbol size is the diameter of a closed or solid raster symbol.
            <para/>
            Sizes are defined in units of the current configuration's DDCs.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSnapService.SetClosedSymbolSize(System.Double,System.Double)">
            <summary>Method to set the minimum and maximum closed symbol size tolerance.  These tolerances are used to determine the size of a closed symbol.</summary>
            <param name="minimumSize">Minimum symbol size.</param>
            <param name="maximumSize">Maximum symbol size.</param>
            <remarks>The closed symbol size is the diameter of a closed or solid raster symbol.
            <para/>This method will validate that the minimum size is smaller than the maximum size and that both values are positive.
            <para/>Sizes are defined in units of the current configuration's DDCs.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSnapService.GetOpenSymbolSize(System.Double@,System.Double@)">
            <summary>Method to return the minimum and maximum open symbol size tolerance.  These tolerances are used to determine the size of a open symbol.</summary>
            <param name="minimumSize">Minimum symbol size.</param>
            <param name="maximumSize">Maximum symbol size.</param>
            <remarks>The open symbol size is the diameter of the hole in an open raster symbol.
            <para/>Sizes are defined in units of the current configuration's DDCs.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSnapService.SetOpenSymbolSize(System.Double,System.Double)">
            <summary>Method to set the minimum and maximum open symbol size tolerance.  These tolerances are used to determine the size of a open symbol.</summary>
            <param name="minimumSize">Minimum symbol size.</param>
            <param name="maximumSize">Maximum symbol size.</param>
            <remarks>The open symbol size is the diameter of the hole in an open raster symbol.
            <para/>This method will validate that the minimum size is smaller than the maximum size and that both values are positive.
            <para/>Sizes are defined in units of the current configuration's DDCs.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSnapService.RasterNoiseTolerance">
            <summary>Property to return/set the maximum size of a raster element, measured across the element, that the software should ignore when performing raster snaps.</summary>
            <remarks><para>An original IDL definition of <c>RasterNoiseTolerance</c> property was the following:  <c>double RasterNoiseTolerance</c>;</para>
            <para/>This value is in ground units (DDC coordinates of the current configuration).</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSnapService.RasterSnapTolerance">
            <summary>Property to return/set the distance from the input point from which to search for snap points for snapping to geometries and symbols within a raster geometry.</summary>
            <remarks>This value is in ground units (DDC coordinates of the current configuration).</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSnapService.RasterSnapTypesEnabled">
            <summary>Property to return/set how to snap to lines and symbols within a raster geometry.</summary>
            <remarks>These values can be combined together as a mask to allow snapping to multiple snap types.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSnapService.SnapTolerance">
            <summary>Property to return/set the distance from the input point from which to search for snap points for vector snapping.</summary>
            <remarks>This value is in ground units (DDC coordinates of the current configuration).</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSnapService.SnapTypesEnabled">
            <summary>Property to return/set how to snap to vector geometry.  You can snap to end points, vertices, origin, corners, mid-point or anywhere along a geometry object.</summary>
            <remarks>These values can be combined together as a mask to allow snapping to multiple snap types.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTGraphicComponent">
            <summary>Intergraph G/Technology IGTGraphicComponent API.</summary>
            <remarks>
            IGTGraphicComponent object returns geometric and other key information about the component currently being placed as well as the already-digitized components of the current feature instance. 
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.Arguments">
            <summary>Property to return the metadata-defined arguments for this placing this component.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.CID">
            <summary>Property to return the component identifier.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.CNO">
            <summary>Property to return the component number.</summary>
            <remarks>This property is populated from the G3E_CNO field of either the G3E_FEATURECOMPONENT or G3E_PLACEMENTCONFIGURATION table.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.ComponentName">
            <summary>Property to return the component name (G3E_COMPONENT.G3E_NAME).</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.ComponentType">
            <summary>Property to return the component type (G3E_COMPONENT.G3E_TYPE).</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.DetailComponent">
            <summary>Property to return the component detail flag (G3E_COMPONENT.G3E_DETAIL).</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.DetailID">
            <summary>Property to return the detail identifier for this component.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.FeatureIndex">
            <summary>Property to return the G3E_PLACEMENTCONFIGURATION.G3E_FEATUREINDEX value for this component.  This property is meaningful in the context of placement configurations only.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.FID">
            <summary>Property to return the feature identifier.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.FNO">
            <summary>Property to return the feature number.</summary>
            <remarks>This property is populated from the G3E_FNO field of either the G3E_FEATURECOMPONENT or G3E_PLACEMENTCONFIGUATION table.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.Geometry">
            <summary>Property to return the current geometry for this component.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponent.GeometryType">
            <summary>Property to return the component geometry type (G3E_COMPONENT.G3E_GEOMETRYTYPE).</summary>
            <remarks>The possible values are <see cref="T:Intergraph.GTechnology.API.GTGeometryTypeConstants">GTGeometryTypeConstants</see>. Of these, feature placement supports only the following:
            <list type="bullet">
            <item>
            BoundaryGeometry
            </item>
            <item>
            CompositePolygonGeometry
            </item>
            <item>
            CompositePolylineGeometry 
            </item>
            <item>
            OrientedPointGeometry
            </item>
            <item>
            PolygonGeometry
            </item>
            <item>
            PolylineGeometry
            </item>
            <item>
            RasterGeometry
            </item>
            <item>
            TextPointGeometry
            </item>
            </list>
            <para/>
            The CompositePolylineGeometry and CompositePolygonGeometry types are comprised of PolylineGeometry and ArcGeometry 
            types only. The IGTBoundaryGeometry.Holes property is of type IGTGeometryCollection, and is a collection of CompositePolygonGeometry 
            types. Feature placement does not support the placement of holes, but the Edit tool does.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTGeometryEditService">
            <summary>Intergraph G/Technology IGTGeometryEditService Interface.</summary>
            /// <remarks>The IGTGeometryEditService can:
            <list type="bullet">
            <item>Add geometry objects to and remove geometry objects from IGTGeometryEditService.</item>
            <item>Add vertices to and remove vertices from geometry objects.</item>
            <item>Get a geometry object from IGTGeometryEditService.</item>
            <item>Move or rotate a geometry object.</item>
            <item>Cancel the move or rotate action on a geometry object.</item>
            <item>Select and deselect specific geometry keypoints or all geometry keypoints.</item>
            <item>Select all keypoints. This simplifies moving or rotating a feature.</item>
            <item>Return the count of all the geometry objects in IGTGeometryEditService.</item>
            <item>Set the active map window on IGTGeometryEditService. The edited geometry will be displayed only in a single map window at any one time.</item>
            <item>See if a specified keypoint is selected.</item>
            </list></remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.AddGeometry(Intergraph.GTechnology.API.IGTGeometry,System.Int32)">
            <summary>Method to add a geometry object to the collection of geometry objects in the IGTGeometryEditService.</summary>
            <param name="Geometry">The geometry to be added.</param>
            <param name="GeometryStyleID">The style ID specifying the symbology to be used to display the geometry being added. Corresponds to 
            the G3E_SNO value in metadata. Alternately, the StyleID can be one of the GTStyleIDConstants values.</param>
            <remarks>Default values false and true are used for DisplayHandles and SelectAllKeyPoints.</remarks>
            <returns>int</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.AddGeometry(Intergraph.GTechnology.API.IGTGeometry,System.Int32,System.Boolean)">
            <summary>Method to add a geometry object to the collection of geometry objects in the IGTGeometryEditService.</summary>
            <param name="Geometry">The geometry to be added.</param>
            <param name="GeometryStyleID">The style ID specifying the symbology to be used to display the geometry being added. Corresponds to 
            the G3E_SNO value in metadata. Alternately, the StyleID can be one of the GTStyleIDConstants values.</param>
            <param name="DisplayHandles">A flag that tells IGTGeometryEditService to display the handles. The default value is False, which means 
            no handles are displayed. If True, then handles for all keypoints are displayed using the same style Edit tool uses to display handles 
            when the Manipulate Vertex tool is selected. SelectAllKeyPoints overrides this argument and, if the SelectAllKeyPoints argument is True, all 
            keypoints are displayed using the selected style from the value of the DisplayHandles argument.</param>
            <remarks>Default value true is used for SelectAllKeyPoints.</remarks>
            <returns>int</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.AddGeometry(Intergraph.GTechnology.API.IGTGeometry,System.Int32,System.Boolean,System.Boolean)">
            <summary>Method to add a geometry object to the collection of geometry objects in the IGTGeometryEditService.</summary>
            <param name="Geometry">The geometry to be added.</param>
            <param name="GeometryStyleID">The style ID specifying the symbology to be used to display the geometry being added. Corresponds to 
            the G3E_SNO value in metadata. Alternately, the StyleID can be one of the GTStyleIDConstants values.</param>
            <param name="DisplayHandles">A flag that tells IGTGeometryEditService to display the handles. The default value is False, which means 
            no handles are displayed. If True, then handles for all keypoints are displayed using the same style Edit tool uses to display handles 
            when the Manipulate Vertex tool is selected. SelectAllKeyPoints overrides this argument and, if the SelectAllKeyPoints argument is True, all 
            keypoints are displayed using the selected style from the value of the DisplayHandles argument.</param>
            <param name="SelectAllKeyPoints">A flag that tells IGTGeometryEditService to select all the keypoints for the specified geometry object for any 
            move or rotate operation. The default value is True.</param>
            <remarks>The StyleID can be retrieved by using IGTHelperService.GetComponentStyleID or by querying metadata. You must specify a style that 
            matches the geometry type of the Geometry parameter.
            <para/>
            <b>Example:</b>  If the Geometry parameter references a polyline geometry, GeometryStyleID must reference a linear style.</remarks>
            <returns>int</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.GetGeometry(System.Int32)">
            <summary>Method to return the specified geometry object from the IGTGeometryEditService.</summary>
            <param name="Index">The index of the geometry to be returned in the collection of geometries in IGTGeometryEditService. The collection of 
            geometries is indexed starting with 1.</param>
            <returns>IGTGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.RemoveGeometry(Intergraph.GTechnology.API.IGTGeometry)">
            <summary>Method to remove the specified geometry object from the IGTGeometryEditService.</summary>
            <param name="Geometry">The geometry object that is being removed.</param>
            <remarks>The item can be specified by the variable used for the geometry object when it was added to the collection 
            or by its index within the collection.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.RemoveGeometry(System.Int32)">
            <summary>Method to remove the specified geometry object from the IGTGeometryEditService.</summary>
            <param name="GeometryIndex">The Index of the geometry object that is being removed.</param>
            <remarks>The item can be specified by the variable used for the geometry object when it was added to the collection 
            or by its index within the collection.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.RemoveAllGeometries">
            <summary>Method to remove all the geometry objects from the IGTGeometryEditService.</summary>
            <remarks>This method does not have to be called before releasing IGTGeometryEditService. IGTGeometryEditService will call RemoveAllGeometries during its destruction.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.BeginMove(Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to initiate the move geometry action.</summary>
            <param name="point">The reference point for the move.</param>
            <remarks>The BeginMove method requires a reference point as input. This reference point is 
            the start point of the move. The move action is performed on all selected keypoints.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.Move(Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to dynamically display the position of a geometry that is being moved.</summary>
            <param name="point">The temporary end point for the move.</param>
            <remarks>The Move method must be called after a BeginMove and before the EndMove method. Otherwise, an error results.
            <para/>
            The dynamics are displayed in the window specified by the TargetMapWindow property.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.EndMove(Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to complete the move geometry action.</summary>
            <param name="point">The stop point for the move.</param>
            <remarks>The EndMove method must be called after the BeginMove method has been called. Otherwise, an error is raised.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.CancelMove">
            <summary>Method to cancel the move geometry action.</summary>
            <remarks>Calling either the Move method or the EndMove method after calling the CancelMove method will 
            result in an error. The action must be restarted by calling the BeginMove method first.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.SelectKeyPoint(Intergraph.GTechnology.API.IGTGeometry,System.Int32)">
            <summary>Method to select a specified geometry keypoint for the specified geometry.</summary>
            <param name="Geometry">The specific geometry object in the collection.</param>
            <param name="KeyPointIndex">The index of the keypoint within the geometry. This number must be between 1 and the number of keypoints of the geometry.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by its index within the collection.
            <para/>
            One way to obtain a keypoint index is to use the KeyPointTotalIndex value returned by IGTSnapService.SnapToGeometry on all selected keypoints.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.SelectKeyPoint(System.Int32,System.Int32)">
            <summary>Method to select a specified geometry keypoint for the specified geometry.</summary>
            <param name="Index">Index of the geometry in the collection.</param>
            <param name="KeyPointIndex">The index of the keypoint within the geometry. This number must be between 1 and the number of keypoints of the geometry.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by its index within the collection.
            <para/>
            One way to obtain a keypoint index is to use the KeyPointTotalIndex value returned by IGTSnapService.SnapToGeometry on all selected keypoints.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.SelectAllKeyPoints(Intergraph.GTechnology.API.IGTGeometry)">
            <summary>Method to select all geometry keypoints for the specified geometry.</summary>
            <param name="Geometry">The specific geometry object in the collection.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by its index within the collection.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.SelectAllKeyPoints(System.Int32)">
            <summary>Method to select all geometry keypoints for the specified geometry.</summary>
            <param name="GeometryIndex">The Index to the specific geometry object in the collection.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by its index within the collection.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.UnselectKeyPoint(Intergraph.GTechnology.API.IGTGeometry,System.Int32)">
            <summary>Method to unselect a specified geometry keypoint for the specified geometry.</summary>
            <param name="Geometry">The specific geometry object in the collection.</param>
            <param name="KeyPointIndex">The index of the keypoint within the geometry.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by its index within the collection.
            <para/>
            One way to obtain a keypoint index is to use the KeyPointTotalIndex value returned by GTSnapService.SnapToGeometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.UnselectKeyPoint(System.Int32,System.Int32)">
            <summary>Method to unselect a specified geometry keypoint for the specified geometry.</summary>
            <param name="GeometryIndex">The Index to the specific geometry object in the collection.</param>
            <param name="KeyPointIndex">The index of the keypoint within the geometry.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by its index within the collection.
            <para/>
            One way to obtain a keypoint index is to use the KeyPointTotalIndex value returned by GTSnapService.SnapToGeometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.UnselectAllKeyPoints(Intergraph.GTechnology.API.IGTGeometry)">
            <summary>Method to unselect all geometry keypoints for the specified geometry.</summary>
            <param name="Geometry">The specific geometry object in the collection.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to 
            the collection or by its index within the collection.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.UnselectAllKeyPoints(System.Int32)">
            <summary>Method to unselect all geometry keypoints for the specified geometry.</summary>
            <param name="GeometryIndex">The Index to the specific geometry object in the collection.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to 
            the collection or by its index within the collection.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.IsKeyPointSelected(Intergraph.GTechnology.API.IGTGeometry,System.Int32)">
            <summary>Method to test if the keypoint is selected. Returns true if the keypoint in the item is selected.</summary>
            <param name="Geometry">The specific geometry object in the collection.</param>
            <param name="KeyPointIndex">The index of the keypoint within the geometry.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by its index within the collection.
            <para/>
            One way to obtain a keypoint index is to use the KeyPointTotalIndex value returned by GTSnapService.SnapToGeometry.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.IsKeyPointSelected(System.Int32,System.Int32)">
            <summary>Method to test if the keypoint is selected. Returns true if the keypoint in the item is selected.</summary>
            <param name="GeometryIndex">The Index of the geometry object in the collection.</param>
            <param name="KeyPointIndex">The index of the keypoint within the geometry.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by its index within the collection.
            <para/>
            One way to obtain a keypoint index is to use the KeyPointTotalIndex value returned by GTSnapService.SnapToGeometry.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.InsertVertexBefore(Intergraph.GTechnology.API.IGTGeometry,System.Int32,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to insert a vertex (point) into a geometry object before the vertex at the input index.</summary>
            <param name="Geometry">The specific geometry object in the collection.</param>
            <param name="VertexIndex">The index of the vertex that the inserted vertex is to precede.</param>
            <param name="point">The IGTPoint object to insert.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by its index within the collection. If the point to be inserted by the InsertVertexAfter method will cause invalid 
            geometry, an error will be raised, and the action will not be taken.
            <para/>
            A vertex cannot be added to an arc, point, oriented point or text point geometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.InsertVertexBefore(System.Int32,System.Int32,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to insert a vertex (point) into a geometry object before the vertex at the input index.</summary>
            <param name="GeometryIndex">The Index of the geometry object in the collection.</param>
            <param name="VertexIndex">The index of the vertex that the inserted vertex is to precede.</param>
            <param name="point">The IGTPoint object to insert.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by its index within the collection. If the point to be inserted by the InsertVertexAfter method will cause invalid 
            geometry, an error will be raised, and the action will not be taken.
            <para/>
            A vertex cannot be added to an arc, point, oriented point or text point geometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.InsertVertexAfter(Intergraph.GTechnology.API.IGTGeometry,System.Int32,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to insert a vertex (point) into a geometry object after the vertex at the input index.</summary>
            <param name="Geometry">The specific geometry object in the collection.</param>
            <param name="VertexIndex">The index of the vertex that the inserted vertex is to follow.</param>
            <param name="point">The IGTPoint object to insert.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or 
            by its index within the collection. If the point to be inserted by the InsertVertexAfter method will cause invalid geometry, 
            an error will be returned and the action will not be taken.
            <para/>
            A vertex cannot be added to an arc, point, oriented point, or text point geometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.InsertVertexAfter(System.Int32,System.Int32,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to insert a vertex (point) into a geometry object after the vertex at the input index.</summary>
            <param name="GeometryIndex">Index of the geometry object in the collection.</param>
            <param name="VertexIndex">The index of the vertex that the inserted vertex is to follow.</param>
            <param name="point">The IGTPoint object to insert.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or 
            by its index within the collection. If the point to be inserted by the InsertVertexAfter method will cause invalid geometry, 
            an error will be returned and the action will not be taken.
            <para/>
            A vertex cannot be added to an arc, point, oriented point, or text point geometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.DeleteVertex(Intergraph.GTechnology.API.IGTGeometry,System.Int32)">
            <summary>Method to remove a vertex from the geometry.</summary>
            <param name="Geometry">The specific geometry object in the collection.</param>
            <param name="VertexIndex">The index of the vertex within the geometry to delete.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by 
            its index within the collection. The delete vertex method fails if an invalid geometry would result from the deletion. This 
            method will check if the delete vertex would cause invalid geometry before the deletion takes place and returns an error. </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.DeleteVertex(System.Int32,System.Int32)">
            <summary>Method to remove a vertex from the geometry.</summary>
            <param name="GeometryIndex">The index of the geometry in the collection.</param>
            <param name="VertexIndex">The index of the vertex within the geometry to delete.</param>
            <remarks>The item can be designated by the variable used for the geometry object when it was added to the collection or by 
            its index within the collection. The delete vertex method fails if an invalid geometry would result from the deletion. This 
            method will check if the delete vertex would cause invalid geometry before the deletion takes place and returns an error. </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.DeleteSelectedVertices(Intergraph.GTechnology.API.IGTGeometry)">
            <summary>Method to remove all the selected vertices from the geometry.</summary>
            <param name="Geometry">The specific geometry object in the collection.</param>
            <remarks>The geometry can be designated by the variable used for the geometry object when it 
            was added to the collection or by its index within the collection.
            <para/>
            The DeleteSelectedVertices method fails if an invalid geometry would result from the deletion. This 
            method checks to see if the delete would cause invalid geometry. If so, an error will be returned.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.DeleteSelectedVertices(System.Int32)">
            <summary>Method to remove all the selected vertices from the geometry.</summary>
            <param name="GeometryIndex">The index of the geometry in the collection.</param>
            <remarks>The geometry can be designated by the variable used for the geometry object when it 
            was added to the collection or by its index within the collection.
            <para/>
            The DeleteSelectedVertices method fails if an invalid geometry would result from the deletion. This 
            method checks to see if the delete would cause invalid geometry. If so, an error will be returned.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.BeginRotate(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to initiate the rotate geometry action.</summary>
            <param name="point">The starting reference point for the rotation.</param>
            <param name="Origin">The stationary point (origin point) about which to rotate the geometry.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.Rotate(Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to dynamically display the position of a geometry that is being rotated.</summary>
            <param name="point">The temporary endpoint for the rotate.</param>
            <remarks>The Rotate method must be called after a BeginRotate and before the EndRotate method. Otherwise, an error results.
            <para/>
            The dynamics for the rotation are displayed only in the map window specified by the TargetMapWindow property.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.EndRotate(Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to complete the rotate geometry action.</summary>
            <param name="point">The stop point for the rotate.</param>
            <remarks>The EndRotate method must be called after the BeginRotate method has been called.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.CancelRotate">
            <summary>Method to cancel the rotate geometry action.</summary>
            <remarks>Calling either the Rotate method or the EndRotate method after calling the CancelRotate method will result in an error. Call 
            the BeginRotate method to restart the rotate action. </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.BeginMoveAndRotate(Intergraph.GTechnology.API.IGTPoint,System.Double)">
            <summary>Method to initiate the move and rotate geometry action.</summary>
            <param name="point">The reference point for the move.</param>
            <param name="StartAngle">The start angle (in degrees) for the rotate.</param>
            <remarks>This is one of two methods required to move and rotate simultaneously all 
            or part of a geometry object. The other required method is EndMoveAndRotate. BeginMoveAndRotate 
            will affect any geometry added to IGTGeometryEditService for the key points that have been selected.
            <para/>
            The BeginMoveAndRotate method requires a reference point and start angle (in degrees) as input. This 
            reference point is the start point of the move operation. The difference of the rotation angle specified 
            by the EndMoveAndRotate method and the start angle provides the offset angle by which the geometry is to 
            be rotated indicating that the start angle acts as a base angle. The move and rotate action is performed 
            on all selected keypoints.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.MoveAndRotate(Intergraph.GTechnology.API.IGTPoint,System.Double)">
            <summary>Method to dynamically display the position of a geometry that is being moved and rotated simultaneously.</summary>
            <param name="point">The temporary end point for the move. It is also the point around which the geometry will be rotated.</param>
            <param name="RotationAngle">The rotation angle (in degrees) provides the temporary angle by which the geometry is to be rotated around the specified point.</param>
            <remarks>The MoveAndRotate method must be called after the BeginMoveAndRotate method and before the EndMoveAndRotate method.
            <para/>
            The dynamics are displayed in the window specified by the TargetMapWindow property.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.EndMoveAndRotate(Intergraph.GTechnology.API.IGTPoint,System.Double)">
            <summary>Method to complete the move and rotate geometry action.</summary>
            <param name="point">The stop point for the move and the point around which the geometry will be rotated.</param>
            <param name="RotationAngle">The final rotation angle (in degrees).</param>
            <remarks>The EndMoveAndRotate method must be called after the BeginMoveAndRotate method has been called.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGeometryEditService.CancelMoveAndRotate">
            <summary>Method to cancel the move and rotate geometry action.</summary>
            <remarks>Calling either the MoveAndRotate method or the EndMoveAndRotate method after calling the CancelMove method will result in an 
            error. The action must be restarted by calling the BeginMoveAndRotate method first.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometryEditService.GeometryCount">
            <summary>Property to return the number of geometry objects in the IGTGeometryEditService.</summary>
            <remarks>When IGTGeometryEditService is initialized, this number is 0.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGeometryEditService.TargetMapWindow">
            <summary>Property to return/set the IGTMapWindow where IGTGeometryEditService renders (draws) the geometries.</summary>
            <remarks>You must set this property to use IGTGeometryEditService. The edited geometry and any associated dynamics will be 
            displayed only in this map window.
            <para/>Setting the TargetMapWindow property resets the current edit state. That is, if you have called one of the Begin 
            methods and then set this property again, you must reestablish the edit state by calling the appropriate Begin method again.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSelectedObjects">
            <summary>Intergraph G/Technology IGTSelectedObjects API.</summary>
            <remarks>
            The IGTSelectedObjects object is used to manage adding and removing feature components to or from the application's select set. 
            <para/>If there is a transaction in progress, this object prevents any changes to the select set from occurring. 
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTNameObjectCollectionBase">
            <summary>
            Intergraph G/Technology IGTNameObjectCollectionBase API.
            </summary>
            <remarks>
            IGTProperties and IGTSelectedObjects derives from IGTNameObjectCollectionBase.
            For internal use only.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSelectedObjects.Add(Intergraph.GTechnology.API.GTSelectModeConstants,Intergraph.GTechnology.API.IGTDDCKeyObject)">
            <summary>Method to add an item to the set of selected objects.</summary>
            <param name="SelectMode">Specifies which components, for the specified feature, are added to the collection of selected objects in the application.</param>
            <param name="KeyObject">The DDC key object of the component view selected by the user for the feature to add to the IGTSelectedObjects collection.</param>
            <remarks>Use this method to add a feature to the selected objects collection based on a selection in the map window. If this method is called while a 
            database transaction is in progress, an error will be raised.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSelectedObjects.BeginModify">
            <summary>Method to begin a group of operations that modify the set of selected objects.</summary>
            <remarks>This is used to suppress any notification to select set listeners regarding the additions 
            until the EndModify method is called.
            <para/>
            Use this method when several components or features will be added to the IGTSelectedObjects 
            collection. This will prevent having processing by select-set listeners occur for each addition, such 
            as when the fit selected option is used for the map view.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSelectedObjects.EndModify">
            <summary>Method to end a group of operations that modify the set of selected objects.</summary>
            <remarks>Listeners to the selected objects collection will be notified of the additions at this 
            point. If no BeginModify was called, this method is ignored.
            <para/>
            Use this method when several components or features will be added to the IGTSelectedObjects 
            collection. This will prevent having processing by select-set listeners occur for each 
            addition, such as when the fit selected option is used for the map view.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSelectedObjects.Clear">
            <summary>Method to clear the set of selected objects.</summary>
            <remarks>Use this method to clear all features from the IGTSelectedObjects 
            collection. If this method is called while a database transaction is in 
            progress, an error will be raised.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSelectedObjects.GetObjects">
            <summary>Method to return the set of selected objects.</summary>
            <remarks>Use this method to retrieve a IGTDDCKeyObjects collection 
            for features in the selected objects collection.
            <para/>Each nongraphic feature or graphic feature with no graphic instances 
            will return a single IGTDDCKeyObject. This IGTDDCKeyObject contains a recordset 
            with all four feature-component identifier keys (G3E_FNO, G3E_FID, G3E_CNO, and 
            G3E_CID). This recordset is accessed through the GTDDCKeyObject objects Recordset 
            property. The recordset returned is the first valid component recordset found 
            for the component views specified in G3E_FEATURECOMPS_OPTABLE for the features 
            G3E_FNO, where G3E_TYPE = 1.</remarks>
            <returns>IGTDDCKeyObjects</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSelectedObjects.IsSelected(Intergraph.GTechnology.API.IGTDDCKeyObject)">
            <summary>Method to return whether an item is selected.</summary>
            <param name="KeyObject">The key of the component view of a feature to check for in the application's IGTSelectedObjects collection.</param>
            <remarks>Use this method to determine if a feature is selected.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSelectedObjects.Remove(Intergraph.GTechnology.API.GTSelectModeConstants,Intergraph.GTechnology.API.IGTDDCKeyObject)">
            <summary>Method to remove an item from the set of selected objects.</summary>
            <param name="KeyObject">The key object of the feature to remove from the IGTSelectedObjects collection.</param>
            <param name="SelectMode">Specifies which components, for the specified feature, are removed from the application's IGTSelectedObjects collection.</param>
            <remarks>Use this method to remove feature components from the IGTSelectedObjects collection.
            <para/>If this method is called while a database transaction is in progress, an error will be raised.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSelectedObjects.FeatureCount">
            <summary>Property to return the number features selected.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSchematicLabels">
            <summary>
            Intergraph G/Technology IGTSchematicLabels API.
            </summary>
            <remarks>
            IGTSchematicLabels is a collection of labels associated with a schematic element. This collection contains one element for each label specified in metadata for the associated feature. 
            <para/>The collection can be modified, including adding items to or removing items from the collection. This allows the you to override the metadata specification for labels. 
            <para/>When the Generate method is called on the parent IGTSchematicElement, or when the IGTAugmentNetworkAttribution object returns from its Execute method, the data in this collection is used to generate labels for the element in XML. One label is generated for each element in this collection.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicLabels.Add(Intergraph.GTechnology.API.IGTSchematicLabel)">
            <summary>
            Adds the specified GTSchematicLabel object to the GTSchematicElement.GTSchematicLabels collection.
            </summary>
            <param name="label">The GTSchematicLabel to add.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicLabels.Remove(Intergraph.GTechnology.API.IGTSchematicLabel)">
            <summary>
            Removes the specified IGTSchematicLabel object from the collection.
            </summary>
            <param name="label">The IGTSchematicLabel to remove.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicLabels.RemoveAt(System.Int32)">
            <summary>
            Removes the label at the specified index from the collection.
            </summary>
            <param name="index">The index of the label to remove.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicLabels.Item(System.Int32)">
            <summary>
            Gets the IGTSchematicLabel from the collection at the specified index.
            </summary>
            <param name="index">Index of the network element. Must be between 1 and the number of elements in the collection.</param>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPoint">
            <summary>Intergraph G/Technology IGTPoint API.</summary>
            <remarks>
            The IGTPoint object represents a 3-D position or location. The coordinates for the point can be returned or modified through its X, Y, and Z properties. When the object is used as a “WorldPoint” as input to the automation methods, the X, Y, and Z coordinates are expected to be in the units of the published data associated with your current configuration. These units may be different from the storage in your database but will be transformed by the G/Technology software when transferred to the database. 
            <para/>A IGTPoint is distinct from the IGTPointGeometry in that the IGTPoint object is an X, Y, Z position in space that describes higher Geometry objects. This point can be a member of the IGTPoints collection. As a members of the collection, IGTPoint objects describe multiple positions in a PolylineGeometry object or a PolylineGeometry object. 
            <para/>The IGTPointGeometry object is a type of geometry object, as are LineGeometry, PolylineGeometry, and PolylineGeometry objects. This IGTPointGeometry object can be a member of the GeometryCollection object.
            <para/>Usage note: In the older COM-based API for G/Technology, some methods and
            properties that returned a IGTPoint could return an object that implicitly
            referenced another object, such as a geometry object.  Modifying the coordinates
            of that IGTPoint object would therefore implicitly modify the referenced geometry.
            <para/>
            This IGTPoint class never behaves in that fashion.  Whenever a IGTPoint object is
            retrieved from another object, the returned IGTPoint is always a copy of the information
            from the source object.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.Equals(Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            A IGTPoint equals another GTPoint if they contain the same coordinates.
            </summary>
            <param name="pt">Point to compare for equality.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.Equals(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            A IGTPoint equals another GTPoint if they contain the same coordinates.
            <para/>
            <seealso cref="M:Intergraph.GTechnology.API.IGTPoint.PointsAreEqual(Intergraph.GTechnology.API.IGTPoint)"/>, which compares points based on a
            positional tolerance.  The == and != operators, as well as the Equals
            method, compare the coordinate values for exact equality.
            </summary>
            <param name="pt1">Point 1</param>
            <param name="pt2">Point 2</param>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.NotEquals(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            Two IGTPoint objects are not equal if they do not contain the same coordinates.
            </summary>
            <param name="pt1">Point 1</param>
            <param name="pt2">Point 2</param>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.PointsAreEqual(Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            Returns true if this point and the given point <paramref name="p"/> are
            equal within the positional tolerance.  <seealso cref="P:Intergraph.GTechnology.API.IGTMath.PositionalTolerance"/>.
            </summary>
            <param name="p">Point to compare for equality.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.AddVectorToPoint(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Returns the point offset from the input point <paramref name="p"/> by the
            vector <paramref name="v"/>.
            </summary>
            <param name="p">Input point</param>
            <param name="v">Vector</param>
            <returns>IGTPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.SubtractVectorFromPoint(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Returns the point offset from the input point <paramref name="p"/> by the
            negative of vector <paramref name="v"/>.
            </summary>
            <param name="p">Input point.</param>
            <param name="v">Vector.</param>
            <returns>IGTPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.Negate(Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            Returns the point whose coordinates are the negation of the input point.
            </summary>
            <param name="p">Input point.</param>
            <returns>IGTPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.ProjectTo(Intergraph.GTechnology.API.IGTSegment)">
            <summary>
            The ProjectTo function projects this point on to a given line segment.
            </summary>
            <param name="segment">Segment.</param>
            <remarks>
            The return is the perpendicular projection of the point onto the segment. If the projection is not on the segment, and
            the segment's IsExtended property is false, then the point returned is the nearest end point (with Type property equal to
            GTSegmentPointType.gtsptOnEndpoint).  If the projection is not on the segment, and the segment's IsExtended property is
            true, then the point returned is the perpendicular projection of the point onto the extended segment (with Type property
            equal to GTSegmentPointType.gtsptOnExtendedSegment).  If the projected point is on the segment, the Type property of the
            return value will be GTSegmentPointType.gtsptOnSegment.
            </remarks>
            <returns>IGTSegmentPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.IsContainedBy(Intergraph.GTechnology.API.IGTPoints)">
            <summary>
            The IsContainedBy function determines whether a point is inside a polygon.
            </summary>
            <remarks>
            Returns gtiptOutside if the point is outside the polygon, gtiptOnPolygon if on the polygon, and gtiptInside if it is in
            the polygon.
            </remarks>
            <param name="polygon_points">The vertices of the polygon to be tested.</param>
            <returns>GTInPolygonType</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.IsOn(Intergraph.GTechnology.API.IGTSegment)">
            <summary>
            Determines if a point is on the segment.  If the segment's IsExtended property is true, this function raises
            an exception.
            </summary>
            <param name="segment">Segment</param>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPoint.ProjectAtAngle(Intergraph.GTechnology.API.IGTSegment,Intergraph.GTechnology.API.IGTPoint,System.Double)">
            <summary>
            Returns a projected point by deriving the lines that pass through the anchor point at the specified angle increment from
            the original line segment and then projecting the reference point onto the closest derived line.
            </summary>
            <remarks>
            Uses positional tolerance.
            <para/>
            The angle increment must be greater than 0 and less than or equal to 180 degrees.
            <para/>
            The extendability of the input segment is ignored.
            </remarks>
            <param name="anchor_point">The point through which the reference lines pass.</param>
            <param name="angle">The angle in degrees between the reference lines and the input segment.</param>
            <param name="segment">The original line segment.</param>
            <returns>IGTPoint</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPoint.X">
            <summary>Property to return/set the X coordinate value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPoint.Y">
            <summary>Property to return/set the Y coordinate value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPoint.Z">
            <summary>Property to return/set the Z coordinate value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPlotWindows">
            <summary>Intergraph G/Technology IGTPlotWindows API.</summary>
            <remarks>Snapshot collection of all plot windows. </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotWindows.Item(System.Int32)">
            <summary>Property to return a specific IGTPlotWindow in the collection.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPaperRange">
            <summary>Intergraph G/Technology IGTPaperRange API.</summary>
            <remarks>
            IGTPaperRange object represents a range of coordinates—that is, a rectangle—in paper space on the plot sheet. 
            Whereas IGTWorldRange has BottomLeft and TopRight properties because world coordinates increase upwards and to the right, IGTPaperRange has TopLeft and BottomRight properties because paper coordinates increase downwards and to the right. 
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPaperRange.BottomRight">
            <summary>Property to return/set the bottom right point of the paper range.</summary>
            <remarks>The coordinates of the sheet are between 0,0 and PaperWidth,PaperHeight. However, no 
            error is returned if TopLeft is set to coordinates outside this range. This facilitates modifying 
            elements of a plot in any order. It may be necessary with certain OLE objects to specify coordinates 
            outside this range to get the appropriate display.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPaperRange.TopLeft">
            <summary>Property to return/set the top left point of the paper range.</summary>
            <remarks>The coordinates of the sheet are between 0,0 and PaperWidth,PaperHeight. However, 
            no error is returned if TopLeft is set to coordinates outside this range. This facilitates 
            modifying elements of a plot in any order. It may be necessary with certain OLE objects to 
            specify coordinates outside this range to get the appropriate display.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTKeyObject">
            <summary>Intergraph G/Technology IGTKeyObject API.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTKeyObject.CID">
            <summary>Property to return/set the component ID of the key object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTKeyObject.CNO">
            <summary>Property to return/set the component number of the key object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTKeyObject.Components">
            <summary>Property to return the components collection of the key object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTKeyObject.FID">
            <summary>Property to return/set the feature ID of the key object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTKeyObject.FNO">
            <summary>Property to return/set the feature number of the key object.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTEliminationComponents">
            <summary>Intergraph G/Technology IGTEliminationComponents API.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTEliminationComponents.Add(Intergraph.GTechnology.API.IGTEliminationComponent)">
            <summary>Method to add a IGTEliminationComponent object to the collection.</summary>
            <param name="EliminationComponent">Support the IGTComponentElimination interface.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when EliminationComponent is Null.</exception>
            <remarks>Using this method adds the IGTEliminationComponent object to the end of the collection list.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTEliminationComponents.Find(System.Int16,System.Int16)">
            <summary>Method to find a specific component instance in the collection.</summary>
            <param name="CNO">The number of the component whose IGTEliminationComponent object is to be found.</param>
            <param name="CID">The component instance whose IGTEliminationComponent object is to be found.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when either CNO or CID is zero or negative.</exception>
            <returns>IGTEliminationComponent</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTEliminationComponents.Remove(Intergraph.GTechnology.API.IGTEliminationComponent)">
            <summary>Method to remove and return a IGTEliminationComponent object from the collection based on the input object's CNO and CID properties.</summary>
            <param name="EliminationComponent">The CNO and CID from this object will be read and then used to remove the object from the collection corresponding to 
            those identifiers. If this object does not exist, nothing will be returned.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when EliminationComponent is Null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTEliminationComponents.RemoveFirst(System.Int16)">
            <summary>Method to remove and return the first IGTEliminationComponent object from the collection based on the input CNO.</summary>
            <param name="CNO">The component instance whose IGTEliminationComponent object is to be removed.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when CNO is zero or negative.</exception>
            <remarks>This method returns the first collection object with a CNO that matches the CNO sent in, regardless of instance (CID) number. If 
            no collection item matches the CNO, nothing will be returned.</remarks>
            <returns>IGTEliminationComponent</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTEliminationComponents.GetEnumerator">
            <summary>
            Method to return an enumerator that iterates through the items.
            </summary>
            <returns>IEnumerator</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTEliminationComponents.Item(System.Int32)">
            <summary>Property to return a specific IGTEliminationComponent in the collection.</summary>
            <param name="index">The positional index into the collection of the IGTEliminationComponent to be returned.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTEliminationComponents.Count">
            <summary>Property to return the number of GTEliminationComponent objects in this collection.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTMergeFeaturesServiceEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTMergeFeaturesService events.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTMergeFeaturesServiceEventArgs.#ctor(System.Boolean)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTMergeFeaturesServiceEventArgs class.</summary>
            <param name="DisplayErrors">DisplayErrors argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTMergeFeaturesServiceEventArgs.DisplayErrors">
            <summary>DisplayErrors argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPlotMap">
            <summary>Intergraph G/Technology IGTPlotMap API.</summary>
            <remarks>
            A IGTPlotMap object provides access to properties and methods that are specific to an embedded map. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotMap.CenterSelectedObjects">
            <summary>Method to center the IGTPlotMap on the selected objects.</summary>
            <remarks>The CenterSelectedObjects method finds the center point of the IGTApplication's SelectedObjects 
            property, and then moves this center point to the center of the IGTPlotMap.
            <para/>
            The center point of IGTApplication's SelectedObjects property is determined using the center of the minimum 
            bounding rectangle (MBR) of all selected geometries.
            <para/>
            The map frame must be activated when this method is called; otherwise an error is raised.
            <para/>
            If there is no object in IGTApplication's SelectedObjects property, this method does nothing 
            and returns without error.
            <para/>
            After calling this method, you must call the IGTApplication's RefreshWindows method to cause 
            the map to redraw.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotMap.FitAll">
            <summary>Method to fit the IGTPlotMap with all of its displayable objects.</summary>
            <remarks>The map frame must be activated when this method is called; otherwise an error is raised.
            <para/>
            After calling this method, you must call the IGTApplication's RefreshWindows method to cause the map to redraw.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotMap.FitSelectedObjects(System.Double)">
            <summary>Method to fit the IGTPlotMap with the selected objects.</summary>
            <param name="ZoomFactor">The zoom factor to use when fitting the selected objects collection.</param>
            <remarks>The map frame must be activated when this method is called; otherwise an error is raised.
            <para/>
            If ZoomFactor is less than or equal to 1.0, no zoom out operation will be performed.
            <para/>
            If there is no object in IGTApplication's SelectedObjects property, this method does nothing and returns without error.
            <para/>
            After calling this method, you must call the IGTApplication's RefreshWindows method to cause the map to redraw.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotMap.GetRange">
            <summary>Method to return the range of the area displayed in the IGTPlotMap.</summary>
            <remarks>The map frame must be activated when this method is called; otherwise an error is raised.
            <para/>
            The range is in world coordinates and spans from the lower-left to the upper-right of the map frame. This 
            range is not affected by any clipping polygon applied to the map frame.
            <para/>
            Resizing the window or recentering, panning, or zooming the objects in the map frame changes the range values.
            <para/>
            GetRange returns the world range of the map, whereas IGTPlotFrame.Range returns the paper range of the map frame. The 
            two sets of coordinates are related by the display scale of the map and the position of the frame on the sheet.</remarks>
            <returns>IGTWorldRange</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotMap.ZoomArea(Intergraph.GTechnology.API.IGTWorldRange)">
            <summary>Method to zoom to the range of the given area.</summary>
            <param name="WorldRange">The area for which the zoom will occur.</param>
            <remarks>The ZoomArea method fills the map frame with the portion of the 
            display contained within a specified rectangular area. The rectangular 
            area is defined by specifying in world coordinates its lower-left and 
            upper-right corners through the IGTWorldRange object. The objects in the 
            embedded map resize proportionally to fill the window. 
            <para/>
            The area filled is the unclipped area of the map frame - that is, any clipping 
            polygon applied to the frame has no effect on the results of ZoomArea.
            <para/>
            The map frame must be activated when this method is called; otherwise an error is raised.
            <para/>
            The map frame is refreshed automatically after the zoom operation.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotMap.PaperToWorld(Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to convert paper coordinates to their corresponding world coordinates.</summary>
            <param name="PaperPoint">The paper point from which to convert.</param>
            <remarks>The world coordinate value depends on the units of resolution for the IGTPlotMap coordinate system.
            <para/>
            The paper coordinates must fall within a IGTPlotFrame that contains the specified map. However, they 
            need not fall within the clipping polygon, if any, applied to that map frame.
            <para/>
            This method may be called only when the plot containing this map is displayed in a plot window and the map 
            frame is activated.</remarks>
            <returns>IGTPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotMap.WorldToPaper(Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to convert world coordinates to their corresponding paper coordinates.</summary>
            <param name="WorldPoint">The world point from which to convert.</param>
            <remarks>The world coordinates must fall within the area displayed in a IGTPlotFrame. However, they 
            need not fall within the clipping polygon, if any, applied to that map frame.
            <para/>
            This method may be called only when the plot containing this map is displayed in a plot window and 
            the map frame is activated.
            </remarks>
            <returns>IGTPoint</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotMap.DetailID">
            <summary>Property to return the detail identifier for the IGTPlotMap.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotMap.DisplayScale">
            <summary>Property to return/set the number of units on the ground represented by one unit on the screen.</summary>
            <remarks>Setting this property to a value less than 1 will result in an error message.
            <para/>This property takes effect immediately, and there is no need to perform a refresh.
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotMap.BackColor">
            <summary>
            Gets or sets the background color of a map window.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotMap.Rotation">
            <summary>Property to return/set the rotation in radians of a map</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotMap.DisplayService">
            <summary>Property to return IGTDisplayService associated to the given map.</summary>
            <remarks>IGTDisplayService can be used to modify certain aspects of the display of the map, such as adding a query.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotMap.Frame">
            <summary>Property to return the IGTPlotFrame object corresponding to this IGTPlotMap object.</summary>
            <remarks>The IGTPlotFrame property can be used to access or modify the properties of the map frame or its position on the paper.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotMap.LegendName">
            <summary>Property to return the name of the legend associated to the IGTPlotMap.</summary>
            <remarks>This name maps to the G3E_USERNAME field in G3E_LEGENDS_OPTABLE.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotMap.ReferencingFNO">
            <summary>Property to return the feature number of the feature that references the IGTPlotMap when used as a detail window.</summary>
            <remarks>This property returns the default value of 0 when no referencing feature exists.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTMath">
            <summary>Intergraph G/Technology IGTMath API.</summary>
            <remarks>
            IGTMath interface is implemented by GTMath which provides a set of general math functions that are not specific to
            particular data types.
            </remarks> 
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMath.CircleIntersectCircle(Intergraph.GTechnology.API.IGTPoint,System.Double,Intergraph.GTechnology.API.IGTPoint,System.Double)">
            <summary>
            Computes the intersection of two circles defined by center point and radius.  If the circles do not intersect,
            an empty array is returned.  If the two circles overlap, an array with a single element is returned with a Type
            property of gtsptOverlap.  Otherwise, one or two elements are returned with Type property gtsptOnSegment.
            </summary>
            <param name="center1">Center of the first circle</param>
            <param name="radius1">Radius of the first circle</param>
            <param name="center2">Center of the second circle</param>
            <param name="radius2">Radius of the second circle</param>
            <returns>An array of IGTSegmentPoint</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMath.PositionalTolerance">
            <summary>
            Gets or sets the positional tolerance used in comparing coordinate-related
            quantities.
            <seealso cref="M:Intergraph.GTechnology.API.IGTPoint.PointsAreEqual(Intergraph.GTechnology.API.IGTPoint)"/>.
            <seealso cref="M:Intergraph.GTechnology.API.IGTVector.IsNull"/>.
            <para/>
            Use this function with care; modifying this value could adversely affect the operation of
            your application.  If you need a specific tolerance value only for a given operation, save
            the old tolerance, modify it, perform your operation, then restore the original tolerance
            value.  The default value of this property is based on the coordinate system, and is generally
            the appropriate value to use when comparing geographic coordinates.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMath.SquaredPositionalTolerance">
            <summary>
            Returns the square of the PositionalTolerance value.  In many cases, such as when
            comparing distances, it is more convenient to compare the square of the value (e.g.,
            the squared distance) to the squared tolerance, in order to avoid a square-root
            operation.  This property provides the squared tolerance directly.
            <seealso cref="P:Intergraph.GTechnology.API.IGTMath.PositionalTolerance"/>.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTJobManagementService">
            <summary>Intergraph G/Technology IGTJobManagementService API.</summary>
            <remarks>
            The IGTJobManagementService object should only be used in custom commands that manage job operations.  These custom job commands should include the “New transaction available” enabling condition so that a user cannot accidentally run them while another transaction is in progress.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.DiscardJob">
            <summary>Method to discard a job.</summary>
            <remarks>To refresh the job environment after DiscardJob has been called, use RefreshJobEnvironment.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.PostJob">
            <summary>Method to post the current job.</summary>
            <remarks>To refresh the job environment after PostJob has been called, use RefreshJobEnvironment.</remarks> 
            <returns>GTPostErrorConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.ValidateFeatures(ADODB.Recordset)">
            <summary>Method to validate feature(s).</summary>
            <param name="Features">Defines the feature or features to be validated. The input recordset must contain the G3E_FNO and G3E_FID fields.</param>
            <remarks>The IGTJobManagementService returns a recordset containing all errors found. The format of the recordset is as follows:
            <list type="bullet">
            <item>"ErrorPriority", adVarWChar, VARCHAR2</item>
            <item>"ErrorDescription", adVarWChar, VARCHAR2</item>
            <item>"ErrorLocation", adVarWChar, VARCHAR2</item>
            <item>"Connection", adVarWChar, VARCHAR2</item>
            <item>"G3E_FNO", adInteger, NUMBER</item>
            <item>"G3E_FID", adInteger, NUMBER</item>
            <item>"G3E_CNO", adInteger, NUMBER</item>
            <item>"G3E_CID", adInteger, NUMBER </item>
            </list>
            <para/>
            <list type="table">
            <listheader>
            <term>Field</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>ErrorPriority</term>
            <description>The severity of the error, with P1 being the most severe.</description>
            </item>
            <item>
            <term>ErrorDescription</term>
            <description>Describes the error.</description>
            </item>
            <item>
            <term>ErrorLocation</term>
            <description>The software module that generated the error or the type of error identified, such as attribute or relationship.</description>
            </item>
            <item>
            <term>Connection</term>
            <description>The database connection name.</description>
            </item>
            <item>
            <term>G3E_FNO</term>
            <description>The feature number, which is the feature type.</description>
            </item>
            <item>
            <term>G3E_FID</term>
            <description>The feature ID, which identifies the set of records that constitute a feature.</description>
            </item>
            <item>
            <term>G3E_CNO</term>
            <description>The component number, which is the component type.</description>
            </item>
            <item>
            <term>G3E_CID</term>
            <description>The component occurrence identifier, which identifies the sequence of a particular component record when a feature component can have repeating records.</description>
            </item>
            </list>
            </remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.ValidatePendingEdits">
            <summary>Method to validate all features with pending edits.</summary>
            <remarks>This method should be used to validate all of the edits within a job.
            <para/>
            The GTJobManagementService returns a recordset containing all errors found. The format of the recordset is as follows:
            <list type="bullet">
            <item>"ErrorPriority", adVarWChar, VARCHAR2</item>
            <item>"ErrorDescription", adVarWChar, VARCHAR2</item>
            <item>"ErrorLocation", adVarWChar, VARCHAR2</item>
            <item>"Connection", adVarWChar, VARCHAR2</item>
            <item>"G3E_FNO", adInteger, NUMBER</item>
            <item>"G3E_FID", adInteger, NUMBER</item>
            <item>"G3E_CNO", adInteger, NUMBER</item>
            <item>"G3E_CID", adInteger, NUMBER </item>
            </list>
            <para/>
            <list type="table">
            <listheader>
            <term>Field</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>ErrorPriority</term>
            <description>The severity of the error, with P1 being the most severe.</description>
            </item>
            <item>
            <term>ErrorDescription</term>
            <description>Describes the error.</description>
            </item>
            <item>
            <term>ErrorLocation</term>
            <description>The software module that generated the error or the type of error identified, such as attribute or relationship.</description>
            </item>
            <item>
            <term>Connection</term>
            <description>The database connection name.</description>
            </item>
            <item>
            <term>G3E_FNO</term>
            <description>The feature number, which is the feature type.</description>
            </item>
            <item>
            <term>G3E_FID</term>
            <description>The feature ID, which identifies the set of records that constitute a feature.</description>
            </item>
            <item>
            <term>G3E_CNO</term>
            <description>The component number, which is the component type.</description>
            </item>
            <item>
            <term>G3E_CID</term>
            <description>The component occurrence identifier, which identifies the sequence of a particular component record when a feature component can have repeating records.</description>
            </item>
            </list>
            </remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.PartialPostFeatures(ADODB.Recordset)">
            <summary>Method to post partial edits from a job.</summary>
            <param name="Features">Defines the feature or features to be posted to master. The input recordset must contain the G3E_FNO and G3E_FID fields.</param>
            <remarks>The PartialPostFeatures method is used to post to master one or more features from a given job without posting all features of the job.
            <para/>
            If no validation or post errors are found, the features will be posted and an integer value of gtjmsNoError is returned. Otherwise, the method 
            returns an integer value indicating the type of error; and you can use the PostErrors property to see what errors prevented the post.
            <para/>
            If the application is available, progress reporting to the application's status bar is provided—Preparing ..., Validating ..., Detecting Conflicts ..., or Posting ....
            <para/>
            To refresh the job environment after PartialPostFeatures has been called, use RefreshJobEnvironment.</remarks>
            <returns>GTPostErrorConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.DiscardFeatureEdits(ADODB.Recordset)">
            <summary>Method to discard edits for a given feature or set of features.</summary>
            <param name="Features">Defines the feature or features to have their edits discarded. The input recordset must contain a 
            populated G3E_FID field.</param>
            <remarks>The DiscardFeatureEdits method calls the database procedure that discards all edits to a feature or set of features within the active job by removing:
            <para/>
            All rows in the LTT_UNDO_LOG table
            <para/>
            All edits from the B$ tables for the feature or set of features
            <para/>
            All edits to the features in the collection will be discarded, regardless of the number of transactions in which the features participate.
            <para/>
            Because discarding feature edits could affect the outcome of a running edit operation, features may only be discarded when the client is not running a transaction. An 
            error will be raised if a transaction is active when this method is called.
            <para/>
            To refresh the job environment after DiscardFeatureEditshas been called, use RefreshJobEnvironment.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.RefreshJobEnvironment">
            <summary>Method to reset the job environment.</summary>
            <remarks>The RefreshJobEnvironment method is used to refresh the G/Technology environment. This method does the following:
            <list type ="bullet">
            <item>Clears the UndoManager list.</item>
            <item>Clears the select set.</item>
            <item>Broadcasts database changes.</item>
            <item>Refreshes the views.</item>
            <item>Clears Feature Explorer.</item>
            </list>
            This method should be called after one or more post or discard operations.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.CloseJob">
            <summary>Method to post any pending edits in the active job and mark the job as closed in the job table.</summary>
            <remarks>Calling CloseJob prevents further edits from being associated with this job.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.CopyJob(System.String,System.String)">
            <summary>Method to create a replica of an existing job in the context of a new job of the current connection.</summary>
            <param name="oldJobName">The name of the job containing the data to copy.</param>
            <param name="newJobName">The name of the job to create. The data from the oldJobName will be copied into the new job.</param>
            <remarks>Calling CopyJob is analogous to executing the Copy function from the Job Environment command.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.CreateJob">
            <summary>to create a job on the current connection.  The job is not automatically made active. Use the EditJob method to perform that task.</summary>
            <returns>The default job name.</returns>
            <remarks>Calling CreateJob is analogous to executing the CreateJob command without the option to set the job active. </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.CreateJob(System.String)">
            <summary>to create a job on the current connection.  The job is not automatically made active. Use the EditJob method to perform that task.</summary>
            <param name="jobName">The name of the job to create.</param>
            <returns>The specified job name.</returns>
            <remarks>Calling CreateJob is analogous to executing the CreateJob command without the option to set the job active. </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.EditJob(System.String)">
            <summary>Method to begin an edit session for the specified job i.e. makes the specified job active.</summary>
            <param name="jobName">The name of the job to edit (make active).</param>
            <remarks>Calling EditJob method is analogous to the Make Active operation in the job-management commands and the ltt_user.editjob database procedure. This method adds the job to the connection, if it is not already the only one in the list, and makes it active for editing. If there are already jobs in the list, they are released.  While multiple connections are possible, only one job can be attached to a connection. In other words, there can be only one attached connection when editing a job.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.EndEditJob">
            <summary>Method to terminate the edit session for the job currently being edited.</summary>
            <remarks>The job remains in the viewed jobs list.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.FindConflicts">
            <summary>Method to get the list of conflicting feature keys for job data that conflicts with master data.</summary>
            <returns>The list of feature keys for job data that conflicts with master data.</returns>
            <remarks>The FindConflicts method compares the job currently being edited against the master database and reports, at the table level, where conflicts exist. It does not report the specific conflict.  FindConflicts uses the database procedure to find the conflicts. It creates a ADODB.recordset against the table populated by the procedure.  FindConflicts works only if there is a job in Edit mode as, for example, when EditJob has been previously called.  The output ADODB.Recordset includes the feature keys, the name of the table, the descriptive name of the feature, and the LTT status (edit, add, delete). The recordset returned is ordered by G3E_FID, G3E_FNO, G3E_CID, and G3E_CNO.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.FindPendingEdits">
            <summary>Method to get the pending work associated with the active job.</summary>
            <returns>The set of keys for all the components that currently have proposed additions, modifications or deletions.</returns>
            <remarks>FindPendingEdits works only if there is a job in Edit mode as, for example, when EditJob has been previously called.  The output ADODB.Recordset includes the feature keys, the name of the table, the descriptive name of the feature, and the LTT status (edit, add, delete). The recordset returned is ordered by G3E_FID, G3E_FNO, G3E_CID, and G3E_CNO.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.RemoveJob(System.String)">
            <summary>Method to remove the job from the list of currently viewed jobs.</summary>
            <param name="jobName">The name of the job to remove.</param>
            <remarks>If the specified job currently being edited then the edit session is terminated.  Calling the RemoveJob method with an invalid job name or a job name not currently viewed results in an exception being thrown. Calling RemoveJob does not post or discard edits for the job. RemoveJob stops the viewing of a job.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTJobManagementService.ViewJob(System.String)">
            <summary>Method to add specified job for viewing.</summary>
            <param name="jobName">The name of the job to view.</param>
            <remarks>Calling ViewJob method is analogous to adding a job in the job environment or using the ltt_user.viewjob procedure. This method may be called repeatedly to view multiple jobs.  Exception is thrown if specified job is already active or in the job list.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTJobManagementService.DataContext">
            <summary>Property to return/set the DataContext object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTJobManagementService.PostErrors">
            <summary>Property to return the PostErrors recordset.</summary>
            <remarks>If the error resulted from validation (gtjmsValidation), the format of the recordset will be as follows:
            <list type="bullet">
            <item>"ErrorPriority", adVarWChar, VARCHAR2</item>
            <item>"ErrorDescription", adVarWChar, VARCHAR2</item>
            <item>"ErrorLocation", adVarWChar, VARCHAR2</item>
            <item>"Connection", adVarWChar, VARCHAR2</item>
            <item>"G3E_FNO", adInteger, NUMBER</item>
            <item>"G3E_FID", adInteger, NUMBER</item>
            <item>"G3E_CNO", adInteger, NUMBER</item>
            <item>"G3E_CID", adInteger, NUMBER </item>
            </list>
            <para/>
            <list type="table">
            <listheader>
            <term>Field</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>ErrorPriority</term>
            <description>The severity of the error, with P1 being the most severe.</description>
            </item>
            <item>
            <term>ErrorDescription</term>
            <description>Describes the error.</description>
            </item>
            <item>
            <term>ErrorLocation</term>
            <description>The software module that generated the error or the type of error identified, such as attribute or relationship.</description>
            </item>
            <item>
            <term>Connection</term>
            <description>The database connection name.</description>
            </item>
            <item>
            <term>G3E_FNO</term>
            <description>The feature number, which is the feature type.</description>
            </item>
            <item>
            <term>G3E_FID</term>
            <description>The feature ID, which identifies the set of records that constitute a feature.</description>
            </item>
            <item>
            <term>G3E_CNO</term>
            <description>The component number, which is the component type.</description>
            </item>
            <item>
            <term>G3E_CID</term>
            <description>The component occurrence identifier, which identifies the sequence of a particular component record when a feature component can have repeating records.</description>
            </item>
            </list>
            If the error resulted from a conflict detection (gtjmsConflict), the format of the recordset will be from the CONFLICTS table as follows:
            <list type="bullet">
            <item>"TABLE_NAME", adVarWChar, VARCHAR2</item>
            <item>"JOB_NAME", adVarWChar, VARCHAR2</item>
            <item>"G3E_FID", adInteger, NUMBER</item>
            <item>"G3E_CID", adInteger, NUMBER</item>
            <item>"G3E_FNO", adInteger, NUMBER</item>
            <item>"G3E_CNO", adInteger, NUMBER </item>
            </list>
            If the error resulted from a database error encountered (gtjmsDatabase), the format of the recordset will be as follows:
            <list type="bullet">
            <item>"ErrorDescription", adVarWChar, VARCHAR2</item>
            </list>
            ErrorDescription describes the error. The client should be aware that this property could return Nothing if there are no errors.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTDisplayControlNode">
            <summary>Intergraph G/Technology IGTDisplayControlNode API.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDisplayControlNode.Key">
            <summary>Property to return the unique identifier for the IGTDisplayControlNode.</summary>
            <remarks>This key can be used as an Index when calling the IGTDisplayControlNodes' Item property or when calling the GTDisplayService's GetDisplayControlNodes method.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDisplayControlNode.DisplayName">
            <summary>Property to return the name displayed in the Display Control's tree view.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDisplayControlNode.DisplayPathName">
            <summary>Property to return the path of the node in the Display Control's tree view. The path is a tab-delimited string with the names at each parent level in the tree view.</summary>
            <remarks>Normally, DisplayPathName does not include DisplayName. However, if the node is a top-level node, DisplayPathName and DisplayName have the same value. This is true for top-level metadata legend nodes as well as top-level ad hoc nodes.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDisplayControlNode.LegendEntry">
            <summary>Property to return the IGTLegendEntry object associated with IGTDisplayControlNode object.</summary>
            <remarks>If the IGTDisplayControlNode is not a legend entry (that is, not a leaf node in the Display Control's tree view), then the property returns null.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTFinishedEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTFeaturePlacementService.Finished event.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTFinishedEventArgs.#ctor(Intergraph.GTechnology.API.IGTKeyObjects@,Intergraph.GTechnology.API.IGTKeyObjects@)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTFinishedEventArgs class.</summary>
            <param name="ComponentsPlaced">ComponentsPlaced argument value.</param>
            <param name="ComponentsSkipped">ComponentsSkipped argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTFinishedEventArgs.ComponentsPlaced">
            <summary>ComponentsPlaced argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTFinishedEventArgs.ComponentsSkipped">
            <summary>ComponentsSkipped argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTFunctional">
            <summary>The Intergraph G/Technology IGTFunctional Interface assigns attribute values or generates additional components based on a user-entered value.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTFunctional.Execute">
            <summary>Method called when a component instance is created, or when one of its values is modified, or when it is updated.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTFunctional.Delete">
            <summary>Method called when a component instance is deleted.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTFunctional.Validate(System.String[]@,System.String[]@)">
            <summary>Method called when a feature is validated.</summary>
            <remarks>There is a one-to-one correspondence between the error priorities in the ErrorPriorityArray and the error messages in the ErrorMessageArray.
            <para/>
            You should include logic in the Validate method to ensure that post fails based on any business rules you are implementing with the Functional interface.
            <para/>
            The software allows some validation errors to be accepted when posting the data. See the validation processing description for more details and specifically 
            the discussion of the error filtering parameters to determine the proper value to specify for your workflow.</remarks>
            <param name="ErrorPriorityArray">Returns the priority of any errors that were detected while validating. This array is expected to be string data. The format of the error priority should be consistent with the values used by the product software and other custom interfaces. By default, these take the form of P1, P2, P3, and P4.</param>
            <param name="ErrorMessageArray">Returns the actual error messages detected while validating.</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTFunctional.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTFunctional.ComponentName">
            <summary>Property to return/set the component name (G3E_COMPONENT.G3E_NAME) of the component that caused the functional interface to execute.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTFunctional.Components">
            <summary>Property to return/set the components collection of the feature being edited.</summary>
            <remarks>Use the Components property to set up a IGTComponents object through which you can access various components in the feature.
            <para/>
            The Components property contains all components for the current feature.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTFunctional.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
            <remarks>The DataContext property lets you set up a GTDataContext object through which you can perform database operations and access published metadata.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTFunctional.FieldName">
            <summary>Property to return/set the field name (G3E_ATTRIBUTE.G3E_FIELD) of the attribute from the component recordset that caused the functional interface to execute.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTFunctional.FieldValueBeforeChange">
            <summary>Property to return/set the field value, before the modification, of the attribute that caused the functional interface to execute.</summary>
            <remarks>FieldValueBeforeChange may be used for comparison when executing the Functional interface.
            <para/>
            If the Functional interface is associated with the geometry field, the value of this property is the geometry object before it was changed.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTFunctional.Type">
            <summary>Property to return/set the type of the functional interface being executed.</summary>
            <remarks>The Type property allows the Functional interface to determine the recordset activity that caused the Functional interface to fire.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTReport">
            <summary>The Intergraph G/Technology IGTReport Interface allows the user to generate custom reports based on the results of a query, trace, or feature selection.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTReport.Execute(ADODB.Recordset,System.String)">
            <summary>Method called to execute the interface and report on the data as required.</summary>
            <remarks>The Execute method is called after the recordset is created by the calling command. This method takes 
            as input the recordset from a trace or query, performs any additional processing, and then presents the report 
            using any display technique available. The interface does not specify nor support any particular form for display.</remarks>
            <param name="Recordset">The query recordset for processing</param>
            <param name="QueryName">User-specified name of the query that groups the set of data for the particular analysis operation</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTReport.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
            <remarks>The arguments are defined in the G3E_REPORT table and can vary from one usage of the report interface to another.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTReport.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
            <remarks>The DataContext property lets you set up a IGTDataContext object through which you can perform database operations 
            and access published metadata.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTCustomCommandModal">
            <summary>The Intergraph G/Technology IGTCustomCommandModal Interface allows building of 
            custom commands for which processing is completed in the Activiate method.  No input is 
            required from the user other than what is collected by the modal forms for the command to display.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTCustomCommandModal.Activate">
            <summary>Method called to start the modal command. It is called each time the command is invoked.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTCustomCommandModal.TransactionManager">
            <summary>Property to set the IGTTransactionManager object so that the custom command can make edits to the database under
            transaction control.</summary>
            <remarks>The modal command must be classified as an Edit command for this property to be set.
            <para/>
            This property is set if the custom command is set as a transaction command.  A transaction command 
            has an active job available when the command is first invoked, and an enabling condition marked "New 
            transaction available".  This implies that the "Active job exists" enabling condition should also be set.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTCustomCommandModeless">
            <summary>The Intergraph G/Technology IGTCustomCommandModeless Interface allows building of custom commands that 
            extend existing <b>G/Technology</b> capability, and provides access to these commands through the <b>G/Technology Tools > Custom Command</b> menu.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTCustomCommandModeless.Activate(Intergraph.GTechnology.API.IGTCustomCommandHelper)">
            <summary>Method called to start the modeless command. It is called each time the command is invoked.</summary>
            <param name="CustomCommandHelper">The IGTCustomCommandHelper object available to modeless custom commands</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTCustomCommandModeless.Terminate">
            <summary>Method called when the modeless custom command is about to be released. This method is called when the command is reloaded, as in a Refresh Metadata Edits operation, or when canceled by a higher priority command.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTCustomCommandModeless.Pause">
            <summary>Method called when the modeless custom command is interrupted by another command.</summary>
            <remarks>This provides an opportunity for the command to cache its current state.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTCustomCommandModeless.Resume">
            <summary>Method called when the modeless custom command is being restarted after a Pause has been executed.</summary>
            <remarks>This provides an opportunity for the command to check the validity of its cache and then resume processing—most likely waiting on user input.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTCustomCommandModeless.CanTerminate">
            <summary>Property to return whether the modeless custom command is ready to be terminated.  Sometimes this means the command will pop up a dialog box and ask 
            if the user really wants to end the command and lose the uncommitted work that has been done so far, or whether to ignore the request to start a conflicting 
            command and return to working on this command.</summary>
            <remarks>The Property returns True (can terminate) or False (cannot terminate at present). </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTCustomCommandModeless.TransactionManager">
            <summary>Property to set the IGTTransactionManager object so that the custom command can make edits to the database under
            transaction control.</summary>
            <remarks>The modeless command must be classified as an Edit command for this property to be set.
            <para/>
            This property is set if the custom command is set as a transaction command.  A transaction command has an active job available 
            when the command is first invoked, and an enabling condition marked "New transaction available".  This implies that the "Active 
            job exists" enabling condition should also be set.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTComponentElimination">
            <summary>Intergraph G/Technology IGTComponentElimination Interface.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTComponentElimination.Execute">
            <summary>Method called to assign the destination of component instances.  This method may be called repeatedly during the component elimination process.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComponentElimination.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComponentElimination.BreakFeature">
            <summary>Property to return/set the linear feature being broken, including any geometry edits made in the break operation.  The IGTKeyObject's CNO and CID properties identify the component instance that was broken.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComponentElimination.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComponentElimination.DestinationList">
            <summary>Property to return/set the IGTEliminationComponents collection containing objects that have been destined.  A IGTEliminationComponent object is added to this collection and removed from the SubjectList collection as its destiny is resolved.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComponentElimination.NewFeature">
            <summary>Property to return/set a copy of the linear feature being broken, including any geometry edits made in the break operation.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComponentElimination.SubjectCNO">
            <summary>Property to return/set the CNO of which component is to be destined.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComponentElimination.SubjectList">
            <summary>Property to return/set the IGTEliminationComponents collection containing objects that have not been destined yet.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTPostBreakLinear">
            <summary>The Intergraph G/Technology IGTPostBreakLinear Interface is leveraged by objects called from BreakLinearService, and is used primarily as a cleanup point during break.</summary>
            <remarks>At the point that Post Break Linear objects are called, the break has been completed, all components have been destined and graphically adjusted, and all relationships have been 
            reassigned appropriately. This step follows the bulk of break work and precedes the establishing of relationships between a breaking feature and the two features resulting from the 
            break. Since this step follows all break geometry work, it is a logical place to do any work that would require the actual updated geometries for purpose of attribution updates.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTPostBreakLinear.Execute">
            <summary>Method called to perform the work of the post break linear interface.</summary>
            <remarks>After all of the properties are set, this method is called so that the object implementing the IGTPostBreakLinear interface can do its work.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTPostBreakLinear.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTPostBreakLinear.BreakFeature">
            <summary>Property to return/set the break (linear) feature.  Its FID property is that of the feature that was broken.  Its CNO and CID properties indicate the component instance that was broken.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTPostBreakLinear.BreakRatio">
            <summary>Property to return/set the ratio along the linear, before the break occurred, of the component instance that was broken.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTPostBreakLinear.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
            <remarks>The DataContext property grants the interface object access to the database and published metadata.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTPostBreakLinear.NewFeature">
            <summary>Property to return/set the new feature resulting from the break operation.</summary>
            <remarks>This IGTKeyObject represents the new feature of the break operation and can be used in the updating of feature attribution and geometry.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTPlacementTechnique">
            <summary>The Intergraph G/Technology IGTPlacementTechnique Interface constructs the graphic components (geometry) of a feature.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTPlacementTechnique.StartPlacement(Intergraph.GTechnology.API.IGTPlacementTechniqueHelper,Intergraph.GTechnology.API.IGTKeyObject,Intergraph.GTechnology.API.IGTKeyObjects)">
            <summary>Method called to initialize the placement technique.</summary>
            <param name="PTHelper">Points to the IGTPlacementTechniqueHelper so that the IGTPlacementTechnique can communicate with it</param>
            <param name="KeyObject">The key object for the feature currently being placed. This key object also exists in the KeyObjectCollection.</param>
            <param name="KeyObjectCollection">A collection of all key objects for all features that are part of the feature or configuration currently being placed</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTPlacementTechnique.MouseClick(Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint,System.Int32,System.Int32,Intergraph.GTechnology.API.IGTDDCKeyObjects,Intergraph.GTechnology.API.IGTPlacementTechniqueEventMode)">
            <summary>Method called when a MouseClick event is received on the input IGTMapWindow.</summary>
            <remarks>The IGTPlacementTechnique does not receive any mouse events while either construction aids or common adjustments are running.
            <para/>
            The IGTPlacementTechnique does not receive any mouse events while either construction aids or common adjustments are running.
            <para/>
            This method is called only for clicks made with the left mouse button.  ShiftState may be any value except ALT. An ALT+left-button click is interpreted as 
            a double click and will be sent to the MouseDblClick method instead.
            <para/>
            The GTPlacementTechniqueEventMode's RelationshipProcessingEnabled property allows the IGTPlacementTechnique to disable relationship establishment at the 
            location of the mouse click. This is needed when the mouse click locates an existing feature.
            <para/>
            If the actual point used for geometry construction differs from the original UserPoint input parameter, then UserPoint should be updated to reflect that 
            value. This is particularly important for processing relationships at the proper locations.</remarks>
            <param name="MapWindow">The window in which the mouse click occurred</param>
            <param name="UserPoint">The location of the mouse click on the screen, in world coordinates</param>
            <param name="Button">Denotes which mouse button was depressed when the click occurred</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also depressed. Some, all, or none of these keys may be depressed at the time the mouse click occurred.</param>
            <param name="LocatedObjects">A collection of existing components that are within tolerance (as specified by the SmartLocatePixelTolerance preference set value) to the location of the mouse click</param>
            <param name="EventMode">Allows the IGTPlacementTechnique to communicate to the placement software how the MouseClick event was processed. This determines how the placement software will post process this event.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTPlacementTechnique.MouseDblClick(Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint,System.Int32,Intergraph.GTechnology.API.IGTDDCKeyObjects)">
            <summary>Method called when a MouseDblClick event is received on the input IGTMapWindow.</summary>
            <remarks>Mouse double click events normally signal that the user has finished digitizing this component. In addition to left double clicks, this method will also be called for ALT+left-button clicks.
            <para/>
            ShiftState may be any value.  The IGTPlacementTechnique does not receive any mouse events while either construction aids or common adjustments are running.
            <para/>
            If the actual point used for geometry construction differs from the original UserPoint input parameter, then UserPoint should be updated to reflect that value. This is particularly important 
            for processing relationships at the proper locations.</remarks>
            <param name="MapWindow">The window in which the double click occurred</param>
            <param name="UserPoint">The location of the double click on the screen, in world coordinates</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also depressed. Some, all, or none of these keys may be depressed at the time the double click occurred.</param>
            <param name="LocatedObjects">A collection of existing components that are within tolerance (as specified by the SmartLocatePixelTolerance preference set value) to the location of the double click</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTPlacementTechnique.MouseMove(Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint,System.Int32,Intergraph.GTechnology.API.IGTDDCKeyObjects,Intergraph.GTechnology.API.IGTPlacementTechniqueEventMode)">
            <summary>Method called when a MouseMove event is received on the input IGTMapWindow.</summary>
            <remarks>The MouseMove method processes mouse moves that draw dynamically from the last point appended to the current mouse location. This method is called for all mouse moves.
            <para/>
            ShiftState may be any value.  The IGTPlacementTechnique does not receive any mouse events while either construction aids or common adjustments are running.
            <para/>
            If the IGTPlacementTechnique is displaying its own status bar messages, it should check the contents of the status bar to avoid message flicker and refresh the message displayed there if different than 
            expected. This lets the technique's messages be restored if the placement command has been interrupted by another command that also writes to the status bar.
            <para/>
            The GTPlacementTechniqueEventMode's RelationshipProcessingEnabled property allows the IGTPlacementTechnique to disable relationship candidates from highlighting during mouse moves. This is useful 
            if the IGTPlacementTechnique is also highlighting graphics on mouse move.
            <para/>
            If the actual point used for geometry construction differs from the original UserPoint input parameter, then UserPoint should be updated to reflect that value. This is particularly important for 
            processing relationships at the proper locations.</remarks>
            <param name="MapWindow">The window in which the mouse move occurred</param>
            <param name="UserPoint">The location of the mouse on the screen, in world coordinates</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also depressed. Some, all, or none of these keys may be depressed at the time the mouse move occurred.</param>
            <param name="LocatedObjects">A collection of existing components that are within tolerance (as specified by the SmartLocatePixelTolerance preference set value) to the location of the mouse. This collection 
            will be Null if a locate was not performed or if the contents of the collection have not changed from the last mouse move.  If it is Null, the IGTPlacementTechnique should not make any changes to 
            HighlightedObjects, such as Clear/Add/Remove. This is to avoid highlight flicker.</param>
            <param name="EventMode">Allows the IGTPlacementTechnique to communicate to the placement software how the MouseMove event was processed. This determines how the placement software will post process this event.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTPlacementTechnique.KeyUp(Intergraph.GTechnology.API.IGTMapWindow,System.Int32,System.Int32,Intergraph.GTechnology.API.IGTPlacementTechniqueEventMode)">
            <summary>Method called when a KeyUp event is received on the input IGTMapWindow.</summary>
            <remarks>The KeyUp method processes keyup events such as F1, which normally brings up help, and BACKSPACE, which normally removes points from the geometry.  This method 
            is called for all keyup events except when ESC, SHIFT+ESC, or F3 are pressed, as these have special meaning to the placement and edit commands.
            <para/>
            The GTPlacementTechniqueEventMode's RelationshipProcessingEnabled property allows the IGTPlacementTechnique to disable deletion of relationships on backspace 
            events. This is useful if the IGTPlacementTechnique disabled relationship processing on mouse click. Disabling relationships on mouse click and key up events 
            should be done in combination to keep relationship processing synchronized.
            <para/>
            The IGTPlacementTechnique does not receive any mouse events while either construction aids or common adjustments are running.</remarks>
            <param name="MapWindow">The window in which the keyup occurred</param>
            <param name="KeyCode">The key that was pressed</param>
            <param name="ShiftState">Denotes if either the SHIFT, ALT, or CTRL key was also depressed. Some, all, or none of these keys may be depressed at the time the mouse move occurred.</param>
            <param name="EventMode">Allows the IGTPlacementTechnique to communicate to the placement software how the KeyUp event was processed. This determines how the placement software will post process this event.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTPlacementTechnique.AbortPlacement">
            <summary>Method called to terminate the placement technique when the user presses ESC, etc.</summary>
            <remarks>The following actions will result in the AbortPlacement method being called on the IGTPlacementTechnique:
            <list type="bullet">
            <item>If the user hits ESC while a component is being digitized.</item>
            <item>If the user hits SHIFT+ESC or F3 while a component is being digitized.</item>
            <item>If the user selects a different feature or configuration to place while a component is being digitized.</item>
            <item>If the user selects a different component to place while digitizing some other component.</item>
            <item>If the user clicks the Cancel Edits button on Feature Explorer while a component is being digitized.</item>
            <item>If the user clicks the Restart with Job Defaults on Feature Explorer while a component is being digitized.</item>
            <item>If the user closes the last open map window while a component is being digitized.</item>
            </list>
            <para/>
            The AbortPlacement method terminates the technique by aborting it and discarding all work it has done.  If the IGTPlacementTechnique 
            needs to cancel placement apart from actions listed above, then it should explicitly call GTPlacementTechniqueHelper.AbortPlacement. This 
            cancels the placement of the component and continues as though the user has pressed SHIFT+ESC.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTPlacementTechnique.GraphicComponent">
            <summary>Property to return/set the graphic component that is being placed.  It is added to the GraphicComponents collection after digitization is complete.</summary>
            <remarks>The GraphicComponent property contains information about the component currently being drawn, including metadata settings and dynamic display information.
            <para/>
            This is true for feature placement as well as for feature edit scenarios. For the edit scenarios, all graphic components that exist for the selected feature at the time 
            the edit was invoked will be included in this collection.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTPlacementTechnique.GraphicComponents">
            <summary>Property to return/set the collection of graphic components already placed (or that already exist in an Edit case).</summary>
            <remarks>The GraphicComponents property contains key information about all the components that have already been digitized for the current feature or configuration instance, including metadata settings and dynamic display information.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTMergeFeatures">
            <summary>The Intergraph G/Technology IGTMergeFeatures Interface is used to customize the behavior of the Merge Features command.</summary>
            <remarks>The IGTMergeFeatures Interface is called at four places in the processing of the Merge Feature command:
            <list type="bullet">
            <item>Before any user interaction, to indicate if two features are suitable to be merged.</item>
            <item>To perform a custom merge of components.</item>
            <item>After the geometries and attributes have been merged, to indicate if the merged features are acceptable.</item>
            <item>To execute any post processing.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTMergeFeatures.Allow(System.String[]@)">
            <summary>Method called to give the interface an opportunity to stop the merge if it determines, based on the not yet merged geometries and attributes, that the two features should not be merged.</summary>
            <remarks>The ErrorMessageArray parameter is an array of strings. The method should allocate the array, populate it, and assign it to the ErrorMessageArray if any errors are found.
            <para/>
            When this call is made, Feature1 and Feature2 contain the data of the features as they are stored in the database. The Allow method should catch as many errors as possible because 
            it is called before any user interaction starts.
            <para/>
            If any of the IGTMergeFeatures interfaces returns False from this method, the Merge Features command displays the error messages and terminates.</remarks>
            <param name="ErrorMessageArray">Returns the actual error messages that were detected by the interface.</param>
            <returns>The Allow Method returns a Boolean value that indicates if the Merge Features command can continue.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTMergeFeatures.MergeComponents">
            <summary>Method to perform a custom merge of component instances.  If this method merges any components it must update Feature1 with merged data.</summary>
            <remarks>If merging of components is supposed to happen in this method, G3E_FEATURECOMPONENT.G3E_MERGEOCCURRENCES must be 0. This is an indication for the Merge Features command that 
            the merging will be done by some of the interfaces, which it invokes (this value is also 0 for connectivity components).
            <para/>
            This method should be used for merging geometry components in the following scenarios:
            <list type="bullet">
            <item>There is a unique way to merge the geometries; so user interaction within the command to select how the geometry is merged is not necessary; it may be actually requested 
            to skip it.  For example, the geometries always touch in start or end point, therefore there is only one way to merge; no user interaction is needed here.</item>
            <item>None of the merge options available in the command is suitable for the merge. For example, you might want to merge two-point lines by eliminating the middle points.</item>
            </list>
            The method is called immediately after Feature1 has been updated with merged data from user interaction and metadata definitions and before Approve is called on relationship 
            services and IGTMergeFeatures interfaces. If the component to be merged by IGTMergeFeatures interface is a triggering component of any relationship, the merge needs to be done 
            in this method and cannot be postponed until PostProcess. Otherwise the relationships cannot do the correct processing.
            <para/>
            If MergeComponents manages to merge the components, it should return True. If MergeComponents fails to merge the components, it should display an error message and return 
            False. If False is returned the Merge Features command rolls back the transaction and terminates. This failure should be very rare; most probably it will not happen at 
            all. IGTMergeFeatures should catch data errors in Allow. So MergeComponents should be called only with clean data.</remarks>
            <returns>The MergeComponents Method returns a Boolean value that indicates if the Merge Features command can continue.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTMergeFeatures.Approve(System.String[]@)">
            <summary>Method called to give the interface an opportunity to stop the merge if it determines, based on the merged geometries and attributes, that the two features should not be merged.</summary>
            <remarks>The ErrorMessageArray parameter is an array of strings. The method should allocate the array, populate it, and assign it to the ErrorMessageArray if any errors are found.
            <para/>
            When this call is made, Feature1 already contains the data that the Merge Features command intends to write to the database. Only the relationship components and attributes are not yet updated.
            <para/>
            The Approve method should catch the errors that are consequences of how the user decides to merge the geometries. If any of the IGTMergeFeatures interfaces returns False from this method, the Merge 
            Features command displays the error messages, rolls back the transaction, and terminates.</remarks>
            <param name="ErrorMessageArray">Returns the actual error messages that were detected by the interface.</param>
            <returns>The Approve Method returns a Boolean that indicates if the Merge Features command can continue.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTMergeFeatures.PostProcess">
            <summary>Method called to give the interface an opportunity to do post processing of component instances based on how other component instances were merged.  It is not supposed to merge any components.</summary>
            /// <remarks>The PostProcess method is called so that the interface can execute any post processing necessary.
            <para/>
            This method should do post processing of component instances based on how other component instances have been merged. It should not merge any components. PostProcess may be used, for example, to rearrange 
            the labels based on how the primary geometries have been merged.
            <para/>
            If PostProcess manages to do all its processing, it should return True. If PostProcess fails to do all its processing, it should display an error message and return False. If False is returned, the Merge 
            Features command rolls back the transaction and terminates. Such failure should be very rare. IGTMergeFeatures should catch data errors in Approve; so PostProcess should be called only with clean data.</remarks>
            <returns>bool</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTMergeFeatures.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTMergeFeatures.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
            <remarks>The DataContext property grants the IGTMergeFeatures interface access to the database and to published metadata.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTMergeFeatures.Feature1">
            <summary>Property to return/set the first feature to be merged. It is the one selected before running the Merge Features command.  It is updated with merged geometries and attributes and is the final feature.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTMergeFeatures.Feature2">
            <summary>Property to return/set the second feature to be merged.  This feature is deleted after processing the Merge Features command.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTMergeFeatures.MergeCNO">
            <summary>Property to return/set the CNO that initiated the call to this interface.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry">
            <summary>The Intergraph G/Technology IGTRelationshipGeometry Interface enforces stricter geometry rules for establishing or reestablishing the relationships 
            and/or performing geometry manipulations to features related to a feature that is being edited.</summary>
            <remarks>Relationship Geometry interface objects are called from the Many-To-Many Ownership, Node-Edge Connectivity, Ownership, and Node-Ordered Connectivity 
            relationships at various times during placement, edit, and validate workflows.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.AdjustGeometry(Intergraph.GTechnology.API.IGTGeometry)">
            <summary>Method called to perform geometry adjustments on the active or related features when the conditions influencing the relationship change.</summary>
            <remarks>The method returns True if it considers all the current relationships to be valid. Otherwise, it returns False. This tells the relationship service 
            to evaluate the existing relationships—drop if not valid and try to establish the new relationships.
            <para/>
            The CNO and CID of the updated component instance of the active feature can be retrieved from the CNO and CID properties of the GTKeyObject of the 
            ActiveFeature property. AdjustGeometry should be prepared to handle the case when the CNO and CID are 0 because the relationship software does not 
            always receive these values from the calling commands.</remarks>
            <param name="BeforeGeometry">The geometry of the component instance defined by CNO and CID properties of ActiveFeature before the change.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.AfterDelete">
            <summary>Method called after the relationship is deleted.  It performs any post-processing on the active or previously related feature.</summary>
            <remarks>For each call to the BeforeDelete method, there should be an immediate call to AfterDelete because no other method of this RGI can be 
            called between BeforeDelete and AfterDelete for the same related feature. If a feature pair has multiple RGIs configured, all of the before 
            methods are called and the delete is performed, and then all of the after methods are called.
            <para/>
            The BeforeDelete method receives as an argument the GTKeyObject for the feature for which the relationship is being deleted. BeforeDelete should 
            cache this reference if needed in AfterDelete.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.AfterEstablish">
            <summary>Method called after the relationship is established.  It performs any post-processing on the active or previously related feature.</summary>
            <remarks>For each call to the BeforeEstablish method, there should be an immediate call to AfterEstablish because no other method of this RGI 
            can be called between BeforeEstablish and AfterEstablish for the same related feature. If a feature pair has multiple RGIs configured, all of 
            the before methods are called and the delete is performed, and then all of the after methods are called.
            <para/>
            The BeforeEstablish method receives as an argument the GTKeyObject for the feature for which the relationship is being established. BeforeEstablish 
            should cache this reference if needed in AfterEstablish.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.AfterUpdate">
            <summary>Method called after the relationship is saved to the database.</summary>
            <remarks>This method is called as the last method within any command workflow that involves relationship processing.  RGI should call Reestablish 
            on the related features it has modified.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.BeforeDelete(Intergraph.GTechnology.Interfaces.GTRelationshipGeometryDeleteActionConstants,Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method called to indicate that the relationship to the RelatedFeature is about to be deleted.</summary>
            <param name="DeleteAction">Type of delete action.</param>
            <param name="RelatedFeature">Related feature whose relationship is about to be deleted by the relationship service.</param>
            <remarks>The CNO of the triggering component on the active feature and CID of the component instance for which relationship is deleted can be retrieved from the CNO and CID properties of the GTKeyObject of the ActiveFeature property.
            <para/>
            This method should be prepared to handle the case when the CNO are CID are 0 because the relationship software does not always receive these values from the calling commands.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.BeforeEstablish(Intergraph.GTechnology.API.IGTKeyObject,System.Boolean)">
            <summary>Method called to indicate that a relationship to the EstablishToFeature is about to be established.</summary>
            <remarks>After updating the relationship attributes or component for the EstablishToFeature parameter, a call to the AfterEstablish method is made.
            <para/>
            If multiple RGIs are running within the context of the same relationship service, first BeforeEstablish is called on all RGIs, then the relationship is established, and then AfterEstablish is called on all RGIs.
            <para/>
            The CNO of the triggering component on the active feature and CID of the component instance establishing the relationship can be retrieved from the CNO and CID properties of the GTKeyObject of the ActiveFeature property. BeforeEstablish 
            should be prepared to handle the case when the CNO are CID are 0 because the relationship software does not always receive these values from the calling commands.</remarks>
            <param name="EstablishToFeature">GTKeyObject of the feature to which the relationship is established.</param>
            <param name="ProcessingBreak">True if a relationship is established as part of preparing for break, that is, a break is not yet in progress.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.BeforeUpdate">
            <summary>Method called before the relationship is saved to the database.</summary>
            <remarks>This method is paired with AfterUpdate, which is called after all the relationship information has been written to the database.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.Initialize">
            <summary>Method called to give the interface an opportunity to initialize itself.  It is called before any other method is called.</summary>
            <remarks>The Initialize method does one-time initialization of the object.  All properties have to be set before calling this method.
            <para/>
            RGI is associated with source FNO, source CNO, related FNO and related CNO in G3E_RELATIONSHIPGEOMETRY. RGI can always retrieve source FNO 
            from ActiveFeature.FNO. It can always get related FNO and related CNO from its RelatedFNO and Related CNO properties. At the time when 
            Initialize is called, ActiveFeature.CNO will be set to the source CNO.
            <para/>
            Initialize should retrieve all metadata it needs for further processing. It should also check the context in which it is running.
            <para/>
            <b>Example</b>
            <para/>
            If an RGI expects to be called only from many-to-many ownership and it is called from Node-Edge Connectivity, it should display 
            a message box stating that it is not supposed to be called from NEC and set a member variable such as m_bDoNothig indicating that 
            calls to other methods should return immediately</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.Validate(System.String[]@,System.String[]@)">
            <summary>Method called to validate the relationship.</summary>
            <remarks>Validate is called during post operations.</remarks>
            <param name="ErrorPriorityArray">Returns the priority of any errors that were detected while validating</param>
            <param name="ErrorMessageArray">Returns the actual error messages detected while validating</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.AllowDelete(Intergraph.GTechnology.Interfaces.GTRelationshipGeometryDeleteActionConstants,Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method called to give the interface an opportunity to stop the relationship to RelatedFeature from being deleted.  Return True (-1) to allow the delete or False (0) to prevent it.</summary>
            <param name="DeleteAction">Type of delete action.</param>
            <param name="RelatedFeature">Related feature whose relationship is about to be deleted by the relationship service.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.FilterCandidates(System.Boolean,Intergraph.GTechnology.API.IGTKeyObjects)">
            <summary>Method called to give the interface an opportunity to remove all relationship candidates from the Candidates collection that do not comply with the interface's stricter criteria.</summary>
            <remarks>The relationship software calls the FilterCandidates method when:
            <list type="bullet">
            <item>Scrutinizing existing relationships, such as after merge.</item>
            <item>New relationship candidates have been retrieved using a method other than locating objects, as when a GTDDCKeyObjects collection with located objects is not available and therefore FilterLocatedCandidates cannot be called.</item>
            </list>
            <para/>
            The RGI should remove from the Candidates collection all relationship candidates that do not comply with the stricter RGI's criteria. The Candidates collection may contain multiple FNOs. The FilterCandidates method must keep in the 
            collection all those FNO/CNO combinations that are different from the RelatedFNO/RelatedCNO combination. Only those with the same FNO and CNO can be removed.
            <para/>
            If existing relationships are scrutinized, the CNO and CID properties of the GTKeyObject of the ActiveFeature property are not set. So, this method must examine all possible combinations of triggering components to determine if 
            the relationship is still valid.
            <para/>
            If new relationship candidates are examined, the CNO and CID properties of the GTKeyObject of the ActiveFeature property will be set.</remarks>
            <param name="CanBreak">True if EstablishToFeature is a linear feature that the relationship service is considering breaking using the active feature.</param>
            <param name="Candidates">GTKeyObjects collection with the relationship candidates</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.FilterLocatedCandidates(System.Boolean,Intergraph.GTechnology.API.IGTDDCKeyObjects)">
            <summary>Method called during mouse move or mouse click operations to give the interface an opportunity to remove all relationship candidates from the Candidates collection that do not comply with the interface's stricter criteria.</summary>
            <remarks>The Candidates collection may contain multiple FNO/CNO combinations. The FilterCandidates method must keep in the collection all those FNO/CNO combinaitons that are different from the RelatedFNO/RelatedCNO combination. Only those with the same FNO and CNO can be removed.
            <para/>
            The CNO of the triggering component on the active feature and CID of the component instance establishing the relationship can be retrieved from the CNO and CID properties of the GTKeyObject of the ActiveFeature property.
            <para/>
            FilterLocatedCandidates should be prepared to handle the case when the CNO and CID are 0 because the relationship software does not always receive these values from the calling commands.</remarks>
            <param name="CanBreak">True if the relationship service is running in a workflow where it could possibly break using the active feature.</param>
            <param name="Candidates">GTDDCKeyObjects with the located components of the relationship candidates</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.AllowMerge(Intergraph.GTechnology.API.IGTKeyObject,Intergraph.GTechnology.API.IGTKeyObjects,System.String[]@)">
            <summary>Method called to give the interface an opportunity to stop the relationship to MergeCandidate from being merged.  Return True (-1) to allow the merge or False (0) to prevent it.</summary>
            <param name="MergeCandidate">Feature to be merged.</param>
            <param name="MergeCandidateRelatedFeatures">Related features collection.</param>
            <param name="MessageArray">A message array which contains atleast one message when RGI does not approve merge. It's an out parameter.</param>
            <remarks>True is returned when the RGI allows the merge. False is returned if the RGI does not allow the merge. If it returns false, it also has to add at least one message to MessageArray.
            <para/>
            The RGI can get the features to be merged through the ActiveFeature property and the MergeCandidate parameter. Features related to the ActiveFeature can be examined through the RelatedFeatures property. Features related to the MergeCandidate can be examined through the MergeCandidateRelatedFeatures parameter.</remarks>
            <returns>Boolean</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.ApproveMerge(Intergraph.GTechnology.API.IGTKeyObject,Intergraph.GTechnology.API.IGTKeyObjects,System.String[]@)">
            <summary>Method called to give the interface an opportunity to stop the relationship to MergeCandidate from being merged.  Return True (-1) to approve the merge or False (0) to prevent it.  ActiveFeature already contains changes to the geometries and attributes.</summary>
            <param name="MergeCandidate">Feature to be merged.</param>
            <param name="MergeCandidateRelatedFeatures">Related features collection.</param>
            <param name="MessageArray">A message array which contains atleast one message when RGI does not approve merge. It's an out parameter.</param>
            <remarks>True is returned when the RGI approves the merge. False is returned if the RGI does not approve the merge. If it returns False, it also has to add at least one message to MessageArray.
            <para/>
            The RGI can get the features to be merged through the ActiveFeature property and the MergeCandidate parameter. Features related to the ActiveFeature can be examined through the RelatedFeatures property. Features related to the MegreCandidate can be examined through the MegreCandidateRelatedFeatures parameter.</remarks>
            <returns>Boolean</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.ActiveFeature">
            <summary>Property to return/set the feature that is being edited.  Its CNO and CID properties indicate which geometry is being adjusted.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.ProcessingMode">
            <summary>Property to return/set information about the kind of processing in progress (establish, reestablish, merge, break, validation or the context is not (yet) known).</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.RelatedCNO">
            <summary>Property to return/set the CNO of the triggering component on the related/candidate feature that is to be processed (i.e. for which G3E_RELATEDFNO and G3E_RELATEDCNO it is configured in G3E_RELATIONSHIPGEOMETRY).</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.RelatedFeatures">
            <summary>Property to return/set a collection of the features related to the active feature for the relationship given in the RNO property.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.RelatedFNO">
            <summary>Property to return/set the FNO of the related/candidate feature that is to be processed (i.e. for which G3E_RELATEDFNO and G3E_RELATEDCNO it is configured in G3E_RELATIONSHIPGEOMETRY).</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipGeometry.RNO">
            <summary>Property to return/set the RNO of the calling relationship.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTPostProcess">
            <summary>The Intergraph G/Technology IGTPostProcess Interface enables the manipulation of large amounts of data generated by the analysis commands.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTPostProcess.SelectOptions">
            <summary>Method called to allow the interface to gather input from the user when selecting a post process. This avoids deferring the request to the Execute method.</summary>
            <remarks>Specifying the SelectOptions method allows the interactive task to happen prior to the execution of the analysis command.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTPostProcess.Execute(ADODB.Recordset,System.String)">
            <summary>Method called to execute the interface and manipulate the data as required.</summary>
            <remarks>
            The Execute method should include the code to manipulate the data selected by the analysis command. 
            The recordset generated by the analysis command is sent as input to this method.
            <para/>
            This method is called while a transaction is in progress.  As such, any features opened using
            <see cref="M:Intergraph.GTechnology.API.IGTDataContext.OpenFeature(System.Int16,System.Int32)">IGTDataContext.OpenFeature</see> 
            are cached until the governing product command commits or rolls back the transaction.  See the 
            discussion in the OpenFeature method for cache limitations.  Any edits to the feature are saved 
            when the transaction is committed.
            <para/>
            </remarks>
            <param name="Recordset">The data returned from the analysis command</param>
            <param name="QueryName">Represents the query name associated with the analysis command</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTPostProcess.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTPostProcess.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
            <remarks>The DataContext property lets you set up a GTDataContext object through which you can perform database operations
            and access published metadata.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTImportFeature">
            <summary>The Intergraph G/Technology IGTImportFeature Interface, along with the GTFeatureLoader service, is used by the Import Feature command to import features into <b>G/Technology</b>.</summary>
            <remarks>If you are implementing a new Import Feature interface without requiring the capability to establish a relationship or break a linear feature, use the DataContext and 
            TransactionManager properties to create or edit features and to maintain the database transactions.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTImportFeature.Execute(Intergraph.GTechnology.API.IGTFeatureLoaderService,ADODB.Recordset,System.String,System.String)">
            <summary>Method called in which features should be imported into the database.</summary>
            <remarks><b>Note:</b>  An active connection with a job should already be defined when calling the Execute method.
            <para/>
            The Execute method should do the following:
            <list type="bullet">
            <item>Open the file and validate its contents.</item>
            <item>Create or upate and save each feature definition.</item>
            <item>Raise an error to the command on any failure that should initiate a rollback of the transaction.</item>
            <item>Return without error when data should be saved within the transaction.</item>
            <item>Return the error string as part of the raised error.</item>
            <item>Process its own metadata definition if applicable.</item>
            <item>Perform any progress reporting it feels is necessary.</item>
            </list>
            <para/>
            The Execute method should include the code to read the input data source file and to create new or update existing feature attribute information.
            <para/>
            The Execute method should return a success or failure. Successful execution triggers the Attribute Grid Control to refresh itself to reflect the 
            changes made during the execution of the Foreign Key Query. The success also replaces the value of the selected attribute with the new output value.</remarks>
            <param name="FeatureLoaderService">The Feature Loader object. The command will initialize the application pointer on the object.</param>
            <param name="MetadataRecordset">The pointer can be null, but this is the ADO version metadata recordset to get the contents of G3E_FEATUREIMPORT_OPTABLE.G3E_OPTIMIZEDTABLE for the particular object.</param>
            <param name="FileName">The name of the file selected by the user.</param>
            <param name="Parameter">The value may be null, but this is the contents of G3E_FEATUREIMPORT_OPTABLE.G3E_PARAMETER for the particular object.</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTImportFeature.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
            <remarks>The DataContext property lets you set up a IGTDataContext object through which you can perform database operations and access published metadata.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTImportFeature.TransactionManager">
            <summary>Property to return/set the IGTTransactionManager object associated with this interface.</summary>
            <remarks>The TransactionManager property should be used in implementations where the transaction capabilities of Feature Loader Service are not used.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTImportFeature.UserName">
            <summary>Property to return/set the user name value in G3E_FEATUREIMPORT_OPTABLE for this interface.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute">
            <summary>Intergraph G/Technology IGTRelationshipAttribute Interface.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.AfterEstablish">
            <summary>Method called after the relationship has been established so that the interface can perform other operations.</summary>
            <remarks>This Method is called after all of the properties have been set.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.Validate(System.String[]@,System.String[]@)">
            <summary>Method called to perform the work of the relationship attribute interface.  Its purpose is to validate the relationship between the active and related components.</summary>
            <param name="ErrorPriorityArray">Out parameter. Error priority array.</param>
            <param name="ErrorMessageArray">Out parameter. Error message array.</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.ActiveANO">
            <summary>Property to return/set the attribute number of the attribute involved in the validation process.  It is typically used in the AfterEstablish method to copy from the related component (using RelatedANO) to the active component (using ActiveANO).</summary>
            <remarks>The ActiveANO is the metadata value in the G3E_ATTRIBUTE.G3E_ANO field.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.ActiveComponentName">
            <summary>Property to return/set the component name (G3E_COMPONENT.G3E_NAME) of the component associated with the ActiveANO property.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.ActiveComponents">
            <summary>Property to return/set the active feature's components collection.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.ActiveFieldName">
            <summary>Property to return/set the field name of the attribute associated with the ActiveANO property.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.ActiveFieldValue">
            <summary>Property to return/set the field value of the attribute associated with the ActiveANO property.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
            <remarks>The DataContext property lets you set up a IGTDataContext object through which you can perform database operations 
            and access published metadata.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.Priority">
            <summary>Property to return/set the error priority of a validation error.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.RelatedANO">
            <summary>Property to return/set the attribute number of the related attribute involved in the validation process.  It is typically used in the AfterEstablish method to copy from the related component (using RelatedANO) to the active component (using ActiveANO).</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.RelatedComponentName">
            <summary>Property to return/set the component name (G3E_COMPONENT.G3E_NAME) of the component associated with the RelatedANO property.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.RelatedComponents">
            <summary>Property to return/set the related feature's components collection.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.RelatedFieldName">
            <summary>Property to return/set the field name of the attribute associated with the RelatedANO property.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRelationshipAttribute.RelatedFieldValue">
            <summary>Property to return/set the field value of the attribute associated with the RelatedANO property.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTRedlineGroup">
            <summary>The Intergraph G/Technology IGTRedlineGroup Interface lets the user group one or more plot redline elements so that certain operations affect all redline elements in the group.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTRedlineGroup.GetRedlineGroupInfo(System.Int32,ADODB.Recordset)">
            <summary>Method to return information necessary to create and position redline elements for all redline groups.  The information is returned in an ADO Recordset.</summary>
            <param name="FirstGroupNumber">The value for the first redline group. This value is incremented for every other redline group created.</param>
            <param name="RedlineGroupInfoRS">Contains the information necessary for building the geometry of the redline elements to be placed.  A field of this recordset
            may contain the geometry of a redline element. If the geometry field is empty, then the plotting software builds the geometry using the information 
            provided in the recordset.</param>
            <returns>Boolean True for success</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRedlineGroup.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTRedlineGroup.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
            <remarks>The DataContext property lets you set up a IGTDataContext object through which you can perform database operations 
            and access published metadata.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTAttributeEditControl">
            <summary>Intergraph G/Technology IGTAttributeEditControl Interface.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTAttributeEditControl.IsAttributeEditable(System.Int32)">
            <summary>Method called to determine whether the attribute (ANO) of the feature component (ComponentName) is editable or not.</summary>
            <remarks>This method returns True if the attribute is editable based on Role or based on the existence or nonexistence of 
            some other values or geometry. Otherwise, it returns False. 
            <para/>
            This method is called after setting all of the properties.</remarks>
            <param name="ANO">Holds the attribute number</param>
            <returns>Boolean</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAttributeEditControl.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAttributeEditControl.ComponentName">
            <summary>Property to return/set the component name (G3E_COMPONENT.G3E_NAME) associated with the ANO passed to the IsAttributeEditable method.  This property is not set in Edit Job or New Job cases.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAttributeEditControl.Components">
            <summary>Property to return/set the components collection of the feature being edited.  This property is not set in Edit Job or New Job cases.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAttributeEditControl.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAttributeEditControl.FieldName">
            <summary>Property to return/set the field name (G3E_ATTRIBUTE.G3E_FIELD) associated with the ANO passed to the IsAttributeEditable method.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAttributeEditControl.FieldValue">
            <summary>Property to return/set the field value of the field specified in the FieldName property.</summary>
            <remarks>This property is useful for determining any action required based on the existence of a particular value.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTForeignKeyQuery">
            <summary>The Intergraph G/Technology IGTForeignKeyQuery Interface provides a custom interface where users can replace 
            the value of a selected attribute with a value based on queries against a foreign or domain table (or foreign system data) 
            and add or edit attributes in other components based on the current or new value of selected attributes.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTForeignKeyQuery.Execute(System.Object)">
            <summary>Method to process the foreign key request.  Successful execution triggers the Attribute Grid control to reflect all changes made during execution.  Success also replaces the value of the selected attribute with the new OutputValue.</summary>
            <remarks>An active connection with job should already be defined before this method is called. The Execute method is responsible for the following:
            <list type="bullet">
            <item>Opening a custom dialog to find the foreign key reference</item>
            <item>Using the current value of the selected attribute to perform various tasks.</item>
            <item>Returning the output value that will be used to replace the value of the selected attribute.</item>
            <item>Updating one or more attributes on any of the components of the current feature.</item>
            <item>Adding or deleting rows to the components of the current feature.</item>
            <item>Performing data or metadata queries if required.</item>
            <item>Returning a success or failure.</item>
            </list>
            The Execute method should contain the code for launching any custom dialog or making updates to 
            one or more attributes on any of the components of the current feature.
            <para/>
            The Execute method should return a success or failure. The success of the execution will trigger 
            the Attribute Grid Control to refresh itself to reflect the changes made during the execution of 
            the Foreign Key Query. The success will also replace the value of the selected attribute with the 
            new output value.</remarks>
            <param name="InputValue">The current value of the selected attribute.</param>
            <returns>Boolean</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTForeignKeyQuery.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTForeignKeyQuery.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTForeignKeyQuery.Feature">
            <summary>Property to return/set the GTKeyObject of the feature.  It is used to add/delete rows or edit attributes in any of the components of the current feature.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTForeignKeyQuery.FieldName">
            <summary>Property to return/set the field name (G3E_ATTRIBUTE.G3E_FOREIGNKEYFIELD or G3E_ATTRIBUTE.G3E_DOMAINFIELD) in the foreign/domain table that is associated with the currently selected attribute.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTForeignKeyQuery.OutputValue">
            <summary>Property to return the new value for the selected attribute.  It is retrieved if Execute is successful.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTForeignKeyQuery.ReadOnly">
            <summary>Property to return/set the flag that indicates the Attribute Grid mode when the interface is called.  A value of True (-1) indicates Review mode; a value of False (0) indicates Edit mode.  OutputValue is ignored in Review mode.</summary>
            <remarks>The attributes must be enabled or disabled on the customized dialog, if one exists, based on the value of this property. Also, in a ReadOnly mode, even though the output value is set, it will not be copied back to the selected attribute.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTForeignKeyQuery.TableName">
            <summary>Property to return/set the Foreign or Domain table name associated with the currently selected attribute.</summary>
            <remarks>The TableName property helps build the reference to the foreign or domain table. The foreign or domain table name is derived from the G3E_ATTRIBUTE.G3E_FOREIGNKEYTABLE or G3E_ATTRIBUTE.G3E_DOMAINTABLE field of the selected attribute.
            <para/>
            The foreign table field G3E_ATTRIBUTE.G3E_FOREIGNKEYTABLE has priority over the domain table field G3E_ATTRIBUTE.G3E_DOMAINTABLE field of the selected attribute.
            <para/>
            The value of this property is null if this interface is invoked through the tab attribute, that is, G3E_TABATTRIBUTE.G3E_FKQRINO is null for the selected attribute.
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTConstructionAid">
            <summary>The Intergraph G/Technology IGTConstructionAid Interface is used to create a construction aid.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTConstructionAid.Abort">
             <summary>Method called to abort the Construction Aid.</summary>
            <remarks>The construction aid should free all pointers and do general cleanup.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTConstructionAid.Initialize">
            <summary>Method called after the Construction Aid is created and its initial property values have been set.</summary>
            <remarks>The construction aid should free all pointers and do general cleanup.</remarks>
            <returns>GTConstructionAidStatusConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTConstructionAid.KeyUp(Intergraph.GTechnology.API.IGTMapWindow,System.Int32,System.Int32)">
             <summary>Method called to pass KeyUp events to the Construction Aid.</summary>
             <remarks>Key-up events, such as F1, normally result in help's being displayed or in points' being removed from the geometry.
             <para/>
            This method is called for all key-up events except when ESC, SHIFT+ESC, or F3 is pressed, as these have special meaning to the placement and edit commands. 
             </remarks>
             <param name="MapWindow">The window the in which the key up occurred.</param>
             <param name="KeyCode">The key that was pressed.</param>
             <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also depressed.  Some, all, or none 
             of these keys may be depressed at the time the mouse click occurred.</param>
             <returns>GTConstructionAidStatusConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTConstructionAid.MouseClick(Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint,System.Int32,System.Int32,Intergraph.GTechnology.API.IGTDDCKeyObjects)">
            <summary>Method called to pass MouseClick events to the Construction Aid.</summary>
            <remarks>This method processes mouse click events, which typically results in points' being appended to the geometry or in locating existing features.
            <para/>
            ShiftState may be any value except ALT. An ALT+left-button click is interpreted as a double click, which is not passed to the construction aid.</remarks>
            <param name="MapWindow">The window the in which the mouse click occurred.</param>
            <param name="UserPoint">The location of the mouse click on the screen, in world coordinates.</param>
            <param name="Button">Denotes which mouse button was depressed when the click occurred.</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also depressed. Some, all, or none of these keys may be depressed at the time the mouse click occurred.</param>
            <param name="LocatedObjects">The collection of existing components that are within tolerance (as specified by the SmartLocatePixelTolerance preference-set value) to the location of the mouse click.</param>
            <returns>GTConstructionAidStatusConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTConstructionAid.MouseMove(Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint,System.Int32,Intergraph.GTechnology.API.IGTDDCKeyObjects)">
            <summary>Method called to pass MouseMove events to the Construction Aid.</summary>
            <remarks>This method is called for all mouse moves, and typically results in dynamics' being drawn from the last point appended to the current mouse location.  ShiftState 
            may be any value.</remarks>
            <param name="MapWindow">The window the in which the mouse move occurred.</param>
            <param name="UserPoint">The location of the mouse pointer on the screen, in world coordinates.</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also depressed. Some, all, or none of these keys may be depressed at the time the mouse move occurred.</param>
            <param name="LocatedObjects">This is a collection of existing components that are within tolerance (as specified by the SmartLocatePixelTolerance preference set value) to the location of the mouse pointer.</param>
            <returns>GTConstructionAidStatusConstants</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTConstructionAid.SetValue(Intergraph.GTechnology.Interfaces.GTConstructionAidFieldNumberConstants,System.Object)">
            <summary>Method called to pass values that have been entered into one of the keyin fields on the Construction Aids Control to the Construction Aid.</summary>
            <param name="FieldNumber">ID that tells the construction aid the type of value and from which key-in field it came.</param>
            <param name="Value">Value that was entered into the field specified by FieldNumber.</param>
            <returns>GTConstructionAidStatusConstants</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTConstructionAid.DynamicsEnabled">
            <summary>Property to tell ConstructionAid whether or not to draw the dynamics between the feature currently being digitized and the geometry that the CA has in dynamics.</summary>
            <remarks>If this property is not set, it should default to True.
            <para/>
            <b>Example:</b>This property is set to False by the RectanglebyTwoPointsIPT placement technique because there is no endpoint from which to draw dynamics.
            <para/>
            When this property is enabled, you must decide whether or not it makes sense to draw a rubber banding line between the reference geometry and the geometry the construction aid is generating.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTConstructionAid.Geometry">
            <summary>Property to return the resulting geometry from the Construction Aid.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTConstructionAid.LengthInDynamics">
            <summary>Property to return the length of the geometry currently in dynamics.  This includes the length of the geometry 
            that would be returned if the construction aid were completed at this time plus the length of the segment needed to connect 
            this geometry to the existing geometry.</summary>
            <remarks>This property may be implemented to always return zero, but this decision should be made based on whether or not 
            the customer uses placement techniques that require this value, such as CableAndComponentIPT and ComponentLengthLabelIPT.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTConstructionAid.ReferenceGeometry">
            <summary>Property to set geometry currently being digitized.  Typically (but not always), the CA's result is appended to this geometry.  Sometimes the CA may use it to determine its result.  E.g., orthogonal uses it to determine what it should be orthogonal to.</summary>
            <remarks>This property must be set before calling the Initialize method.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTConstructionAid.ReferenceStyleID">
            <summary>Property to set the style id of the geometry being digitized.  This StyleID can be used with the IGTGeometryEditService and IGTGeometryCreationService for displaying geometry with an appropriate style.</summary>
            <remarks>This property must be set before calling the Initialize Method.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTConstructionAid.ValueMask">
            <summary>Property to return a mask of the value IDs that the Construction Aid will recognize in SetValue.</summary>
            <remarks>This property uses GTConstructionAidFieldConstants to specify which key-in controls that the Construction Aids control should enable and what type of values each input field should accept.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTCreateMarker">
            <summary>The Intergraph G/Technology IGTCreateMarker Interface is used to place markers at specified marker location points.</summary>
            <remarks>In desktop environments, markers can be placed as temporary geometry, as a component of a feature, or as a new feature.  In NET environments 
            the markers can be placed as redlines.  In either type of environment, the Create Marker function can be replaced with a custom implementation. 
            For example, you can write the marker information into the database for historical reasons.    
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTCreateMarker.Create(ADODB.Recordset,System.String)">
            <summary>Method to create markers at the specified coordinates.</summary>
            <remarks>The Create method should create the markers using whatever method for drawing geometries best meets the requirements for each specific implementation.</remarks>
            <param name="CoordinateRecordset">The recordset containing the coordinate locations at which to create the marker geometries.</param>
            <param name="QueryName">Name of the query to use.</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTCreateMarker.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTCreateMarker.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTTemporaryGeometryPlacement">
            <summary>The Intergraph G/Technology IGTTemporaryGeometryPlacement Interface communicates with the New Temporary Geometry command through the IGTTemporaryGeometryPlacementHelper object.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTTemporaryGeometryPlacement.StartPlacement(Intergraph.GTechnology.API.IGTTemporaryGeometryPlacementHelper,Intergraph.GTechnology.API.IGTGeometryCreationService)">
            <summary>Method to initialize the temporary geometry placement.</summary>
            <param name="PlacementHelper">Reference to IGTTemporaryGeometryPlacementHelper object that communicates with the calling software component.</param>
            <param name="GeometryCreationService">Reference to the IGTGeometryCreationService to be used to render the temporary geometry and to return constructed temporary geometry to the calling software 
            component, so that they can be added to the legend. The TargetMapWindow property of GTGeometryCreationService references the currently active map window.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTTemporaryGeometryPlacement.AbortPlacement">
            <summary>Method to terminate the temporary geometry placement.</summary>
            <remarks>The AbortPlacement method is called after the user presses ESC while the temporary geometry placement is in progress. It is also called when the user interrupts the New Temporary Placement command by invoking another command.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTTemporaryGeometryPlacement.MouseClick(Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint,System.Int32,System.Int32,Intergraph.GTechnology.API.IGTDDCKeyObjects)">
            <summary>Method to process a mouse click event received on the input IGTMapWindow.</summary>
            <remarks>ShiftState may be any value except ALT. An ALT + left-button click is interpreted as a double click and is be sent to the MouseDblClick method instead.</remarks>
            <param name="MapWindow">The window in which the mouse click occurred.</param>
            <param name="UserPoint">The location in world coordinates of the mouse click on the screen, snapped based on the workspace settings.</param>
            <param name="Button">Denotes which mouse button was pressed when the click occurred.</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also pressed. Some, all, or none of these keys may be pressed at the time the mouse click occurred.</param>
            <param name="LocatedObjects">This is a collection of existing components that are within tolerance (as specified by the SmartLocatePixelTolerance preference set value) to the location of the mouse click.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTTemporaryGeometryPlacement.MouseDblClick(Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint,System.Int32,Intergraph.GTechnology.API.IGTDDCKeyObjects)">
            <summary>Method to process a mouse double-click event received on the input IGTMapWindow.</summary>
            <remarks>In addition to left double clicks, this method can be called for ALT + left-button click.</remarks>
            <param name="MapWindow">The window in which the mouse double click occurred.</param>
            <param name="UserPoint">The location in world coordinates of the mouse double click on the screen, snapped based on the workspace settings.</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also pressed. Some, all, or none of these keys may be pressed at the time the mouse double click occurred.</param>
            <param name="LocatedObjects">This is a collection of existing components that are within tolerance (as specified by the SmartLocatePixelTolerance preference set value) to the location of the mouse double click.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTTemporaryGeometryPlacement.MouseMove(Intergraph.GTechnology.API.IGTMapWindow,Intergraph.GTechnology.API.IGTPoint,System.Int32,Intergraph.GTechnology.API.IGTDDCKeyObjects)">
            <summary>Method to process a mouse move event received on the input IGTMapWindow.</summary>
            <param name="MapWindow">The window in which the mouse double click occurred.</param>
            <param name="UserPoint">The location in world coordinates of the mouse on the screen. UserPoint is snapped when the user hovers the mouse over the same location on the map during the time Select Tool needs to highlight a component.</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also pressed. Some, all, or none of these keys may be pressed at the time the mouse move occurred.</param>
            <param name="LocatedObjects">While the user moves the mouse, LocatedObjects is Nothing. Once the user hovers the mouse over the same location on the map during time Select Tool needs to highlight a geometry, LocatedObjects is populated 
            with a collection of existing components, which are within tolerance (as specified by the SmartLocatePixelTolerance preference set value) to the location of the mouse.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTTemporaryGeometryPlacement.KeyUp(Intergraph.GTechnology.API.IGTMapWindow,System.Int32@,System.Int32)">
            <summary>Method to process a key-up event received on the input IGTMapWindow.</summary>
            <remarks>ESC key-up events are not passed to the interface. The calling software component processes those events and calls AbortPlacement on the interface.
            <para/>
            The interface is responsible for handling Backspace key-up events. If the user backspaces into an arc in a composite polyline or composite polygon, remove the complete arc at once because leaving an unfinished arc in the GTGeometryCreationService does not automatically switch on the Arc construction aid.</remarks>
            <param name="MapWindow">The window in which the key up occurred.</param>
            <param name="KeyCode">The key that was pressed.</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also pressed. Some, all, or none of these keys may be pressed at the time the key up occurred.</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTTemporaryGeometryPlacement.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTCustomPlot">
            <summary>The Intergraph G/Technology IGTCustomPlot Interface provides a custom processing of remote plots.  The custom
            interface is invoked by the NetPlot Application Service if the plot request specifies to do so.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTCustomPlot.InitializePlot">
            <summary>Method to initialize the custom plot object.  The InitializePlot method is called on the custom plot object
            immediately after the plot template has been copied and a new window created for it.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTCustomPlot.PlotPrepared(Intergraph.GTechnology.API.IGTPrintProperties)">
            <summary>Method to set the print properties before printing a plot.</summary>
            <remarks>
            The plot server retrieves the value of the PrinterName property before calling this method, and requests the set of 
            supported paper sizes from that printer. If a paper size is specified in the plot request, that size will be stored in 
            IGTPrintProperties. Otherwise, the plot server determines the paper size supported by the printer that matches, within 
            ISO-specified tolerances, the plot sheet size of the plot. That paper size will be stored in the IGTPrintProperties object 
            passed to PlotPrepared. If no paper size matches the plot sheet size, the printer's default paper size will be used.
            <para/>
            The custom object can alter the values of any properties of the IGTPrintProperties object, including the paper size; and 
            those new values will be used in generating the plot. However, changing the paper size does not affect the plot-sheet 
            size; it affects only the size of paper upon which the plot is printed. Custom plot objects may want to "best fit" the 
            printer's paper sizes to the plot sheet, for example.
            </remarks>
            <param name="PrintProperties">On input, this object contains the printer paper size specified in the plot request or 
            determined by the plot server. The Orientation is set according to the dimensions of the plot sheet relative to the 
            chosen paper size. The Copies property is set according to the plot request parameters.</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTCustomPlot.Arguments">
            <summary>Property to return/set the arguments specified by the remote plot request for the IGTCustomPlot.</summary>
            <remarks>This property is set immediately after the IGTCustomPlot Interface is created and before any methods are called.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTCustomPlot.DataContext">
            <summary>Property to return/set the IGTDataContext object on the IGTCustomPlot object.</summary>
            <remarks>This property grants the custom plot object access to the database and published metadata. This will 
            be the IGTDataContext for the connection that was specified when the plot was created. This IGTDataContext could 
            be used, for example, to access the styles used by redline elements in the IGTNamedPlot object.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTCustomPlot.PlotWindow">
            <summary>Property to return/set the IGTPlotWindow for the plot to be produced.</summary>
            <remarks>From this object, the IGTCustomPlot Interface can retrieve the NamedPlot property to access 
            the plot object. Access to the plot window also allows the IGTCustomPlot Interface to insert new maps 
            or embedded objects.  This property is set immediately after the IGTCustomPlot Interface is created and 
            before any methods are called.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTCustomPlot.PrinterName">
            <summary>Property to return/set the name of the output device specified in the plot request.</summary>
            <remarks>This property is set immediately after the IGTCustomPlot Interface is created and before any methods are called.
            <para/>
            If the custom plot object wants to alter the output destination, it should return that destination as the value of this property.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTFeatureValidation">
            <summary>The Intergraph G/Technology IGTFeatureValidation Interface allows the writing of custom validation software to look for conditions
            that should prevent data from being saved to the database.  Examples of these conditions include:
            <list type="bullet">
            <item>All required components have not been digitized.</item>
            <item>All required attributes have not been populated.</item>
            </list>
            The interface has full control over which conditions should be validated and what priority should be assigned to each validation failure. The 
            interface returns a success or failure status, which determines whether the data can be saved, and the validation errors that are found.
            <para/>
            The New Feature and Edit Feature commands have been modified to call this interface prior to saving edits. If the validation interface returns 
            a failing status, both commands will prevent the edits from being saved to the database until the errors have been corrected. When validation 
            fails, the commands will do the following:
            <list type="bullet">
            <item>Remain Active.</item>
            <item>Display the validation errors using the Recordset Review Control.</item>
            <item>Keep the transaction intact and running so that the user can correct the errors and try again to save the edits.</item>
            </list>
            </summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTFeatureValidation.Validate(Intergraph.GTechnology.API.IGTKeyObjects,ADODB.Recordset)">
            <summary>Method to validate the features in the Features collection and record any validation errors in the ValidationErrors recordset.</summary>
            <remarks>If this function finds a validation error that should prevent the features from being saved, the function should return a value of False. If 
            it finds no validation errors that should prevent the features from being saved, this function should return a value of True.
            <para/>
            When called from New Feature or Edit Feature, the Features collection will not contain any features that were related to the input Features as part of 
            the placement or edit operation. The validation interface can access related features by calling the IGTRelationshipService.GetRelatedFeatures method for 
            each RNO they are interested in. This method will return the features related to the active features as a result of the current placement or edit 
            operation. However, it may also return related features that were edited in a previous transaction.
            <para/>
            If validation errors are recorded in the ValidationErrors recordset, but the function returns a status of True (meaning the data can be saved to the 
            database), the errors in the ValidationErrors recordset will be ignored and will not be displayed.
            <para/>
            If there are no validation errors recorded in the ValidationErrors recordset, and the function returns a status of False (meaning the data should not 
            be saved to the database), the command assumes that the validation interface displayed the errors to the user. The command will not attempt to display 
            the validation errors, but it will prevent the save.
            <para/>
            If the Validate function returns a failing status, you may want to alert the user that validation failed by some means, such as displaying a message 
            box, beeping at the user, or putting a message in the status bar.
            <para/>
            You may use the IGTHelperService.RunReport or IGTHelperService.DisplayHTML methods to display the validation errors in the Web browser. If the errors 
            are displayed by the interface, no errors should be returned in the ValidationErrors recordset. This will prevent the placement or edit command from 
            also displaying the errors.
            <para/>
            The G3E_CNO and G3E_CID fields of the ValidationErrors recordset are not displayed if the placement or edit command displays the errors using the 
            Recordset Review Control.
            <para/>
            The Validate function can perform different types of validation depending on the value of the ProcessingMode. For example, more stringent validation 
            may be done when the user is placing a feature as opposed to editing it.
            <para/>
            The Validate function can perform different types of validation depending on the role granted to the user. The function can use the IGTDataContext.IsRoleGranted 
            function or send in a role through the ArgumentArray to determine the type of validation to perform.
            <para/>
            The New Feature and Edit Feature commands call this interface prior to committing the data to the database. This means that triggers and Update functional 
            interfaces have not been fired at the time that the interface is called. Therefore, the interface should not attempt to validate data that will be populated 
            by triggers or Update functional interfaces.
            <para/>
            The Validate function can determine whether an attribute has an Update functional interface defined for it by checking the G3E_ATTRIBUTEINFO_OPTABLE. If the G3E_FUNCTIONALTYPE 
            field is set to 'Update, this attribute has an Update functional interfaced defined for it and should not be validated by the interface.
            <para/>
            This interface can be called from a desktop or field application. Keep in mind that the external systems and reference tables available to the desktop application may not be 
            available to the field application. These external systems and reference tables should not be accessed when used in a field application. The IGTDataContext.Type property can 
            be used to determine if a field application is in use. When the application is connected to a field database, the value of this property will be gtdccField (4).
            <para/>
            If the custom validation interface encounters an unexpected problem and raises an error, the New Feature and Edit Feature commands will display the error message to the user 
            and prevent the feature from being saved. This scenario is expected to occur mostly during the development of the interface.
            </remarks>
            <param name="Features">The IGTKeyObjects collection that is to be validated.  When called from the Edit Feature command, the collection will contain a single IGTKeyObject for 
            the feature selected for edit. When called from the New Feature command, the collection will consist of one IGTKeyObject if an individual feature was selected for placement 
            or a IGTKeyObject for each feature instance defined to be placed as part of the configuration if a placement configuration was selected.</param>
            <param name="ValidationErrors">The recordset of validation errors found and returned by this function.  The recordset should be created by the caller and sent to this 
            function. The Validate function can add a row to this recordset for each validation error it finds.</param>
            <returns>Boolean</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTFeatureValidation.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTFeatureValidation.DataContext">
            <summary>Property to return/set the IGTDataContext object used by the Validate method of this interface.  It is used 
            to grant the interface access to the database and published metadata.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTFeatureValidation.ProcessingMode">
            <summary>Property to return/set the mode that determines the context in which the IGTFeatureValidation interface is being called.</summary>
            <remarks>
            If being called from the New Feature command, set this property to "Placement" when placing a feature, or to the G3E_PCNO of the 
            placement configuration when placing a placement configuration. If being called from the Edit Feature command, set this property 
            to "Edit."
            <para/>
            The Validate method can use this property to perform different types of validation depending on the context in which it is called.
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTDisableEditTool">
            <summary>The Intergraph G/Technology IGTDisableEditTool Interface allows the disabling of Edit Tool buttons based on any set criteria, such
            as user role or items selected.</summary>
            <remarks>This disabling of Edit Tool buttons is in addition to the normal disabling of the Edit Tool command.  Custom implementations of the 
            interface cannot change the contents of the select set.
            <para/>
            <b>Note:  </b>While this interface can disable buttons that have been enabled by the Edit
            Tool, it cannot enable buttons that have been disabled by the Edit Tool.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTDisableEditTool.Initialize">
            <summary>Method to process select set and perform other initializations.  The Initialize Method is called by the Edit Tool command after 
            the Edit Tool does its own enable/disable logic of the buttons.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTDisableEditTool.ButtonEnabled(Intergraph.GTechnology.Interfaces.GTEditToolButtonConstants)">
            <summary>Method takes a button constant as input and returns True or False. If False then the associated button is disabled.</summary>
            <param name="Button">The button to disable or keep enabled.</param>
            <returns>Boolean</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTDisableEditTool.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter">
            <summary>Intergraph G/Technology IGTAnalysisFormatter Interface.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.ExecuteTrace">
            <summary>
            Method to execute the trace.
            </summary>
            <returns>Executed trace id.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.BuildNetworks(System.String)">
            <summary>
            Method which extracts the network from the executed trace.
            </summary>
            <param name="sql">SQL query to retrieve the records of the executed trace.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.GenerateOutput">
            <summary>
            Method to generate output in specific format based on the analysis package defined and extracted analysis data for the traced network.
            </summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.SaveNetworkAndAnalysisDataToXML(System.String)">
            <summary>
            Method to save the extracted network and analysis data into an XML file.
            </summary>
            <param name="xmlFilename">XML filename</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.SaveNetworkDataToXML(System.String)">
            <summary>
            Method to save the network data in an XML file.
            </summary>
            <param name="xmlFilename">XML filename.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.ConstructTracedNetworkFromXML(System.String)">
            <summary>
            Validates the network data stored in XML file and constructs the network from XML file. 
            </summary>
            <param name="xmlFileName">XML filename which contains the extracted network data.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.LogMessage(System.String)">
            <summary>
            Method to log messages.
            </summary>
            <param name="sMsg">Message</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.DataContext">
            <summary>
            Property to return/set the IGTDataContext object.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.TraceName">
            <summary>
            Property to return/set the trace name.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.TraceID">
            <summary>
            Property to return/set the trace id.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.TraceNO">
            <summary>
            Property to return/set the trace number.
            </summary>
            <remarks>	It represents G3E_TRACEID field in G3E_TraceMapping_Optable used in getting G3E_RNO for defining the trace. It does not represent the traceID returned after executing the trace.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.SeedFeature">
            <summary>
            Property to return/set the seed feature.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.HintFeature">
            <summary>
            Property to return/set the hint feature.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.GoalFeature">
            <summary>
            Property to return/set the goal feature.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.StopCriteria">
            <summary>
            Property to return/set the stop criteria.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.FilterCriteria">
            <summary>
            Property to return/set the filter criteria.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.TracePathCost">
            <summary>
            Property to return/set the trace path cost criteria.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.PackageName">
            <summary>
            Property to return/set analysis package name
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAnalysisFormatter.Output">
            <summary>
            Property to return/set output path of the generated file.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSchematicElement">
            <summary>
            Intergraph G/Technology IGTSchematicElement API.
            </summary>
            <remarks>
            Represents a schematic element.
            A IGTSchematicElement represents a single network 
            element in the schematic, along with its primary and alternate component view data. It also 
            provides the ability to specify the style, labels, or tooltip to be used for the element. If specified, 
            those values override the computation of style, label, or tooltip by IGTSchematicGeneratorService.Append.
            <para/>
            The Generate method can optionally be called by the IGTAugmentNetworkAttribution implementation to force 
            the computation of styles, labels, and tooltips based on the current contents of the Primary and Alternate 
            properties. The intent is that the IGTAugmentNetworkAttribution implementation first modifies the primary 
            and alternate data, if needed, to achieve the proper data for the computation of styles, labels, and tooltips. Then 
            the implementation can override any of the computed information. This is particularly useful in manipulating labels. For 
            example, the implementation can override just the style of one or more of the generated labels.
            <para/>
            If Generate is not called by the IGTAugmentNetworkAttribution implementation for a particular network element, IGTSchematicGeneratorService.Append 
            will compute the styles, labels, and tooltips after IGTAugmentNetworkAttribution.Execute returns.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicElement.Generate">
            <summary>
            Computes the style, labels and tool tip of an element.
            </summary>
            <remarks>This method may be called only once for a given element.
            <para/>Before calling the Generate method, the caller must make sure that 
            the Primary and Alternate properties contain the required data to be used 
            for symbology and the geometry of the element.
            <para/>If there is at least one element in the Primary collection, the first 
            element of that collection will be used to provide the geometry and symbology. Otherwise, the 
            first element of the Alternate collection will be used.
            <para/>If neither Primary nor Alternate contain data instances, the style is set to the default 
            style in metadata, and no tooltip is computed. If there are no data instances in the Primary or 
            Alternate collections of a IGTSchematicLabel, no label is generated.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.Alternate">
            <summary>
            Gets the alternate component view data instances of an element.
            </summary>
            <remarks>There is one item in this collection for each record found 
            in the alternate component view whose G3E_FID matches the G3E_FID in 
            the network recordset. If there are no matching records, the collection 
            is empty.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.Arrange">
            <summary>
            Gets or sets the arrangement of an element.
            </summary>
            <remarks>The arrangement constrains the Layout method in positioning the element. In 
            the current release of G/Technology, only gtsaOriented is supported.
            <para/>If the Generate method has been called, this property will be populated with the 
            arrangement computed from metadata and the component view data in Primary or Alternate.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.ColorOverride">
            <summary>
            Gets or set the color override of an element.
            </summary>
            <remarks>If this property is never set, any override is inherited from higher levels of
            the XML document. For example, ColorOverride can be applied to an entire network in the XML.
            <para/>
            This property is not set by the Generate method.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.Index">
            <summary>
            Gets the zero-based index of an element within an IGTSchematicElements collection.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.Labels">
            <summary>
            Gets the collection of labels of an element.
            </summary>
            <remarks>If Generate is called by the IGTAugmentNetworkAttribution implementation, this 
            collection will be populated with the generated labels based on metadata. The implementation 
            can then modify any information in the collection to override the text, style, or tooltip for 
            a label. It can also add new labels to or delete any unwanted labels from the collection.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.NetworkAttributes">
            <summary>
            Gets the collection of network attributes of an element.
            </summary>
            <remarks>The network recordset typically contains the G3E_FNO and G3E_FID fields plus the connectivity 
            information (for example, G3E_NODE1, G3E_NODE2) if the recordset was the result of a trace.
            <para/>Although IGTSchematicAttributes has an Add method, the collection returned by NetworkAttributes 
            does not allow new attributes to be added. This collection is limited to the fields contained in the 
            original network recordset passed to the Append method of <see cref="T:Intergraph.GTechnology.API.IGTSchematicGeneratorService">IGTSchematicGeneratorService</see>.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.Primary">
            <summary>
            Gets the primary component view data instances.
            </summary>
            <remarks>There is one item in this collection for each record found in the primary 
            component view whose G3E_FID matches the G3E_FID in the network recordset.
            <para/>If there are no matching records, the collection is empty.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.Rotatable">
            <summary>
            Gets or sets whether an element can be rotated.
            </summary>
            <remarks>This property is valid only for nodes; setting this property for an edge element raises an exception.
            <para/>
            This property is not set by the Generate method.
            <para/>The default for all nodes is True.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.SizeOverride">
            <summary>
            Gets or sets the size override of an element.
            </summary>
            <remarks>This property can be set only for an element representing a schematic 
            node. Edges do not allow a size override.
            <para/>
            This property is not set by the Generate method.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.StyleID">
            <summary>
            Gets or sets the style identifier of an element.
            </summary>
            <remarks>Upon return from Execute, if this property is not Null for a schematic element, the 
            value must be a valid G3E_SNO value and will be used as the style ID for that schematic element.
            <para/>If the Generate method has been called, this property will be populated with the style computed 
            from metadata and the component view data in Primary or Alternate.
            <para/>If there is no component view data in either Primary or Alternate, the style is set to the default 
            style specified for this feature class in G3E_SCHEMATICSYMBOLOGY.G3E_DEFAULTSNO.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElement.ToolTip">
            <summary>
            Gets or sets the tool tip of an element.
            </summary>
            <remarks>If the Generate method has been called, this property will be populated with the tooltip computed 
            from metadata and the component view data in Primary or Alternate.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPolylineGeometry">
            <summary>Intergraph G/Technology IGTPolylineGeometry API.</summary>
            <remarks>
            IGTPolylineGeometry represents a multi-point line string.
            The collection of points is a IGTPoints object and is automatically created when the IGTPolylineGeometry is created. It is stored in the Points property. 
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPolylineGeometry.Points">
            <summary>
            Returns the collection of points in the polyline.  The order of the points
            in the collection is the order that they are drawn in the line.
            <para/>
            Note that the returned collection indirectly references this IGTPolylineGeometry.
            If you modify that collection, the polyline is modified.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPolygonGeometry">
            <summary>Intergraph G/Technology IGTPolygonGeometry API.</summary>
            <remarks>
            GTPolygonGeometry represents a multi-point polygon.  The first and last point of
            the polygon must have the same coordinates.  If the boundary of a polygon crosses
            itself, the behavior is undefined.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPolygonGeometry.Contains(Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            The Contains function determines whether a point is inside this polygon.
            </summary>
            <remarks>
            Returns gtiptOutside if the point is outside the polygon, gtiptOnPolygon if on the polygon, and gtiptInside if it is in
            the polygon.
            </remarks>
            <param name="point">IGTPoint used to determined whether it is inside or outside of the polygon.</param>
            <returns>GTInPolygonType</returns>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTHighlightedObjects">
            <summary>Intergraph G/Technology IGTHighlightedObjects API.</summary>
            <remarks>
            IGTHighlightedObjects collects IGTDDCKeyObject objects. This collection identifies features or components that are highlighted in the IGTMapWindow. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHighlightedObjects.AddSingle(Intergraph.GTechnology.API.IGTDDCKeyObject)">
            <summary>Method to add a single item to the set of highlighted objects.</summary>
            <param name="DDCKeyObject">The DDC key object of the component view selected by the user for the feature to add to the highlighted objects collection.</param>
            <remarks>Use this method to add a component to the highlighted objects collection to have it highlighted in the IGTMapWindow.</remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when DDCKeyObject is Null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHighlightedObjects.AddMultiple(Intergraph.GTechnology.API.IGTDDCKeyObjects)">
            <summary>Method to add multiple items to the set of highlighted objects.</summary>
            <param name="DDCKeyObjects">The key object of the component view of the feature to add to the highlighted objects collection.</param>
            <remarks>Use this method to add more than one component view for a feature to the highlighted objects collection to have them highlighted in the IGTMapWindow.</remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when DDCKeyObject is Null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHighlightedObjects.Clear">
            <summary>Method to clear the set of highlighted objects.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHighlightedObjects.Remove(Intergraph.GTechnology.API.IGTDDCKeyObject)">
            <summary>Method to remove an item from the set of highlighted objects.</summary>
            <param name="DDCKeyObject">The key object of the feature to remove from the highlighted objects collection.</param>
            <remarks>Use this method to remove a feature from the highlighted objects collection.</remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when DDCKeyObject is Null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHighlightedObjects.GetRange">
            <summary>Method to return the range of the set of highlighted objects.</summary>
            <returns>IGTWorldRange</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTHighlightedObjects.IsHighlighted(Intergraph.GTechnology.API.IGTDDCKeyObject)">
            <summary>Method to return whether an item is highlighted.</summary>
            <param name="DDCKeyObject">The key of the component view of a feature to check for in the IGTHighlightedObjects collection.</param>
            <remarks>Use this method to determine whether a component is highlighted.</remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when DDCKeyObject is Null.</exception>
            <returns>bool</returns>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTDisplayService">
            <summary>Intergraph G/Technology IGTDisplayService API.</summary>
            <remarks>The IGTDisplayService object lets you:
            <list type="bullet">
            <item>Append and remove queries and temporary geometries from the Display Control.</item>
            <item>Retrieve the bounding range for the display item.</item>
            <item>Replace the legend on a map window.</item>
            <item>Attach the following file types to a map window or plotting map frame:
            <list type="number">
            <item>Redlines (XML)</item>
            <item>Raster (all types currently supported)</item>
            <item>Native CAD (DGN, DWG)</item>
            </list>
            </item>
            </list>
            The IGTDisplayService is retrieved from a IGTMapWindow or IGTPlotMap object. Each of the IGTDisplayService 
            methods operates on that map window or plot map.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendQuery(System.String,System.String,ADODB.Recordset)">
            <summary>Method to append a query to the map associated with this service.
            <para/>A legend item containing the query is added to the Display Control for subsequent manipulation or removal. 
            <para/>This query is not saved in the G/Technology workspace when the user runs the Save or the Save As command. 
            </summary>
            <param name="DisplayPathName">The root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">The name of the item to add to the Display Control.</param>
            <param name="Recordset">Recordset containing the results of a query to be displayed.</param>
            <remarks>Default values null, true, true, true, true, gtdsdsUseMetadata and gtdsdpFront are used for SymbologyOverrides, ExcludeSecondaryGraphics, ExcludeNonLegendGraphics, DisplayMode, LocateMode, DisplayScaleMode, DisplayPosition.
            <para/>In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Queries" &amp; vbTab &amp; "MyQueries"</item>
            <item>DisplayName = "MyQuery1"</item>
            </list>
            <para/>This would yield a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Queries
            <list type="bullet"><item>MyQueries
            <list type="bullet"><item>MyQuery1</item>
            </list></item></list></item></list>
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendQuery(System.String,System.String,ADODB.Recordset,Intergraph.GTechnology.API.IGTSymbology)">
            <summary>Method to append a query to the map associated with this service.
            <para/>A legend item containing the query is added to the Display Control for subsequent manipulation or removal. 
            <para/>This query is not saved in the G/Technology workspace when the user runs the Save or the Save As command. 
            </summary>
            <param name="DisplayPathName">The root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">The name of the item to add to the Display Control.</param>
            <param name="Recordset">Recordset containing the results of a query to be displayed.</param>
            <param name="SymbologyOverrides">The symbology information for displaying the query results.</param>
            <remarks>Default values true, true, true, true, gtdsdsUseMetadata and gtdsdpFront are used for ExcludeSecondaryGraphics, ExcludeNonLegendGraphics, DisplayMode, LocateMode, DisplayScaleMode, DisplayPosition.
            <para/>In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Queries" &amp; vbTab &amp; "MyQueries"</item>
            <item>DisplayName = "MyQuery1"</item>
            </list>
            <para/>This would yield a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Queries
            <list type="bullet"><item>MyQueries
            <list type="bullet"><item>MyQuery1</item>
            </list></item></list></item></list>
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendQuery(System.String,System.String,ADODB.Recordset,Intergraph.GTechnology.API.IGTSymbology,System.Boolean)">
            <summary>Method to append a query to the map associated with this service.
            <para/>A legend item containing the query is added to the Display Control for subsequent manipulation or removal. 
            <para/>This query is not saved in the G/Technology workspace when the user runs the Save or the Save As command. 
            </summary>
            <param name="DisplayPathName">The root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">The name of the item to add to the Display Control.</param>
            <param name="Recordset">Recordset containing the results of a query to be displayed.</param>
            <param name="SymbologyOverrides">The symbology information for displaying the query results.</param>
            <param name="ExcludeSecondaryGraphics">If True (the default), only primary graphics are displayed. If False all graphic components in the legend are displayed.</param>
            <remarks>Default values true, true, true, gtdsdsUseMetadata and gtdsdpFront are used for ExcludeNonLegendGraphics, DisplayMode, LocateMode, DisplayScaleMode, DisplayPosition.
            <para/>In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Queries" &amp; vbTab &amp; "MyQueries"</item>
            <item>DisplayName = "MyQuery1"</item>
            </list>
            <para/>This would yield a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Queries
            <list type="bullet"><item>MyQueries
            <list type="bullet"><item>MyQuery1</item>
            </list></item></list></item></list>
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendQuery(System.String,System.String,ADODB.Recordset,Intergraph.GTechnology.API.IGTSymbology,System.Boolean,System.Boolean)">
            <summary>Method to append a query to the map associated with this service.
            <para/>A legend item containing the query is added to the Display Control for subsequent manipulation or removal. 
            <para/>This query is not saved in the G/Technology workspace when the user runs the Save or the Save As command. 
            </summary>
            <param name="DisplayName">The name of the item to add to the Display Control.</param>
            <param name="DisplayPathName">The root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="Recordset">Recordset containing the results of a query to be displayed.</param>
            <param name="SymbologyOverrides">The symbology information for displaying the query results.</param>
            <param name="ExcludeSecondaryGraphics">If True (the default), only primary graphics are displayed. If False all graphic components in the legend are displayed.</param>
            <param name="ExcludeNonLegendGraphics">If True (the default), only graphic components associated with the legend are displayed. If False, all components are included.</param>
            <remarks>Default values true, true, gtdsdsUseMetadata and gtdsdpFront are used for DisplayMode, LocateMode, DisplayScaleMode, DisplayPosition.
            <para/>In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Queries" &amp; vbTab &amp; "MyQueries"</item>
            <item>DisplayName = "MyQuery1"</item>
            </list>
            <para/>This would yield a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Queries
            <list type="bullet"><item>MyQueries
            <list type="bullet"><item>MyQuery1</item>
            </list></item></list></item></list>
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendQuery(System.String,System.String,ADODB.Recordset,Intergraph.GTechnology.API.IGTSymbology,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Method to append a query to the map associated with this service.
            <para/>A legend item containing the query is added to the Display Control for subsequent manipulation or removal. 
            <para/>This query is not saved in the G/Technology workspace when the user runs the Save or the Save As command. 
            </summary>
            <param name="DisplayPathName">The root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">The name of the item to add to the Display Control.</param>
            <param name="Recordset">Recordset containing the results of a query to be displayed.</param>
            <param name="SymbologyOverrides">The symbology information for displaying the query results.</param>
            <param name="ExcludeSecondaryGraphics">If True (the default), only primary graphics are displayed. If False all graphic components in the legend are displayed.</param>
            <param name="ExcludeNonLegendGraphics">If True (the default), only graphic components associated with the legend are displayed. If False, all components are included.</param>
            <param name="DisplayMode">Specifies whether the query is initially displayed. This influences the check box on the GUI. The default is True.</param>
            <remarks>Default values true, gtdsdsUseMetadata and gtdsdpFront are used for LocateMode, DisplayScaleMode, DisplayPosition.
            <para/>In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Queries" &amp; vbTab &amp; "MyQueries"</item>
            <item>DisplayName = "MyQuery1"</item>
            </list>
            <para/>This would yield a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Queries
            <list type="bullet"><item>MyQueries
            <list type="bullet"><item>MyQuery1</item>
            </list></item></list></item></list>
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendQuery(System.String,System.String,ADODB.Recordset,Intergraph.GTechnology.API.IGTSymbology,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Method to append a query to the map associated with this service.
            <para/>A legend item containing the query is added to the Display Control for subsequent manipulation or removal. 
            <para/>This query is not saved in the G/Technology workspace when the user runs the Save or the Save As command. 
            </summary>
            <param name="DisplayPathName">The root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">The name of the item to add to the Display Control.</param>
            <param name="Recordset">Recordset containing the results of a query to be displayed.</param>
            <param name="SymbologyOverrides">The symbology information for displaying the query results.</param>
            <param name="ExcludeSecondaryGraphics">If True (the default), only primary graphics are displayed. If False all graphic components in the legend are displayed.</param>
            <param name="ExcludeNonLegendGraphics">If True (the default), only graphic components associated with the legend are displayed. If False, all components are included.</param>
            <param name="DisplayMode">Specifies whether the query is initially displayed. This influences the check box on the GUI. The default is True.</param>
            <param name="LocateMode">Specifies whether the query is initially locatable. This influences the check box on the GUI. The default is True.</param>
            <remarks>Default values gtdsdsUseMetadata and gtdsdpFront are used for DisplayScaleMode, DisplayPosition.
            <para/>In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Queries" &amp; vbTab &amp; "MyQueries"</item>
            <item>DisplayName = "MyQuery1"</item>
            </list>
            <para/>This would yield a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Queries
            <list type="bullet"><item>MyQueries
            <list type="bullet"><item>MyQuery1</item>
            </list></item></list></item></list>
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendQuery(System.String,System.String,ADODB.Recordset,Intergraph.GTechnology.API.IGTSymbology,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Intergraph.GTechnology.API.GTDisplayScaleModeConstants)">
            <summary>Method to append a query to the map associated with this service.
            <para/>A legend item containing the query is added to the Display Control for subsequent manipulation or removal. 
            <para/>This query is not saved in the G/Technology workspace when the user runs the Save or the Save As command. 
            </summary>
            <param name="DisplayPathName">The root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">The name of the item to add to the Display Control.</param>
            <param name="Recordset">Recordset containing the results of a query to be displayed.</param>
            <param name="SymbologyOverrides">The symbology information for displaying the query results.</param>
            <param name="ExcludeSecondaryGraphics">If True (the default), only primary graphics are displayed. If False all graphic components in the legend are displayed.</param>
            <param name="ExcludeNonLegendGraphics">If True (the default), only graphic components associated with the legend are displayed. If False, all components are included.</param>
            <param name="DisplayMode">Specifies whether the query is initially displayed. This influences the check box on the GUI. The default is True.</param>
            <param name="LocateMode">Specifies whether the query is initially locatable. This influences the check box on the GUI. The default is True.</param>
            <param name="DisplayScaleMode">Specifies whether the query reacts to the display scale. This influences the check box on the GUI. The default is gtdsdsUseMetadata.</param>
            <remarks>Default value gtdsdpFront is used for DisplayPosition.
            <para/>In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Queries" &amp; vbTab &amp; "MyQueries"</item>
            <item>DisplayName = "MyQuery1"</item>
            </list>
            <para/>This would yield a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Queries
            <list type="bullet"><item>MyQueries
            <list type="bullet"><item>MyQuery1</item>
            </list></item></list></item></list>
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendQuery(System.String,System.String,ADODB.Recordset,Intergraph.GTechnology.API.IGTSymbology,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Intergraph.GTechnology.API.GTDisplayScaleModeConstants,Intergraph.GTechnology.API.GTDisplayPositionConstants)">
            <summary>Method to append a query to the map associated with this service.
            <para/>A legend item containing the query is added to the Display Control for subsequent manipulation or removal. 
            <para/>This query is not saved in the G/Technology workspace when the user runs the Save or the Save As command. 
            </summary>
            <param name="DisplayPathName">The root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">The name of the item to add to the Display Control.</param>
            <param name="Recordset">Recordset containing the results of a query to be displayed.</param>
            <param name="SymbologyOverrides">The symbology information for displaying the query results.</param>
            <param name="ExcludeSecondaryGraphics">If True (the default), only primary graphics are displayed. If False all graphic components in the legend are displayed.</param>
            <param name="ExcludeNonLegendGraphics">If True (the default), only graphic components associated with the legend are displayed. If False, all components are included.</param>
            <param name="DisplayMode">Specifies whether the query is initially displayed. This influences the check box on the GUI. The default is True.</param>
            <param name="LocateMode">Specifies whether the query is initially locatable. This influences the check box on the GUI. The default is True.</param>
            <param name="DisplayScaleMode">Specifies whether the query reacts to the display scale. This influences the check box on the GUI. The default is gtdsdsUseMetadata.</param>
            <param name="DisplayPosition">Defines the draw order of the new legend item. The default is gtdsdpFront.</param>
            <remarks>
            In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Queries" &amp; vbTab &amp; "MyQueries"</item>
            <item>DisplayName = "MyQuery1"</item>
            </list>
            <para/>This would yield a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Queries
            <list type="bullet"><item>MyQueries
            <list type="bullet"><item>MyQuery1</item>
            </list></item></list></item></list>
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.Remove(System.String,System.String)">
            <summary>Method to remove an item from the map associated with this service.</summary>
            <param name="DisplayPathName">The root node under which the DisplayName exists. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">Defines the name of the legend item to be removed.</param>
            <remarks>The DisplayPathName parameter in this method applies to ad hoc legend entries only, not metadata-defined legend entries. It is used to identify the user interface location of items added by the user or by these methods:
            <para/>
            AppendFileByCoordSystem
            <para/>
            AppendFile
            <para/>
            AppendQuery
            <para/>
            AppendRedlines
            <para/>
            AppendSchematic
            <para/>
            AppendTemporaryGeometries</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetRange(System.String,System.String)">
            <summary>Method to return the range of an item in the map associated with this service.</summary>
            <param name="DisplayPathName">The names of the nodes of the Display Control hierarchically above the nodes 
            being queried. The path begins with the highest Display Control node and ends with the node's parent. Each 
            node name in this path is separated by a tab character.</param>
            <param name="DisplayName">The name of the Display Control node at the top level.</param>
            <remarks>This method returns the string that was passed in to SetUserInformation.
            <para/>
            This method can be called on any node. If called on a non-existent node, an error will be raised. If called 
            on a node for which SetUserInformation has not been called, it will return the default of an empty string.
            <para/>
            The DisplayPathName parameter in this method applies to ad hoc legend entries only, not metadata-defined 
            legend entries. It is used to identify the user interface location of items added by the user or by these methods:
            <para/>
            AppendFileByCoordSystem
            <para/>
            AppendFile
            <para/>
            AppendQuery
            <para/>
            AppendRedlines
            <para/>
            AppendSchematic
            <para/>
            AppendTemporaryGeometries</remarks>
            <returns>IGTWorldRange</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendTemporaryGeometries(System.String,System.String,Intergraph.GTechnology.API.IGTGeometry[],System.Object[])">
            <summary>Method to append a legend node with temporary geometries.</summary>
            <param name="DisplayPathName">Root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">Name of the legend item to add to the Display Control.</param>
            <param name="Geometries">Object array with geometries to be added to the legend item.</param>
            <param name="StyleIDs">Long integer array with StyleIDs used for rendering the geometries.</param>
            <remarks>Legend node with temporary geometries is not saved in the G/Technology workspace when the user runs the Save or the Save As command. 
            <para/>Default values true, true, and gtdsdpFront are used for ToolTips, DisplayMode, LocateMode, and DisplayPosition.
            <para/><para/>
            In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Temporary Geometries" &amp; vbTab &amp; "Snap Grids"</item>
            <item>DisplayName = "Snap Grid 1"</item>
            </list>
            <para/>This yields a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Temporary Geometries
            <list type="bullet"><item>Snap Grids
            <list type="bullet"><item>Snap Grid 1</item>
            </list></item></list></item></list>
            <para/>If DisplayPathName and DisplayName refer to an existing legend item, the legend item's content is preserved and new geometries are appended. To replace the content of an existing item, you need to remove that item first and then call AppendTemporaryGeometries. 
            <para/>If DisplayPathName references an existing node, this node must have been created by a previous call to AppendTemporaryGeometries or by running the New Temporary Geometry command. You cannot create new temporary geometry legend items under nodes other than temporary geometry nodes. For example, you cannot add temporary geometry legend items to a list of queries. 
            <para/>LBound() and UBound() for Geometries, StyleIDs, and ToolTips (if not empty) must return the same values. If they do not, an error is raised. Items with the same indexes in these three arrays refer to the same geometry. Thus, Geometries(1) is rendered using the style identified by StyleIDs(1). 
            <para/>ToolTips(1) is displayed when the user hovers the mouse over this geometry. If ToolTips is empty, the DisplayName value is displayed as a tool tip for each geometry in Geometries. 
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendTemporaryGeometries(System.String,System.String,Intergraph.GTechnology.API.IGTGeometry[],System.Object[],System.Object[])">
            <summary>Method to append a legend node with temporary geometries.</summary>
            <param name="DisplayPathName">Root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">Name of the legend item to add to the Display Control.</param>
            <param name="Geometries">Object array with geometries to be added to the legend item.</param>
            <param name="StyleIDs">Long integer array with StyleIDs used for rendering the geometries.</param>
            <param name="ToolTips">String array with tooltips of the geometries. The tooltip is displayed when the user hovers the mouse over this geometry. If this parameter is 
            empty, the value of DisplayName is displayed as a tooltip for each geometry in Geometries.</param>
            <remarks>Default values true, true, and gtdsdpFront are used for DisplayMode, LocateMode, and DisplayPosition.
            <para/><para/>
            In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Temporary Geometries" &amp; vbTab &amp; "Snap Grids"</item>
            <item>DisplayName = "Snap Grid 1"</item>
            </list>
            <para/>This yields a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Temporary Geometries
            <list type="bullet"><item>Snap Grids
            <list type="bullet"><item>Snap Grid 1</item>
            </list></item></list></item></list>
            <para/>If DisplayPathName and DisplayName refer to an existing legend item, the legend item's content is preserved and new geometries are appended. To replace the content of an existing item, you need to remove that item first and then call AppendTemporaryGeometries. 
            <para/>If DisplayPathName references an existing node, this node must have been created by a previous call to AppendTemporaryGeometries or by running the New Temporary Geometry command. You cannot create new temporary geometry legend items under nodes other than temporary geometry nodes. For example, you cannot add temporary geometry legend items to a list of queries. 
            <para/>LBound() and UBound() for Geometries, StyleIDs, and ToolTips (if not empty) must return the same values. If they do not, an error is raised. Items with the same indexes in these three arrays refer to the same geometry. Thus, Geometries(1) is rendered using the style identified by StyleIDs(1). 
            <para/>ToolTips(1) is displayed when the user hovers the mouse over this geometry. If ToolTips is empty, the DisplayName value is displayed as a tool tip for each geometry in Geometries. 
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendTemporaryGeometries(System.String,System.String,Intergraph.GTechnology.API.IGTGeometry[],System.Object[],System.Object[],System.Boolean)">
            <summary>Method to append a legend node with temporary geometries.</summary>
            <param name="DisplayMode">Specifies whether the temporary geometries are initially displayed. This influences the check box on the GUI. The default is True.</param>
            <param name="DisplayPathName">Root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">Name of the legend item to add to the Display Control.</param>
            <param name="Geometries">Object array with geometries to be added to the legend item.</param>
            <param name="StyleIDs">Long integer array with StyleIDs used for rendering the geometries.</param>
            <param name="ToolTips">String array with tooltips of the geometries. The tooltip is displayed when the user hovers the mouse over this geometry. If this parameter is 
            empty, the value of DisplayName is displayed as a tooltip for each geometry in Geometries.</param>
            <remarks>Default values true and gtdsdpFront are used for LocateMode and DisplayPosition.
            <para/><para/>
            In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Temporary Geometries" &amp; vbTab &amp; "Snap Grids"</item>
            <item>DisplayName = "Snap Grid 1"</item>
            </list>
            <para/>This yields a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Temporary Geometries
            <list type="bullet"><item>Snap Grids
            <list type="bullet"><item>Snap Grid 1</item>
            </list></item></list></item></list>
            <para/>If DisplayPathName and DisplayName refer to an existing legend item, the legend item's content is preserved and new geometries are appended. To replace the content of an existing item, you need to remove that item first and then call AppendTemporaryGeometries. 
            <para/>If DisplayPathName references an existing node, this node must have been created by a previous call to AppendTemporaryGeometries or by running the New Temporary Geometry command. You cannot create new temporary geometry legend items under nodes other than temporary geometry nodes. For example, you cannot add temporary geometry legend items to a list of queries. 
            <para/>LBound() and UBound() for Geometries, StyleIDs, and ToolTips (if not empty) must return the same values. If they do not, an error is raised. Items with the same indexes in these three arrays refer to the same geometry. Thus, Geometries(1) is rendered using the style identified by StyleIDs(1). 
            <para/>ToolTips(1) is displayed when the user hovers the mouse over this geometry. If ToolTips is empty, the DisplayName value is displayed as a tool tip for each geometry in Geometries. 
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendTemporaryGeometries(System.String,System.String,Intergraph.GTechnology.API.IGTGeometry[],System.Object[],System.Object[],System.Boolean,System.Boolean)">
            <summary>Method to append a legend node with temporary geometries.</summary>
            <param name="DisplayPathName">Root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">Name of the legend item to add to the Display Control.</param>
            <param name="Geometries">Object array with geometries to be added to the legend item.</param>
            <param name="StyleIDs">Long integer array with StyleIDs used for rendering the geometries.</param>
            <param name="ToolTips">String array with tooltips of the geometries. The tooltip is displayed when the user hovers the mouse over this geometry. If this parameter is 
            empty, the value of DisplayName is displayed as a tooltip for each geometry in Geometries.</param>
            <param name="DisplayMode">Specifies whether the temporary geometries are initially displayed. This influences the check box on the GUI. The default is True.</param>
            <param name="LocateMode">Specifies whether the temporary geometries are initially locatable. This influences the check box on the GUI. The default is True. LocateMode 
            is honored when appending geometries to an existing node.</param>
            <remarks>Default value gtdsdpFront is used for DisplayPosition.
            <para/><para/>
            In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Temporary Geometries" &amp; vbTab &amp; "Snap Grids"</item>
            <item>DisplayName = "Snap Grid 1"</item>
            </list>
            <para/>This yields a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Temporary Geometries
            <list type="bullet"><item>Snap Grids
            <list type="bullet"><item>Snap Grid 1</item>
            </list></item></list></item></list>
            <para/>If DisplayPathName and DisplayName refer to an existing legend item, the legend item's content is preserved and new geometries are appended. To replace the content of an existing item, you need to remove that item first and then call AppendTemporaryGeometries. 
            <para/>If DisplayPathName references an existing node, this node must have been created by a previous call to AppendTemporaryGeometries or by running the New Temporary Geometry command. You cannot create new temporary geometry legend items under nodes other than temporary geometry nodes. For example, you cannot add temporary geometry legend items to a list of queries. 
            <para/>LBound() and UBound() for Geometries, StyleIDs, and ToolTips (if not empty) must return the same values. If they do not, an error is raised. Items with the same indexes in these three arrays refer to the same geometry. Thus, Geometries(1) is rendered using the style identified by StyleIDs(1). 
            <para/>ToolTips(1) is displayed when the user hovers the mouse over this geometry. If ToolTips is empty, the DisplayName value is displayed as a tool tip for each geometry in Geometries. 
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendTemporaryGeometries(System.String,System.String,Intergraph.GTechnology.API.IGTGeometry[],System.Object[],System.Object[],System.Boolean,System.Boolean,Intergraph.GTechnology.API.GTDisplayPositionConstants)">
            <summary>Method to append a legend node with temporary geometries.</summary>
            <param name="DisplayPathName">Root node under which the DisplayName is appended. This could be a tab-delimited string that contains additional levels in the tree.</param>
            <param name="DisplayName">Name of the legend item to add to the Display Control.</param>
            <param name="Geometries">Object array with geometries to be added to the legend item.</param>
            <param name="StyleIDs">Long integer array with StyleIDs used for rendering the geometries.</param>
            <param name="ToolTips">String array with tooltips of the geometries. The tooltip is displayed when the user hovers the mouse over this geometry. If this parameter is 
            empty, the value of DisplayName is displayed as a tooltip for each geometry in Geometries.</param>
            <param name="DisplayMode">Specifies whether the temporary geometries are initially displayed. This influences the check box on the GUI. The default is True.</param>
            <param name="LocateMode">Specifies whether the temporary geometries are initially locatable. This influences the check box on the GUI. The default is True. LocateMode 
            is honored when appending geometries to an existing node.</param>
            <param name="DisplayPosition">Defines the draw order of the legend item. The default is gtdsdpFront. DisplayPosition is ignored when appending geometries to an existing node.</param>
            <remarks>
            In DisplayPathName you can pass a simple string that indicates the root node name under which DisplayName is to be displayed, or you can pass a tab-delimited string indicating a hierarchy under which DisplayName is to be displayed. 
            <para/><b>Example:</b>
            <para/>You define DisplayPathName and DisplayName as follows:
            <list type="bullet">
            <item>DisplayPathName = "Temporary Geometries" &amp; vbTab &amp; "Snap Grids"</item>
            <item>DisplayName = "Snap Grid 1"</item>
            </list>
            <para/>This yields a three-tier hierarchy in the Display Control: 
            <list type="bullet"><item>Temporary Geometries
            <list type="bullet"><item>Snap Grids
            <list type="bullet"><item>Snap Grid 1</item>
            </list></item></list></item></list>
            <para/>If DisplayPathName and DisplayName refer to an existing legend item, the legend item's content is preserved and new geometries are appended. To replace the content of an existing item, you need to remove that item first and then call AppendTemporaryGeometries. 
            <para/>If DisplayPathName references an existing node, this node must have been created by a previous call to AppendTemporaryGeometries or by running the New Temporary Geometry command. You cannot create new temporary geometry legend items under nodes other than temporary geometry nodes. For example, you cannot add temporary geometry legend items to a list of queries. 
            <para/>LBound() and UBound() for Geometries, StyleIDs, and ToolTips (if not empty) must return the same values. If they do not, an error is raised. Items with the same indexes in these three arrays refer to the same geometry. Thus, Geometries(1) is rendered using the style identified by StyleIDs(1). 
            <para/>ToolTips(1) is displayed when the user hovers the mouse over this geometry. If ToolTips is empty, the DisplayName value is displayed as a tool tip for each geometry in Geometries. 
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.ReplaceLegend(System.String)">
            <summary>Method to replace the current legend with the given legend on the display control.</summary>
            <param name="LegendName">The name of an existing metadata legend that is to replace the current legend.</param>
            <remarks>Default value 0 is used for DetailID.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.ReplaceLegend(System.String,System.Int32)">
            <summary>Method to replace the current legend with the given legend on the display control.</summary>
            <param name="LegendName">The name of an existing metadata legend that is to replace the current legend.</param>
            <param name="DetailID">The detail ID of the detail drawing that is to be opened. The default value is 0 which indicates a geographic legend.</param>
            <remarks>Validation is done on the legend name. If the legend name is defined as a detail legend, then the detail ID parameter must be non-zero. Otherwise, an error is raised. If the legend name is defined as a geo legend, the 
            detail ID parameter must be zero or omitted. Otherwise, an error is raised.
            <para/>
            The legend's paper scale is determined from a metadata lookup. If the specified legend has no associated paper scale, then the paper scale of the workspace is used.
            <para/>
            ReplaceLegend supports four transitions:
            <para/>
            Geo window to Geo window.
            <para/>
            Detail window to detail window. The window caption is changed if the detail IDs are different. This does not apply to a plot map.
            <para/>
            Detail window to geo window. The window caption is changed. This does not apply to a plot map.
            <para/>
            Geo window to detail window. The window caption is changed. This does not apply to a plot map.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendSchematic(System.String,System.String,System.String)">
            <summary>Method to append a schematic node to the legend.</summary>
            <param name="DisplayPathName">The names of the nodes of the Display Control hierarchically above 
            the node being appended. The path begins with the highest Display Control node and ends with the schematic's node's 
            parent. Each node name in this path is separated by a tab character.</param>
            <param name="DisplayName">The name of the Display Control node at the top individual schematic level.</param>
            <param name="XML">The actual Schematic-XML that needs to be displayed on the MapView represented by the IGTDisplayService Class.</param>
            <remarks>Default values true, true, and gtdsdpFront are used for DisplayMode, LocateMode, and DisplayPosition.
            <para/>Using this API, it is possible to have two different schematics with the same name on different parts of the legend. If you try to add a schematic with the same name and same display path, an error is raised. 
            <para/>If the path exists already, this method will add a new node to that path. The addition will be placed in alphabetical order. If the path does not exist, it will be created. 
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendSchematic(System.String,System.String,System.String,System.Boolean)">
            <summary>Method to append a schematic node to the legend.</summary>
            <param name="DisplayPathName">The names of the nodes of the Display Control hierarchically above 
            the node being appended. The path begins with the highest Display Control node and ends with the schematic's node's 
            parent. Each node name in this path is separated by a tab character.</param>
            <param name="DisplayName">The name of the Display Control node at the top individual schematic level.</param>
            <param name="XML">The actual Schematic-XML that needs to be displayed on the MapView represented by the GTDisplayService Class.</param>
            <param name="DisplayMode">Determines the setting of the Displayed check box on the Display Control. Defaults to True.</param>
            <remarks>Default values true and gtdsdpFront are used for LocateMode and DisplayPosition.
            <para/>Using this API, it is possible to have two different schematics with the same name on different parts of the legend. If you try to add a schematic with the same name and same display path, an error is raised. 
            <para/>If the path exists already, this method will add a new node to that path. The addition will be placed in alphabetical order. If the path does not exist, it will be created. 
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendSchematic(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Method to append a schematic node to the legend.</summary>
            <param name="DisplayPathName">The names of the nodes of the Display Control hierarchically above 
            the node being appended. The path begins with the highest Display Control node and ends with the schematic's node's 
            parent. Each node name in this path is separated by a tab character.</param>
            <param name="DisplayName">The name of the Display Control node at the top individual schematic level.</param>
            <param name="XML">The actual Schematic-XML that needs to be displayed on the MapView represented by the GTDisplayService Class.</param>
            <param name="DisplayMode">Determines the setting of the Displayed check box on the Display Control. Defaults to True.</param>
            <param name="LocateMode">Determines the setting of the Locatable check box on the Display Control. Defaults to True.</param>
            <remarks>Default value gtdsdpFront is used for DisplayPosition.
            <para/>Using this API, it is possible to have two different schematics with the same name on different parts of the legend. If you try to add a schematic with the same name and same display path, an error is raised. 
            <para/>If the path exists already, this method will add a new node to that path. The addition will be placed in alphabetical order. If the path does not exist, it will be created. 
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendSchematic(System.String,System.String,System.String,System.Boolean,System.Boolean,Intergraph.GTechnology.API.GTDisplayPositionConstants)">
            <summary>Method to append a schematic node to the legend.</summary>
            <param name="DisplayPathName">The names of the nodes of the Display Control hierarchically above 
            the node being appended. The path begins with the highest Display Control node and ends with the schematic's node's 
            parent. Each node name in this path is separated by a tab character.</param>
            <param name="DisplayName">The name of the Display Control node at the top individual schematic level.</param>
            <param name="XML">The actual Schematic-XML that needs to be displayed on the MapView represented by the GTDisplayService Class.</param>
            <param name="DisplayMode">Determines the setting of the Displayed check box on the Display Control. Defaults to True.</param>
            <param name="LocateMode">Determines the setting of the Locatable check box on the Display Control. Defaults to True.</param>
            <param name="DisplayPosition">Determines whether to append at the front or back of the current level where the node is being appended to. The default is 2, which is gtdsdpFront.</param>
            <remarks>Using this API, it is possible to have two different schematics with the same name on different parts of the legend. If you try to add a schematic with the same name and same display path, an error is raised. 
            <para/>If the path exists already, this method will add a new node to that path. The addition will be placed in alphabetical order. If the path does not exist, it will be created. 
            <para/>After calling this method, you must call the IGTApplication's RefreshWindows method to see the results.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetNodeChildren(System.String)">
            <summary>Method to return the children of a certain node on the Display Control.</summary>
            <param name="DisplayPathName">The path must begin with the highest Display Control node and ends with the parent of the desired nodes. Each node name in this path must be separated by a tab character.</param>
            <remarks>All nodes are returned, regardless of whether they are off or on in the legend.
            <para/>
            Each element of the returned array will contain the display node name.
            <para/>
            The DisplayPathName parameter in this method applies to ad hoc legend entries only, not metadata-defined legend entries. It is used to identify the user interface location of items added by the user or by these methods:
            <para/>
            AppendFileByCoordSystem
            <para/>
            AppendFile
            <para/>
            AppendQuery
            <para/>
            AppendRedlines
            <para/>
            AppendSchematic
            <para/>
            AppendTemporaryGeometries</remarks>
            <returns>Node children</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetNodeChildren(System.String,System.Boolean)">
            <summary>Method to return the children of a certain node on the Display Control.</summary>
            <param name="DisplayPathName">The path must begin with the highest Display Control node and ends with the parent of the desired nodes. Each node name in this path must be separated by a tab character.</param>
            <param name="DisplayMode">This parameter instructs the method to find only those nodes with that particular DisplayMode. If 
            the value is True, then only those nodes that are turned on in the legend are returned; if False, then only those nodes that are turned off are returned.</param>
            <remarks>Each element of the returned array will contain the display node name.
            <para/>
            The DisplayPathName parameter in this method applies to ad hoc legend entries only, not metadata-defined legend entries. It is used to identify the user interface location of items added by the user or by these methods:
            <para/>
            AppendFileByCoordSystem
            <para/>
            AppendFile
            <para/>
            AppendQuery
            <para/>
            AppendRedlines
            <para/>
            AppendSchematic
            <para/>
            AppendTemporaryGeometries</remarks>
            <returns>Node children</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetDisplayPersistence(System.String,System.String)">
            <summary>Method to return the DisplayPersistence data associated with a particular Display Control node.</summary>
            <param name="DisplayPathName">The names of the nodes of the Display Control hierarchically above the nodes being queried. The 
            path begins with the highest Display Control node and ends with the schematic's node's parent. Each node name in this path is 
            separated by a tab character.</param>
            <param name="DisplayName">The name of the Display Control node at the top schematic level.</param>
            <remarks>This method can be called only on Schematic nodes. If called for a non-schematic or on a non-existent node, an error 
            will be raised. If called on a node for which SetDisplayPersistence has not been called, it will return the default of gtdspSaveOff.</remarks>
            <returns>Display Persistence data</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.SetDisplayPersistence(System.String,System.String,Intergraph.GTechnology.API.GTDisplayPersistenceConstants)">
            <summary>Method to set the DisplayPersistence data associated with a particular Display Control node.</summary>
            <param name="DisplayPathName">The names of the nodes of the Display Control hierarchically above the nodes being queried. The path begins with 
            the highest Display Control node and ends with the schematic's node's parent. Each node name in this path is separated by a tab character.</param>
            <param name="DisplayName">The name of the Display Control node at the top schematic level.</param>
            <param name="DisplayPersistence">Sets the value of the DisplayPersistence for a schematic existing on the legend.</param>
            <remarks>If called on a non-existent node or for a non-schematic node, an error will be raised.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetUserInformation(System.String,System.String)">
            <summary>Method to return the UserInformation data associated with a particular Display Control node.</summary>
            <param name="DisplayPathName">The names of the nodes of the Display Control hierarchically above the nodes being queried. The path 
            begins with the highest Display Control node and ends with the node's parent. Each node name in this path is separated by a tab 
            character.</param>
            <param name="DisplayName">The name of the Display Control node at the top level.</param>
            <remarks>This method returns the string that was passed in to SetUserInformation.
            <para/>
            This method can be called on any node. If called on a non-existent node, an error will be raised. If called on a node for which 
            SetUserInformation has not been called, it will return the default of an empty string.
            <para/>
            The DisplayPathName parameter in this method applies to ad hoc legend entries only, not metadata-defined legend entries. It is 
            used to identify the user interface location of items added by the user or by these methods:
            <para/>
            AppendFileByCoordSystem
            <para/>
            AppendFile
            <para/>
            AppendQuery
            <para/>
            AppendRedlines
            <para/>
            AppendSchematic
            <para/>
            AppendTemporaryGeometries</remarks>
            <returns>User information data.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.SetUserInformation(System.String,System.String,System.String)">
            <summary>Method to set the UserInformation data associated with a particular Display Control node.</summary>
            <param name="DisplayPathName">The names of the nodes of the Display Control hierarchically above the nodes being 
            queried. The path begins with the highest Display Control node and ends with the node's parent. Each node name in 
            this path is separated by a tab character.</param>
            <param name="DisplayName">The name of the Display Control node at the top level.</param>
            <param name="UserInformation">The value of the UserInformation for any node existing on the legend.</param>
            <remarks>This method can be called on any node. If called on a non-existent node, an error will be raised.
            <para/>
            The DisplayPathName parameter in this method applies to ad hoc legend entries only, not metadata-defined legend 
            entries. It is used to identify the user interface location of items added by the user or by these methods:
            <para/>
            AppendFileByCoordSystem
            <para/>
            AppendFile
            <para/>
            AppendQuery
            <para/>
            AppendRedlines
            <para/>
            AppendSchematic
            <para/>
            AppendTemporaryGeometries</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendFile(System.String,Intergraph.GTechnology.API.GTFileTypeConstants)">
            <summary>Method to append a file (raster, MicroStation, AutoCAD) to the map associated with this service.  The file is not positioned relative to the earth.</summary>
            <param name="FileName">Must be a fully-qualified file. UNC syntax is supported.</param>
            <param name="FileType">File type: raster, AutoCAD, or MicroStation.</param>
            <remarks>
            The AppendFile method attaches (at world coordinate X,Y of 0,0) the input file to the map window or map frame from which this service is obtained. The file is not georeferenced, and no transformation is performed. 
            <para/>This method can be used to support interactive registration in a temporary window. Or, it can be used to display non-georeferenced CAD drawings or operation manuals in non-legend-based windows. 
            <para/>An error is raised if the input file is already attached or if the input file has a DDC extension. Use the AppendFileByCoordSystem method for DDC raster files. 
            <para/>AppendFile does not use a display matrix to position the file at a particular georeferenced point. It simply displays a file—for registration purposes, for example. Use AppendFileByCoordSystem if you want the item georeferenced. 
            <para/>The user interface is defaulted as follows: 
            <list type="bullet">
            <item>DisplayMode is on (True).</item>
            <item>LocateMode is off (False).</item>
            <item>DisplayPosition is gtdsfpBack.</item>
            <item>If the FileType is gtfsRaster, the image is located under the Images node (a localized string resource).</item>
            <item>If the FileType is gtfsftAutoCAD or gtfsftMicroStation, the CAD file is located under the CAD backdrop data node (a localized string resource).</item>
            </list>
            <para/>
            Files appended with this method are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendFileByCoordSystem(System.String,System.String,Intergraph.GTechnology.API.GTFileTypeConstants)">
            <summary>Method to append a file (raster, MicroStation, AutoCAD) to the map associated with this service.  The file is positioned using the supplied CoordSystemFile or a coordinate system embedded in the input file.</summary>
            <param name="FileName">Must be a fully-qualified file. UNC syntax is supported.</param>
            <param name="FileType">File type: raster, AutoCAD, or MicroStation.</param>
            <param name="DisplayPathName">The location at which this item appears in the Display Control user interface. It is a list of node names, from the top-level to the lowest-level node.</param>
            <remarks>Default values string.Empty, true, false and gtdsdpBack are used for CoordSystemFile, DisplayMode, LocateMode and DisplayPosition.
            <para/>
            An error is raised if the input file is already attached at the input DisplayPathName location.
            <para/>If the input file has a DDC extension, the input file type is assumed to be gtdsftRaster. The CoordSystemFile is ignored in this case.
            <para/>If the input file has a DDC extension, the input file type is assumed to be gtdsftRaster. The CoordSystemFile is ignored in this case. 
            <para/>The CoordSystemFile parameter is required in these cases:
            <list type="bullet">
            <item>When FileType is gtdsftMicroStation.</item>
            <item>When FileType is gtdsftAutoCAD.</item>
            <item>When FileType is gtdsftRaster and the input file is an Intergraph file without a geo-tie packet.</item>
            <item>When FileType is gtdsftRaster and the input file is a world file without a GeoTIFF tag. </item>
            </list>
            <para/>The CoordSystemFile parameter is optional in these cases: 
            <list type="bullet">
            <item>When FileType is gtdsftRaster and the input file is an Intergraph file with a geo-tie packet.</item>
            <item>When FileType is gtdsftRaster and the input file contains a GeoTIFF tag.</item>
            </list>
            <para/>In either case, if the CoordSystemFile is omitted, coordinate system information is retrieved from the file header. Otherwise, the CoordSystemFile is used. 
            <para/>An error is raised if the file is not an Intergraph type, a GeoTIFF, or a World file, such as a TIFF image without a matrix; the AppendFile method can be used in this case. 
            <para/>Files appended with this method are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendFileByCoordSystem(System.String,System.String,Intergraph.GTechnology.API.GTFileTypeConstants,System.String)">
            <summary>Method to append a file (raster, MicroStation, AutoCAD) to the map associated with this service.  The file is positioned using the supplied CoordSystemFile or a coordinate system embedded in the input file.</summary>
            <param name="FileName">Must be a fully-qualified file. UNC syntax is supported.</param>
            <param name="FileType">File type: raster, AutoCAD, or MicroStation.</param>
            <param name="DisplayPathName">The location at which this item appears in the Display Control user interface. It is a list of node names, from the top-level to the lowest-level node.</param>
            <param name="CoordSystemFile">The file containing coordinate system information. It can be a CSF file or DGN file.</param>
            <remarks>Default values true, false and gtdsdpBack are used for DisplayMode, LocateMode and DisplayPosition.
            <para/>
            An error is raised if the input file is already attached at the input DisplayPathName location.
            <para/>If the input file has a DDC extension, the input file type is assumed to be gtdsftRaster. The CoordSystemFile is ignored in this case.
            <para/>If the input file has a DDC extension, the input file type is assumed to be gtdsftRaster. The CoordSystemFile is ignored in this case. 
            <para/>The CoordSystemFile parameter is required in these cases:
            <list type="bullet">
            <item>When FileType is gtdsftMicroStation.</item>
            <item>When FileType is gtdsftAutoCAD.</item>
            <item>When FileType is gtdsftRaster and the input file is an Intergraph file without a geo-tie packet.</item>
            <item>When FileType is gtdsftRaster and the input file is a world file without a GeoTIFF tag. </item>
            </list>
            <para/>The CoordSystemFile parameter is optional in these cases: 
            <list type="bullet">
            <item>When FileType is gtdsftRaster and the input file is an Intergraph file with a geo-tie packet.</item>
            <item>When FileType is gtdsftRaster and the input file contains a GeoTIFF tag.</item>
            </list>
            <para/>In either case, if the CoordSystemFile is omitted, coordinate system information is retrieved from the file header. Otherwise, the CoordSystemFile is used. 
            <para/>An error is raised if the file is not an Intergraph type, a GeoTIFF, or a World file, such as a TIFF image without a matrix; the AppendFile method can be used in this case. 
            <para/>Files appended with this method are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendFileByCoordSystem(System.String,System.String,Intergraph.GTechnology.API.GTFileTypeConstants,System.String,System.Boolean)">
            <summary>Method to append a file (raster, MicroStation, AutoCAD) to the map associated with this service.  The file is positioned using the supplied CoordSystemFile or a coordinate system embedded in the input file.</summary>
            <param name="FileName">Must be a fully-qualified file. UNC syntax is supported.</param>
            <param name="FileType">File type: raster, AutoCAD, or MicroStation.</param>
            <param name="DisplayPathName">The location at which this item appears in the Display Control user interface. It is a list of node names, from the top-level to the lowest-level node.</param>
            <param name="CoordSystemFile">The file containing coordinate system information. It can be a CSF file or DGN file.</param>
            <param name="DisplayMode">Specifies whether the display status check box is initially on (True) or off (False). The default is False.</param>
            <remarks>Default values false and gtdsdpBack are used for LocateMode and DisplayPosition.
            <para/>
            An error is raised if the input file is already attached at the input DisplayPathName location.
            <para/>If the input file has a DDC extension, the input file type is assumed to be gtdsftRaster. The CoordSystemFile is ignored in this case.
            <para/>If the input file has a DDC extension, the input file type is assumed to be gtdsftRaster. The CoordSystemFile is ignored in this case. 
            <para/>The CoordSystemFile parameter is required in these cases:
            <list type="bullet">
            <item>When FileType is gtdsftMicroStation.</item>
            <item>When FileType is gtdsftAutoCAD.</item>
            <item>When FileType is gtdsftRaster and the input file is an Intergraph file without a geo-tie packet.</item>
            <item>When FileType is gtdsftRaster and the input file is a world file without a GeoTIFF tag. </item>
            </list>
            <para/>The CoordSystemFile parameter is optional in these cases: 
            <list type="bullet">
            <item>When FileType is gtdsftRaster and the input file is an Intergraph file with a geo-tie packet.</item>
            <item>When FileType is gtdsftRaster and the input file contains a GeoTIFF tag.</item>
            </list>
            <para/>In either case, if the CoordSystemFile is omitted, coordinate system information is retrieved from the file header. Otherwise, the CoordSystemFile is used. 
            <para/>An error is raised if the file is not an Intergraph type, a GeoTIFF, or a World file, such as a TIFF image without a matrix; the AppendFile method can be used in this case. 
            <para/>Files appended with this method are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendFileByCoordSystem(System.String,System.String,Intergraph.GTechnology.API.GTFileTypeConstants,System.String,System.Boolean,System.Boolean)">
            <summary>Method to append a file (raster, MicroStation, AutoCAD) to the map associated with this service.  The file is positioned using the supplied CoordSystemFile or a coordinate system embedded in the input file.</summary>
            <param name="FileName">Must be a fully-qualified file. UNC syntax is supported.</param>
            <param name="FileType">File type: raster, AutoCAD, or MicroStation.</param>
            <param name="DisplayPathName">The location at which this item appears in the Display Control user interface. It is a list of node names, from the top-level to the lowest-level node.</param>
            <param name="DisplayMode">Specifies whether the display status check box is initially on (True) or off (False). The default is False.</param>
            <param name="CoordSystemFile">The file containing coordinate system information. It can be a CSF file or DGN file.</param>
            <param name="LocateMode">Specifies whether the locate status check box is initially on (True) or off (False). The default is True.</param>
            <remarks>Default value gtdsdpBack is used for DisplayPosition.
            <para/>
            An error is raised if the input file is already attached at the input DisplayPathName location.
            <para/>If the input file has a DDC extension, the input file type is assumed to be gtdsftRaster. The CoordSystemFile is ignored in this case.
            <para/>If the input file has a DDC extension, the input file type is assumed to be gtdsftRaster. The CoordSystemFile is ignored in this case. 
            <para/>The CoordSystemFile parameter is required in these cases:
            <list type="bullet">
            <item>When FileType is gtdsftMicroStation.</item>
            <item>When FileType is gtdsftAutoCAD.</item>
            <item>When FileType is gtdsftRaster and the input file is an Intergraph file without a geo-tie packet.</item>
            <item>When FileType is gtdsftRaster and the input file is a world file without a GeoTIFF tag. </item>
            </list>
            <para/>The CoordSystemFile parameter is optional in these cases: 
            <list type="bullet">
            <item>When FileType is gtdsftRaster and the input file is an Intergraph file with a geo-tie packet.</item>
            <item>When FileType is gtdsftRaster and the input file contains a GeoTIFF tag.</item>
            </list>
            <para/>In either case, if the CoordSystemFile is omitted, coordinate system information is retrieved from the file header. Otherwise, the CoordSystemFile is used. 
            <para/>An error is raised if the file is not an Intergraph type, a GeoTIFF, or a World file, such as a TIFF image without a matrix; the AppendFile method can be used in this case. 
            <para/>Files appended with this method are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendFileByCoordSystem(System.String,System.String,Intergraph.GTechnology.API.GTFileTypeConstants,System.String,System.Boolean,System.Boolean,Intergraph.GTechnology.API.GTDisplayPositionConstants)">
            <summary>Method to append a file (raster, MicroStation, AutoCAD) to the map associated with this service.  The file is positioned using the supplied CoordSystemFile or a coordinate system embedded in the input file.</summary>
            <param name="FileName">Must be a fully-qualified file. UNC syntax is supported.</param>
            <param name="FileType">File type: raster, AutoCAD, or MicroStation.</param>
            <param name="DisplayPathName">The location at which this item appears in the Display Control user interface. It is a list of node names, from the top-level to the lowest-level node.</param>
            <param name="DisplayPosition">Defines the draw order of the new legend item. The default is gtdsdpFront.</param>
            <param name="LocateMode">Specifies whether the locate status check box is initially on (True) or off (False). The default is True.</param>
            <param name="CoordSystemFile">The file containing coordinate system information. It can be a CSF file or DGN file.</param>
            <param name="DisplayMode">Specifies whether the display status check box is initially on (True) or off (False). The default is False.</param>
            <remarks>
            An error is raised if the input file is already attached at the input DisplayPathName location.
            <para/>If the input file has a DDC extension, the input file type is assumed to be gtdsftRaster. The CoordSystemFile is ignored in this case.
            <para/>If the input file has a DDC extension, the input file type is assumed to be gtdsftRaster. The CoordSystemFile is ignored in this case. 
            <para/>The CoordSystemFile parameter is required in these cases:
            <list type="bullet">
            <item>When FileType is gtdsftMicroStation.</item>
            <item>When FileType is gtdsftAutoCAD.</item>
            <item>When FileType is gtdsftRaster and the input file is an Intergraph file without a geo-tie packet.</item>
            <item>When FileType is gtdsftRaster and the input file is a world file without a GeoTIFF tag. </item>
            </list>
            <para/>The CoordSystemFile parameter is optional in these cases: 
            <list type="bullet">
            <item>When FileType is gtdsftRaster and the input file is an Intergraph file with a geo-tie packet.</item>
            <item>When FileType is gtdsftRaster and the input file contains a GeoTIFF tag.</item>
            </list>
            <para/>In either case, if the CoordSystemFile is omitted, coordinate system information is retrieved from the file header. Otherwise, the CoordSystemFile is used. 
            <para/>An error is raised if the file is not an Intergraph type, a GeoTIFF, or a World file, such as a TIFF image without a matrix; the AppendFile method can be used in this case. 
            <para/>Files appended with this method are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendRedlines(System.String,System.String)">
            <summary>Method to append a redline file (*.xml, *.grl) to the map associated with this service.</summary>
            <param name="DisplayPathName">The location at which this item appears in the Display Control user interface. It is a list of node names, from the top-level to the lowest-level node.</param>
            <param name="FileName">Must be a fully-qualified XML or GRL file. UNC syntax and URL syntax are supported. A file name node is displayed as a child of the DisplayPathName nodes in the user interface.</param>
            <remarks>Default values 0, true, true and gtdsdpFront are used for StyleRuleNumber, DisplayMode, LocateMode and DisplayPosition.
            <para/>An error is raised if the input file is already attached at the input DisplayPathName location. 
            <para/>No error is generated if the input file was generated from a database configuration different than the current database configuration. 
            <para/>If a StyleRuleNumber is provided, it is used. If omitted, the RedlineStyleRule general parameter is used. 
            <para/>Redlines are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendRedlines(System.String,System.String,System.Int32)">
            <summary>Method to append a redline file (*.xml, *.grl) to the map associated with this service.</summary>
            <param name="DisplayPathName">The location at which this item appears in the Display Control user interface. It is a list of node names, from the top-level to the lowest-level node.</param>
            <param name="FileName">Must be a fully-qualified XML or GRL file. UNC syntax and URL syntax are supported. A file name node is displayed as a child of the DisplayPathName nodes in the user interface.</param>
            <param name="StyleRuleNumber">The Style Rule to apply to the redlines.</param>
            <remarks>Default values true, true and gtdsdpFront are used for DisplayMode, LocateMode and DisplayPosition.
            <para/>An error is raised if the input file is already attached at the input DisplayPathName location. 
            <para/>No error is generated if the input file was generated from a database configuration different than the current database configuration. 
            <para/>If a StyleRuleNumber is provided, it is used. If omitted, the RedlineStyleRule general parameter is used. 
            <para/>Redlines are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendRedlines(System.String,System.String,System.Int32,System.Boolean)">
            <summary>Method to append a redline file (*.xml, *.grl) to the map associated with this service.</summary>
            <param name="DisplayPathName">The location at which this item appears in the Display Control user interface. It is a list of node names, from the top-level to the lowest-level node.</param>
            <param name="FileName">Must be a fully-qualified XML or GRL file. UNC syntax and URL syntax are supported. A file name node is displayed as a child of the DisplayPathName nodes in the user interface.</param>
            <param name="StyleRuleNumber">The Style Rule to apply to the redlines.</param>
            <param name="DisplayMode">Specifies whether the display status check box is initially on (True) or off (False). The default is True.</param>
            <remarks>Default values true and gtdsdpFront are used for LocateMode and DisplayPosition.
            <para/>An error is raised if the input file is already attached at the input DisplayPathName location. 
            <para/>No error is generated if the input file was generated from a database configuration different than the current database configuration. 
            <para/>If a StyleRuleNumber is provided, it is used. If omitted, the RedlineStyleRule general parameter is used. 
            <para/>Redlines are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendRedlines(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>Method to append a redline file (*.xml, *.grl) to the map associated with this service.</summary>
            <param name="DisplayPathName">The location at which this item appears in the Display Control user interface. It is a list of node names, from the top-level to the lowest-level node.</param>
            <param name="FileName">Must be a fully-qualified XML or GRL file. UNC syntax and URL syntax are supported. A file name node is displayed as a child of the DisplayPathName nodes in the user interface.</param>
            <param name="StyleRuleNumber">The Style Rule to apply to the redlines.</param>
            <param name="DisplayMode">Specifies whether the display status check box is initially on (True) or off (False). The default is True.</param>
            <param name="LocateMode">Specifies whether the locate status check box is initially on (True) or off (False). The default is True.</param>
            <remarks>Default value gtdsdpFront is used for and DisplayPosition.
            <para/>An error is raised if the input file is already attached at the input DisplayPathName location. 
            <para/>No error is generated if the input file was generated from a database configuration different than the current database configuration. 
            <para/>If a StyleRuleNumber is provided, it is used. If omitted, the RedlineStyleRule general parameter is used. 
            <para/>Redlines are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.AppendRedlines(System.String,System.String,System.Int32,System.Boolean,System.Boolean,Intergraph.GTechnology.API.GTDisplayPositionConstants)">
            <summary>Method to append a redline file (*.xml, *.grl) to the map associated with this service.</summary>
            <param name="DisplayPathName">The location at which this item appears in the Display Control user interface. It is a list of node names, from the top-level to the lowest-level node.</param>
            <param name="FileName">Must be a fully-qualified XML or GRL file. UNC syntax and URL syntax are supported. A file name node is displayed as a child of the DisplayPathName nodes in the user interface.</param>
            <param name="StyleRuleNumber">The Style Rule to apply to the redlines.</param>
            <param name="DisplayMode">Specifies whether the display status check box is initially on (True) or off (False). The default is True.</param>
            <param name="LocateMode">Specifies whether the locate status check box is initially on (True) or off (False). The default is True.</param>
            <param name="DisplayPosition">Defines the draw order of the new legend item. The default is gtdsdpFront.</param>
            <remarks>An error is raised if the input file is already attached at the input DisplayPathName location. 
            <para/>No error is generated if the input file was generated from a database configuration different than the current database configuration. 
            <para/>If a StyleRuleNumber is provided, it is used. If omitted, the RedlineStyleRule general parameter is used. 
            <para/>Redlines are automatically saved in the workspace when the user saves the workspace.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetLegendKeys">
            <summary>Method to return the legend key(s) for the one or more top-level metadata legend nodes that appear in the Display Control. Top-level metadata legend nodes typically show the configuration name followed by a period followed by the legend's user name.</summary>
            <remarks>There is typically one item in the returned array. However, for each string in the returned array, you can call GetLegendDisplayControlNodes to get its top-level metadata legend node. The DisplayName from each top-level metadata legend node can be presented to the user to choose a legend name.
            <para>The returned array of strings is 0-based.
            </para></remarks>
            <returns>Array of legend key's.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetLegendDisplayControlNodes(System.String)">
            <summary>Method to return a collection of IGTDisplayControlNode objects.</summary>
            <param name="LegendKey">Legend key.</param>
            <remarks>LegendKey must match one of the keys returned from the GetLegendKeys method.
            <para>This method returns the top-level metadata legend IGTDisplayControlNode.
            </para>
            <para>This method returns a collection because display groups and legend entries can appear multiple places in the tree view. If multiple nodes are returned, the item appears multiple places in the tree view. The IGTDisplayControlNode's DisplayPathName property can be used to find the particular node of interest.
            </para>
            <para>If the input parameter, LegendKey, does not identify a metadata legend node, an error is raised.
            </para>
            <para>Default value string.Empty is used for LegendItem.
            </para></remarks>
            <returns>A collection of IGTDisplayControlNode object's.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetLegendDisplayControlNodes(System.String,System.String)">
            <summary>Method to return a collection of IGTDisplayControlNode objects.</summary>
            <param name="LegendKey">Legend key.</param>
            <param name="LegendItem">Legend item.</param>
            <remarks>LegendKey must match one of the keys returned from the GetLegendKeys method.
            <para>LegendItem must match a specific G3E_LEGENDITEM value in the appropriate G3E_DISPLAYCONTROLTABLE table.
            </para>
            <para>This method returns a collection because display groups and legend entries can appear multiple places in the tree view. If multiple nodes are returned, the item appears multiple places in the tree view. The GTDisplayControlNode's DisplayPathName property can be used to find the particular node of interest.
            </para>
            <para>If LegendItem is a legend entry and multiple are returned, you should only set the properties on one IGTDisplayControlNode.LegendEntry, not all; setting one LegendEntry's properties affects the other LegendEntry objects with the same LegendItem name.
            </para>
            <para>If the input parameters, LegendKey and LegendItem, do not identify a metadata legend node, an error is raised.
            </para></remarks>
            <returns>A collection of IGTDisplayControlNode object's.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetAdHocDisplayControlNode(System.String)">
            <summary>Method to return the IGTDisplayControlNode.</summary>
            <param name="DisplayPathName">DisplayPathName is a tab-delimited string of each parent level in the tree view.</param>
            <remarks>
            <para>DisplayName is the string representing the lowest level ad hoc node.
            </para>
            <para>The IGTDisplayControlNode represented by DisplayPathName is returned.
            </para>
            <para>The top-level ad hoc items are localized.
            </para>
            <para>For the top-level ad hoc node, the DisplayName is the same as the given DisplayPathName.
            </para>
            <para>If the input parameter, DisplayPathName, does not identify an ad hoc node, an error is raised.
            </para>
            <para>The following is the list of ad hoc node types:
            <list type="bullet">
            <item><description>Query</description></item>
            <item><description>Image</description></item>
            <item><description>Trace</description></item>
            <item><description>Temporary Geometry</description></item>
            <item><description>Schematic</description></item>
            <item><description>CAD File (DWG, DGN, DDC)</description></item>
            </list>
            </para>
            <para>Default value string.Empty is used for DisplayName.
            </para>
            </remarks>
            <returns>The IGTDisplayControlNode represented by DisplayPathName is returned.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetAdHocDisplayControlNode(System.String,System.String)">
            <summary>Method to return the IGTDisplayControlNode.</summary>
            <param name="DisplayName">DisplayName is the string representing the lowest level ad hoc node.</param>
            <param name="DisplayPathName">DisplayPathName is a tab-delimited string of each parent level in the tree view.</param>
            <remarks><para>The IGTDisplayControlNode represented by the combination of DisplayPathName and DisplayName is returned.
            </para>
            <para>The top-level ad hoc items are localized.
            </para>
            <para>For the top-level ad hoc node, the DisplayName is the same as the given DisplayPathName.
            </para>
            <para>If the input parameters, DisplayPathName and DisplayName, do not identify an ad hoc node, an error is raised.
            </para>
            <para>The following is the list of ad hoc node types:
            <list type="bullet">
            <item><description>Query</description></item>
            <item><description>Image</description></item>
            <item><description>Trace</description></item>
            <item><description>Temporary Geometry</description></item>
            <item><description>Schematic</description></item>
            <item><description>CAD File (DWG, DGN, DDC)</description></item>
            </list>
            </para>
            </remarks>
            <returns>The IGTDisplayControlNode represented by the combination of DisplayPathName and DisplayName is returned.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetDisplayControlNodes">
            <summary>Method to return a collection of IGTDisplayControlNode objects.</summary>
            <remarks>The method returns all nodes in the treeview.
            <para>The returned collection is static. It is not kept up to date with what a user may add to or remove from the Display Control.
            </para>
            <para>Default value string.Empty is used for Key.
            </para></remarks>
            <returns>A collection of IGTDisplayControlNode object's.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.GetDisplayControlNodes(System.String)">
            <summary>Method to return a collection of IGTDisplayControlNode objects.</summary>
            <param name="Key">Key</param>
            <remarks>The method returns the IGTDisplayControlNode identified by the Key, plus all its children.
            <para>If Key is invalid, an error is raised.
            </para>
            <para>The returned collection is static. It is not kept up to date with what a user may add to or remove from the Display Control.
            </para></remarks>
            <returns>A collection of IGTDisplayControlNode object's.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.ReplaceLegendByMapWindow(Intergraph.GTechnology.API.IGTMapWindow)">
            <summary>Method to replace the legend on the IGTMapWindow or IGTPlotMap from which this IGTDisplayService is obtained.  It replaces it with a copy of the legend on the input map window.</summary>
            <param name="oMapWindow">IGTMapWindow</param>
            <remarks>You can use the GTClassFactory.Create&lt;IGTApplication&gt;().ActiveMapWindow property or the GTClassFactory.Create&lt;IGTApplication&gt;().GetMapWindows method to get the collection of existing IGTMapWindow objects.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDisplayService.ReplaceLegendByWorkspaceLegendName(System.String)">
            <summary>Method to replace the legend on the IGTMapWindow or IGTPlotMap from which this IGTDisplayService is obtained.  It replaces it with a copy of the workspace legend identified by the input WorkspaceLegendName.</summary>
            <param name="WorkspaceLegendName">Workspace legend name.</param>
            <remarks>If the WorkspaceLegendName is not found, an error is raised.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDisplayService.HiddenComponents">
            <summary>Property to return/set the array of hidden components. Each row of the array must define a component to hide by specifying its FNO, FID, CNO and CID.</summary>
            <remarks>
            The HiddenComponents property returns an object containing a two-dimensional array of components that are currently hidden. If no components are hidden, it returns an empty object. 
            <para/>When set, the HiddenComponents property accepts one of the following:
            <list type="bullet">
            <item>An empty object.</item>
            <item>An array. The array is expected to have four columns containing (in this order) G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID. Each row represents one component to be hidden.</item>
            <item>A recordset containing at least the four G3E key fields: G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID. Each row represents one component to be hidden.</item>
            <item>IGTDDCKeyObjects collection. Each item in the collection represents one component to be hidden.</item>
            </list>
            <para/>If an empty object has been specified, or if the collection does not have any items, or if the recordset does not have any rows, all currently hidden components will no longer be hidden. 
            <para/>Any currently hidden components that are not present in the array/recordset/collection when set will no longer be hidden. 
            <para/>To hide an entire feature, specify all graphical components of the feature, one per row in this array.
            <para/>If the input variant is not one of the items specified above, or if the array does not have four numeric columns, an error is raised.
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDisplayService.PaperScale">
            <summary>Property to return/set the PaperScale on a map window or map frame.</summary>
            <remarks>The paper scale of a map affects the translation of style units to ground units. In 
            the case of schematics, the PaperScale of the map in which a schematic is displayed should match 
            the PaperScale value that was specified to GTSchematicDisplayService when the schematic was created.
            <para/>
            Unless it is equal to the constant gtpsWorkspacePaperScale (-1), the specified scale must be a positive 
            integer value. If PaperScale is set to gtpsWorkspacePaperScale, then the paper scale for that map is the 
            default paper scale set in the workspace, which is determined by the Set Paper Space command.
            <para/>
            The PaperScale property never returns a value of gtpsWorkspacePaperScale. It always returns the paper scale 
            that is currently in effect for the associated map.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDisplayService.SelectedDisplayControlNode">
            <summary>Property to return the Display Control's selected node.</summary>
            <remarks>If no node is currently selected in the Display Control's tree view, null is returned.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTComponents">
            <summary>Intergraph G/Technology IGTComponents API.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTComponents.GetComponent(System.Int16)">
            <summary>Method to return a specific component object given a CNO.</summary>
            <param name="CNO">Component number given.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when CNO is out of range.</exception>
            <returns>IGTComponent</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTComponents.Add(Intergraph.GTechnology.API.IGTComponent)">
            <summary>Method to add a IGTComponent object to the collection.</summary>
            <param name="oGTComponent">Input component to be added to the collection.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when oGTComponent is Null.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTComponents.Item(System.Int32)">
            <summary>Property to return a specific GTComponent in the collection.</summary>
            <param name="index">Numeric index to the component.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTComponents.Item(System.String)">
            <summary>Method to return a specific component object given a Component Name.
            It returns Null if component name is invalid or not found </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when Component name is not provided.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTComponents.DataContext">
            <summary>Property to return the IGTDataContext object associated with this collection.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTAugmentNetworkAttribution">
            <summary>
            The Intergraph G/Technology IGTAugmentNetworkAttribution Interface allows for client software to customize the data used in a schematic layout.
            </summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTAugmentNetworkAttribution.Execute(Intergraph.GTechnology.API.IGTSchematicElements)">
            <summary>
            Processes the collection of schematic elements.
            </summary>
            <remarks>After Execute returns, the IGTSchematicGeneratorService uses the Elements collection to generate the schematic layout for that feature class.</remarks>
            <param name="elements">The collection of schematic elements to be processed.</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTAugmentNetworkAttribution.FNO">
            <summary>
            Gets the feature number of the schematic elements being processed.
            </summary>
            <remarks>This property is provided to the filter object so that it can easily decide whether any filtering or custom processing is appropriate.
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTActiveJobChangedEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTAppication ActiveJobChanged event.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTActiveJobChangedEventArgs.#ctor(System.String,System.String)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTActiveJobChangedEventArgs class.</summary>
            <param name="ActiveJob">The new active job name.</param>
            <param name="ConfigurationName">The name of the new active configuration.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTActiveJobChangedEventArgs.ActiveJob">
            <summary>ActiveJob argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTActiveJobChangedEventArgs.ConfigurationName">
            <summary>ConfigurationName argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTRecordsets">
            <summary>Intergraph G/Technology IGTRecordsets API.</summary>
            <remarks>
            The IGTRecordsets object is returned from GetDetailWindowInformation. This object is a collection of ADODB.Recordsets. 
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTRecordsets.Item(System.Int32)">
            <summary>Property to return a specific ADODB.Recordset in the collection.</summary>
            <param name="index">The index of the item to be returned.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTProperties">
            <summary>Intergraph G/Technology IGTProperties API.</summary>
            <remarks>
            IGTProperties object is a collection interface that provides a convenient way to manage various application properties. IGTProperties are not persisted when G/Techology exits. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTProperties.Add(System.String,System.Object)">
            <summary>Method to add an item to the collection.</summary>
            <param name="Key">The System.String key of the item to add.</param>
            <param name="Value">The System.Object value of the item to add.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when Key is null or empty or Value is null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTProperties.Remove(System.String)">
            <summary>Method to remove an item from the collection.</summary>
            <param name="Key">The System.String key of the item to add.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when Key is null or empty.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTProperties.Clear">
            <summary>Method to clear the collection.</summary>
            <remarks>To remove only one member from a collection, use the Remove method.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTProperties.GetEnumerator">
            <summary>
            Method to return an enumerator that iterates through the items.
            </summary>
            <returns>IEnumerator</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTProperties.Item(System.Int32)">
            <summary>Property to return a specific item in the collection.</summary>
            <param name="index">The zero-based numeric index of the property.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTProperties.Item(System.String)">
            <summary>Property to set or return a specific item in the collection.</summary>
            <param name="Key">The name of the property.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when Key is null or empty.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTProperties.Count">
            <summary>Property to return a number of items in the collection.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTProperties.Keys">
            <summary>
            Property to return the keys collection.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPlotWindow">
            <summary>Intergraph G/Technology IGTPlotWindow API.</summary>
            <remarks>
            IGTPlotWindow provides access to an open plot window displaying a named plot
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotWindow.Activate">
            <summary>Method to make the plot window the active window.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotWindow.Close">
            <summary>Method to close the plot window.</summary>
            <remarks>Closing a plot window does not delete the named plot that it is currently viewing.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotWindow.InsertObjectFromFile(System.String,System.Boolean,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to, given a filename, insert an OLE object into the plot.</summary>
            <param name="FileName">The name of the file from which to create the embedded or linked object.</param>
            <param name="CreateAsLink">Embedded if False. Linked if True. Defaults to False.</param>
            <param name="TopLeft">The location of the top-left corner of the new frame.</param>
            <remarks>Default value null is used for BottomRight.</remarks>
            <returns>IGTPlotFrame</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotWindow.InsertObjectFromFile(System.String,System.Boolean,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to, given a filename, insert an OLE object into the plot.</summary>
            <param name="FileName">The name of the file from which to create the embedded or linked object.</param>
            <param name="CreateAsLink">Embedded if False. Linked if True. Defaults to False.</param>
            <param name="TopLeft">The location of the top-left corner of the new frame.</param>
            <param name="BottomRight">The bottom-right corner of the new frame.</param>
            <remarks>The extents of the frame are derived from the extents of the OLE object.
            <para/>
            The normal usage should be to leave off the BottomRight argument. This causes the resulting 
            frame to be sized according to the inserted object's natural extents.
            <para/>
            If BottomRight is specified, it determines the extents for the frame. This 
            may result in the inserted object's being scaled to fit the specified rectangle.
            <para/>
            After calling this method, you must call the GTApplication.RefreshWindows 
            method to make sure the object is redrawn properly.
            </remarks>
            <returns>IGTPlotFrame</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotWindow.InsertObjectFromProgID(System.String,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to, given a ProgID, insert an OLE object into the plot.</summary>
            <param name="ProgID">The ProgID with which to create the embedded object.</param>
            <param name="TopLeft">The location of the top-left corner of the new frame.</param>
            <remarks>Default value null is used for BottomRight.</remarks>
            <returns>IGTPlotFrame</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotWindow.InsertObjectFromProgID(System.String,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint)">
            <summary>Method to, given a ProgID, insert an OLE object into the plot.</summary>
            <param name="ProgID">The ProgID with which to create the embedded object.</param>
            <param name="TopLeft">The location of the top-left corner of the new frame.</param>
            <param name="BottomRight">The bottom-right corner of the new frame.</param>
            <remarks>The extents of the frame are derived from the extents of the OLE object.
            <para/>
            The normal usage should be to leave off the BottomRight argument. This causes the resulting frame to be sized according to the inserted object's natural extents.
            <para/>
            If BottomRight is specified, it determines the extents for the frame. This may result in the inserted object's being scaled to fit the specified rectangle.
            <para/>
            One use of this method might be to create a new Excel spreadsheet. The GTPlotFrame.EmbeddedObect property can be used to retrieve a pointer to traverse the 
            spreadsheet's automation. With this, the spreadsheet can be populated with data from a map or a query.
            <para/>
            After calling this method, you must call the GTApplication.RefreshWindows method to make sure the object is redrawn properly.</remarks>
            <returns>IGTPlotFrame</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotWindow.InsertMap(Intergraph.GTechnology.API.IGTPaperRange)">
            <summary>Method to insert a map object into the plot.</summary>
            <param name="Location">The location of new frame.</param>
            <remarks>After calling this method, you must call the GTApplication.RefreshWindows method to make sure the object is redrawn properly.</remarks>
            <returns>IGTPlotMap</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotWindow.PrintPlot(System.String)">
            <summary>Method to print the plot window.</summary>
            <param name="PrinterName">The name of the printer to which to print.</param>
            <remarks>Default value null is used for PrintProperties.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlotWindow.PrintPlot(System.String,Intergraph.GTechnology.API.IGTPrintProperties)">
            <summary>Method to print the plot window.</summary>
            <param name="PrinterName">The name of the printer to which to print.</param>
            <param name="PrintProperties">A specification of printer properties that can be used to override the default print settings.</param>
            <remarks>If the GTPrintProperties.DocumentName property is not set, the default document name is the name of the plot displayed in the specified GTPlotWindow.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotWindow.ActiveFrame">
            <summary>Property to return a pointer to the currently active IGTPlotFrame.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotWindow.Caption">
            <summary>Property to return/set the window title for the plot window.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotWindow.hWnd">
            <summary>Property to return a handle to the current plot window's client window.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotWindow.MousePointer">
            <summary>Property to return/set the mouse pointer value for the plot window.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotWindow.NamedPlot">
            <summary>Property to return the named plot object currently being viewed in the plot window.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotWindow.WindowState">
            <summary>Property to return/set the state of the plot window.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTMouseEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTCustomCommandHelper mouse events - Click, DblClick, MouseDown, MouseMove, and MouseUp.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTMouseEventArgs.#ctor(Intergraph.GTechnology.API.IGTMapWindow@,System.Int16,System.Int16,Intergraph.GTechnology.API.IGTPoint@,Intergraph.GTechnology.API.IGTPoint@)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTMouseEventArgs class.</summary>
            <param name="MapWindow">MapWindow argument value.</param>
            <param name="Button">Button argument value.</param>
            <param name="Key">Key argument value.</param>
            <param name="WindowPoint">WindowPoint argument value.</param>
            <param name="WorldPoint">WorldPoint argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTMouseEventArgs.Button">
            <summary>Button argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTKeyPressEventArgs">
            <summary>Base class that provides data for the Intergraph.GTechnology.API.IGTCustomCommandHelper KeyPress event.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTKeyPressEventArgs.#ctor(Intergraph.GTechnology.API.IGTMapWindow@,System.Int16)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTKeyPressEventArgs class.</summary>
            <param name="MapWindow">MapWindow argument value.</param>
            <param name="KeyAscii">KeyAscii argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTKeyPressEventArgs.MapWindow">
            <summary>MapWindow argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTKeyPressEventArgs.KeyAscii">
            <summary>KeyAscii argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSegment">
            <summary>Intergraph G/Technology IGTSegment API.</summary>
            <remarks>
            IGTSegment represents a line or line segment formed by 2 points.  If the segment is "extended", then the line segment
            is extended infinitely in both directions.  Otherwise, the segment is just the line segment between the two points.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSegment.ProjectPoint(Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            The ProjectPoint function projects a given point on to this line segment.
            </summary>
            <param name="point">Input point.</param>
            <remarks>
            The return is the perpendicular projection of the point onto the segment. If the projection is not on the segment, and
            the segment's IsExtended property is false, then the point returned is the nearest end point (with Type property equal to
            GTSegmentPointType.gtsptOnEndpoint).  If the projection is not on the segment, and the segment's IsExtended property is
            true, then the point returned is the perpendicular projection of the point onto the extended segment (with Type property
            equal to GTSegmentPointType.gtsptOnExtendedSegment).  If the projected point is on the segment, the Type property of the
            return value will be GTSegmentPointType.gtsptOnSegment.
            </remarks>
            <returns>IGTSegmentPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSegment.Includes(Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            Determines if the given point is on this segment.  If the segment's IsExtended property is true, this function raises
            an exception.
            </summary>
            <param name="point">IGTPoint to be tested to find if it is on the segment.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSegment.Intersect(Intergraph.GTechnology.API.IGTSegment)">
            <summary>
            Computes the intersection of this segment with the given segment.  If no intersection exists, an empty
            array is returned.  If the two segments overlap, a single IGTSegmentPoint is returned with a Type property
            of gtsptOverlap.  If either segment's IsExtended property is true, then that segment is considered to be
            extended infinitely in both directions for the purposes of computing the intersection.
            </summary>
            <param name="segment">IGTSegment given for intersection computation.</param>
            <returns>IGTSegmentPoint[]</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSegment.Intersect(Intergraph.GTechnology.API.IGTArcGeometry)">
            <summary>
            Computes the intersection(s) between this segment and the given arc.  If this segment's IsExtended property
            is true, then the intersections include any intersections with the extension of the segment.
            The returned array may contain zero, one, or two elements.  If any intersections are returned, their Type
            property will either be gtsptOnSegment or gtsptOnExtendedSegment.
            </summary>
            <param name="arc">IGTArcGeometry given for intersection computation.</param>
            <returns>IGTSegmentPoint[]</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSegment.ProjectPointAtAngle(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,System.Double)">
            <summary>
            Returns a projected point by deriving the lines that pass through the anchor point at the specified angle increment from
            the original line segment and then projecting the reference point onto the closest derived line.
            </summary>
            <remarks>
            Uses positional tolerance.
            <para/>
            The angle increment must be greater than 0 and less than or equal to 180 degrees.
            <para/>
            The extendability of the input segment is ignored.
            </remarks>
            <param name="anchor_point">Point used to define the location of the orthogonal line.</param>
            <param name="reference_point">Point to be projected onto the orthognal line.</param>
            <param name="angle">Angle increment used to derive the lines to which the reference point 
            will be projected. For example, an angle increment of 90 would be used to calculate a point 
            orthogonal to the input line segment.</param>
            <returns>IGTPoint</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSegment.Point1">
            <summary>
            Set or returns Point1
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSegment.Point2">
            <summary>
            Set or returns Point2
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSegment.Begin">
            <summary>
            Sets or returns the beginning point of the segment.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSegment.End">
            <summary>
            Sets or returns the ending point of the segment.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSegment.IsExtended">
            <summary>
            Gets or sets the indication of whether this line segment is extended infinitely in both directions.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTMultiSectionCableService">
            <summary>Intergraph G/Technology IGTMultiSectionCableService API.</summary>
            <remarks>
            The IGTMultiSectionCableService object is used to return the ordered cable sections and component-length labels of a given cable in a multisection cable model. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMultiSectionCableService.GetOrderedSections">
            <summary>Method to return a recordset containing the ordered sections.</summary>
            <remarks>The recordset returned by this method has the following layout:
            <list type="table">
            <listheader>
            <term>Field</term>
            <term>Type</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>G3E_FNO</term>
            <term>Integer</term>
            <description>The input cable feature number.</description>
            </item>
            <item>
            <term>G3E_FID</term>
            <term>Long</term>
            <description>The input cable feature identifier.</description>
            </item>
            <item>
            <term>G3E_CNO</term>
            <term>Integer</term>
            <description>The cable section component number.</description>
            </item>
            <item>
            <term>G3E_CID</term>
            <term>Integer</term>
            <description>The cable section component occurrence.</description>
            </item>
            <item>
            <term>G3E_DETAILID</term>
            <term>Long</term>
            <description>The detail ID of the cable section. The value will be Null for geo sections.</description>
            </item>
            <item>
            <term>G3E_STARTLOCATION</term>
            <term>Double</term>
            <description>The start location of the cable section.</description>
            </item>
            <item>
            <term>G3E_SECTIONLENGTH</term>
            <term>Double</term>
            <description>The length of the cable section.</description>
            </item>
            <item>
            <term>G3E_GEOMETRICLENGTH</term>
            <term>Double</term>
            <description>The geometric length of the cable section.</description>
            </item>
            </list>
            </remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMultiSectionCableService.GetOrderedComponentLengthLabels(System.Int16,System.Int16)">
            <summary>Method to return a recordset containing the ordered component length labels for a given section.</summary>
            <param name="SectionCNO">Differentiates between the geo and detail component labels because the same CID can exist in both of them.</param>
            <param name="SectionCID">The section component occurrence that relates to the sequence attribute of the component length labels.</param>
            <remarks>The recordset returned by this method has the following layout:
            <list type="table">
            <listheader>
            <term>Field</term>
            <term>Type</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>G3E_FNO</term>
            <term>Integer</term>
            <description>The input cable feature number.</description>
            </item>
            <item>
            <term>G3E_FID</term>
            <term>Long</term>
            <description>The input cable feature identifier.</description>
            </item>
            <item>
            <term>G3E_SECTIONCNO</term>
            <term>Integer</term>
            <description>The cable section component number.</description>
            </item>
            <item>
            <term>G3E_SECTIONCID</term>
            <term>Integer</term>
            <description>The cable section component occurrence.</description>
            </item>
            <item>
            <term>G3E_DETAILID</term>
            <term>Long</term>
            <description>The detail ID of the cable section. The value will be Null for geo sections.</description>
            </item>
            <item>
            <term>G3E_COMPLENLABELCNO</term>
            <term>Integer</term>
            <description>The component number of the cable component length label associated with a cable section.</description>
            </item>
            <item>
            <term>G3E_ COMPLENLABELCID</term>
            <term>Integer</term>
            <description>The component occurrence of the cable component length label associated with a cable section.</description>
            </item>
            <item>
            <term>G3E_COMPLENGTH</term>
            <term>Double</term>
            <description>The component length associated with the cable component length label.</description>
            </item>
            <item>
            <term>G3E_DISTANCEFROMSTART</term>
            <term>Double</term>
            <description>The geometric distance of the component length label from the start point of the cable section.</description>
            </item>
            </list>
            </remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMultiSectionCableService.CableFID">
            <summary>Property to return/set the Cable feature identifier.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMultiSectionCableService.CableFNO">
            <summary>Property to return/set the Cable feature number.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMultiSectionCableService.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMultiSectionCableService.TotalLength">
            <summary>Property to return the total length of the Cable feature.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTGraphicComponents">
            <summary>Intergraph G/Technology IGTGraphicComponents API.</summary>
            <remarks>An IGTGraphicComponents object is a collection of IGTGraphicComponent objects that contains information about all of the digitized components of the current feature instance.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTGraphicComponents.Add(Intergraph.GTechnology.API.IGTGraphicComponent)">
            <summary>Method to add a IGTGraphicComponent object to the collection.</summary>
            <param name="oGTGraphicComponent">IGTGraphicComponent object to be added to the collection.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when oGTGraphicComponent is Null.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTGraphicComponents.Item(System.Int32)">
            <summary>Property to return a specific IGTGraphicComponent in the collection.</summary>
            <param name="index">The positional index into the collection of the IGTGraphicComponent object to be returned.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTComponent">
            <summary>Intergraph G/Technology IGTComponent API.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTComponent.CNO">
            <summary>Property to return the CNO of the component.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTComponent.DataContext">
            <summary>Property to return the IGTDataContext object associated with this component.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTComponent.Geometry">
            <summary>Property to return/set the geometry associated with the current row of the component recordset.</summary>
            <remarks>This property returns Nothing if there is no geometry. You must position the Recordset to the correct row 
            before getting or setting this property.
            <para/>The geometry objects can be any of the G/Technology geometry objects.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTComponent.Name">
            <summary>Property to return the name of the component.</summary>
            <remarks>The name comes from G3E_COMPONENT.G3E_NAME. </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTComponent.Recordset">
            <summary>Property to return the recordset associated with this component.</summary>
            <remarks>In an Edit scenario, this property causes a database query to be executed when it is 
            first accessed. In a placement scenario, accessing this property does not cause a database query.
            <para/>
            <list type="bullet">
            <item>Functional interfaces are executed as certain operations are done on the component's recordset.
            <para/>
            <b>Example:</b> When you set a field value or GTComponent.Geometry, SetValue Functional interfaces are executed.</item>
            <item>AddNew Functional interfaces are executed for each new row that you add. CNO, CID and database 
            defaults are automatically populated. You are responsible for populating FNO and FID.
            <para/><list type="number">
            <item>When adding a row, you have the option of inheriting attribute values from the most recently placed feature. If you use 
            this capability, these attribute values override any database defaults that have been defined.</item>
            <item>To take advantage of this, you must supply the FNO when you add a new row.</item>
            <item>You can populate other attribute values in the same AddNew call. See the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ado270/htm/mdconaddingmultiple.asp">ADO documentation</see> for passing an array of fields 
            and their corresponding values. Or you can populate other attributes after the AddNew call by simply setting the appropriate field values.</item>
            </list>
            </item>
            <item>When you delete a row, all Functional interfaces defined for this component are created and the Delete method is called on each one.</item>
            <item>Update Functional interfaces are executed when this object's contents are saved to the database.</item>
            <item>CancelUpdate Functional interfaces are executed when you call GTComponent.Recordset.CancelUpdate.</item>
            </list>
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTComponent.RecordsetLocal">
            <summary>Property to return whether the recordset has been populated on the client's machine yet.</summary>
            <remarks>True is returned if the GTComponent.Recordset property has previously been requested; otherwise, False is returned.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTComponent.TableName">
            <summary>Property to return the database table name associated with this component.</summary>
            <remarks>This is the table that is queried when the Recordset property is requested the first 
            time. The table name comes from G3E_COMPONENT.G3E_TABLE.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTKeyEventArgs">
            <summary>Base class that provides data for the Intergraph.GTechnology.API.IGTCustomCommandHelper events - KeyUp and KeyDown.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTKeyEventArgs.#ctor(Intergraph.GTechnology.API.IGTMapWindow@,System.Int16,System.Int16)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTKeyEventArgs class.</summary>
            <param name="MapWindow">MapWindow argument value.</param>
            <param name="KeyCode">KeyCode argument value.</param>
            <param name="ShiftState">ShiftState argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTKeyEventArgs.MapWindow">
            <summary>MapWindow argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTKeyEventArgs.KeyCode">
            <summary>KeyCode argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTKeyEventArgs.ShiftState">
            <summary>ShiftState argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSegmentPoint">
            <summary>Intergraph G/Technology IGTSegmentPoint API.</summary>
            <remarks>
            IGTSegmentPoint is used by some geometry math functions to return a point with additional information
            about how the point was computed.  IGTSegmentPoint may represent the result of an intersection operation
            (e.g., <see cref="M:Intergraph.GTechnology.API.IGTSegment.Intersect(Intergraph.GTechnology.API.IGTSegment)"/>) or a projection operation (e.g., <see cref="M:Intergraph.GTechnology.API.IGTPoint.ProjectTo(Intergraph.GTechnology.API.IGTSegment)"/>).
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSegmentPoint.Point">
            <summary>
            Sets or returns the point designated by this object.  The set accessor makes a copy of the input
            point.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSegmentPoint.Type">
            <summary>
            Sets or returns the type associated with the point.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTGeometryTypeConstants">
            <summary>
            Defines constants for the type strings returned by each type of geometry object.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtArcGeometry">
            <summary>
            String returned by IGTArcGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtBoundaryGeometry">
            <summary>
            String returned by IGTBoundaryGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtPointGeometry">
            <summary>
            String returned by IGTPointGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtOrientedPointGeometry">
            <summary>
            String returned by IGTOrientedPointGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtLineGeometry">
            <summary>
            String returned by IGTLineGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtPolylineGeometry">
            <summary>
            String returned by IGTPolylineGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtPolygonGeometry">
            <summary>
            String returned by IGTPolygonGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtTextPointGeometry">
            <summary>
            String returned by IGTTextPointGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtCompositePolylineGeometry">
            <summary>
            String returned by IGTCompositePolylineGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtCompositePolygonGeometry">
            <summary>
            String returned by IGTCompositePolygonGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtRasterGeometry">
            <summary>
            String returned by IGTRasterGeometry.Type.
            </summary>
        </member>
        <member name="F:Intergraph.GTechnology.API.GTGeometryTypeConstants.gtgtGeometryCollection">
            <summary>
            String returned by IGTGeometryCollection.Type.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTComputeMarkerLocation">
            <summary>The Intergraph G/Technology IGTComputeMarkerLocation Interface calculates the projected geographic point for the given detail marker location point.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTComputeMarkerLocation.Compute(ADODB.Recordset,System.Double)">
            <summary>Method to compute the marker location for each input candidate feature.</summary>
            <remarks>This method should return a recordset containing all the information required to create a marker.</remarks>
            <param name="CandidateFeatures">The collection of candidate features</param>
            <param name="StopCriteria">The input stop criteria value</param>
            <returns>Recordset</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComputeMarkerLocation.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
            <remarks>Since the interface can be launched by the Net or desktop application, this property indicates the appropriate database.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComputeMarkerLocation.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTComputeGeoPoint">
            <summary>The Intergraph G/Technology IGTComputeGeoPoint Interface calculates the projected geographic point for the given detail marker location point.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTComputeGeoPoint.Compute(ADODB.Recordset)">
            <summary>Method to compute the projected geo point for the marker location.</summary>
            <remarks>This method is used if the point calculated exists in the detail window and needs to be projected back to the geographic.
            <para/>
            The input recordset structure is similar to the output recordset of the IGTComputeMarkerLocation interface.
            <para/>
            The output recordset is a clone of the input recordset with the detail points appended to it. 
            </remarks>
            <param name="InputRecordset">Contains all the information necessary to determine the alternate geo point for a given detail component of a feature</param>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComputeGeoPoint.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComputeGeoPoint.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
            <remarks>Since the interface can be launched by the Net or desktop application, this property indicates the appropriate database. 
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTLoopMakeup">
            <summary>The Intergraph G/Technology IGTLoopMakeup Interface can be used to customize the Loop Makeup command in the following areas:
            <list type="bullet">
            <item>Report titling></item>
            <item>Feature processing</item>
            <item>Post processing</item>
            </list>
            <para/>
            The \GTechnology\Services\MetadataEntries\NETSamples\LoopMakeup directory contains an example .NET implementation.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTLoopMakeup.PostProcess(ADODB.Recordset,System.String@)">
            <summary>Method called after a successful loop makeup has been performed.</summary>
            <remarks>This method allows you to output the results of a loop makeup to a post process and embellish the report as you see fit.
            <para/>
            Additional analytics can be performed on a loop makeup result to provide feedback about potential issues in a network. The 
            loop-makeup-result recordset is provided to the method so that you can provide a string containing an error or warning message 
            pertinent to the loop. The string will be included in the output recordset and may be displayed in a report.</remarks>
            <param name="LMUOutput">The loop makeup output recordset containing the results of the loop.</param>
            <param name="Failures">Returns a string containing failures that will be reported to the user at the bottom of the loop makeup 
            report.  Use newline string ("\r\n") as separator string between faliure strings.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTLoopMakeup.ProcessFeature(ADODB.Recordset,ADODB.Recordset,System.String@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Method called when any feature defined in the G3E_LMUFeature metadata table is encountered in the network.</summary>
            <remarks>The Loop Makeup command continues to process all the features it supports, but you can override the default calculations 
            with your own calculations or add new features to Loop Makeup.
            <para/>
            As Loop Makeup walks the traced network from the starting point to the ending point, feature by feature, the processor is 
            called. The feature processor can specify the following:
            <list type="bullet">
            <item>Any change to the total length, total resistance, or total loss.</item>
            <item>Any length, resistance, or loss that will be added to the totals and included as part of the output recordset.</item>
            <item>Any length, resistance, or loss that will be added to the build out totals and included as part of the output recordset.</item>
            <item>Any custom annotation for the feature on the report.</item>
            </list>
            </remarks>
            <param name="LMUParameters">The recordset of input parameters to the command. See LMUInput Recordset structure below.</param>
            <param name="Feature">The feature recordset currently being processed and on the correct row.</param>
            <param name="Description">The description to annotate in the output recordset. This is set by the command but may be overwritten by the interface.</param>
            <param name="BuildOutLoss">Returns the calculated resistance the current feature applies to the total buildout loss.</param>
            <param name="BuildOutResistance">Returns the calculated resistance the current feature applies to the total buildout resistance.</param>
            <param name="BuildOutLength">Returns the calculated resistance the current feature applies to the total buildout length.</param>
            <param name="Loss">Returns the calculated loss the current feature applies to the total network loss. This value is automatically added to the total loss by the loop makeup command.</param>
            <param name="Resistance">Returns the calculated resistance the current feature applies to the total network resistance. This value is automatically added to the total resistance by the loop makeup command.</param>
            <param name="Length">Returns the calculated length the current feature applies to the total network length. This value is automatically added to the total length by the loop makeup command.</param>
            <param name="TotalLoss">The current total accumulated loss which may be reset by the interface.</param>
            <param name="TotalResistance">The current total accumulated resistance which may be reset by the interface.</param>
            <param name="TotalLength">The current total accumulated length which may be reset by the interface.</param>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTLoopMakeup.ReportTitle(ADODB.Recordset,System.String@)">
            <summary>Method called after a successful loop makeup and before the post process has been performed.  This method provides a mechanism to override the Loop Makeup report title.</summary>
            <remarks>This method could be used, for example, to retrieve the address of the starting feature.</remarks>
            <param name="LMUOutput">The loop makeup output recordset containing the results of the loop.</param>
            <param name="Title">Specifies and returns the title for the loop makeup report.</param>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTLoopMakeup.MetadataService">
            <summary>Property to return/set the IGTMetadata object associated with this interface.</summary>
            <remarks>The MetadataService property grants the custom LMU object access to the database and published metadata.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.Interfaces.IGTComputePartialStartValue">
            <summary>The Intergraph G/Technology IGTComputePartialStartValue Interface determines the partial length value for the selected part of the seed feature.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.Interfaces.IGTComputePartialStartValue.Compute(Intergraph.GTechnology.API.IGTKeyObject,Intergraph.GTechnology.API.IGTPoint,System.Int32)">
            <summary>Method to compute the partial start value.</summary>
            <param name="KeyObject">Represents the selected feature and/or component.</param>
            <param name="Point">The selected point of the feature.</param>
            <param name="DetailID">The identifier of the detail related to the selected feature. If a detail is not involved, then a value of 0 is expected for geographic.</param>
            <returns>double</returns>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComputePartialStartValue.Arguments">
            <summary>Property to return/set the metadata-defined arguments for this interface.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.Interfaces.IGTComputePartialStartValue.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this interface.</summary>
            <remarks>Since the interface can be launched by the Net or desktop application, this property indicates the appropriate database.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSpatialService">
            <summary>Intergraph G/Technology IGTSpatialService API.</summary>
            <remarks>
            The IGTSpatialService object interface filters specified component view records by applying a specified operator over a specified geometry. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.GetResultsByComponentView(System.String)">
            <summary>Method to return records from the input component view whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="ComponentViewName">Specified component view name.</param>
            <remarks>The returned ADODB.Recordset has key fields (G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID).</remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.GetResultsByFNO(System.Int16[])">
            <summary>Method to return records from the component views (as specified by the input FNOArray and ComponentViewRetrievalMode) whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="FNOArray">Array of feature numbers.</param>
            <remarks>Default values 0, gtddcgPrimaryGeographic, and false are used for AlternateGeoOrdinal, ComponentViewRetrievalMode and IncludeReferencingFeatureRecords.</remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.GetResultsByFNO(System.Int16[],System.Int16)">
            <summary>Method to return records from the component views (as specified by the input FNOArray and ComponentViewRetrievalMode) whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="FNOArray">Array of feature numbers.</param>
            <param name="AlternateGeoOrdinal">0 = Geographic</param>
            <remarks>Default values gtddcgPrimaryGeographic, and false are used for ComponentViewRetrievalMode and IncludeReferencingFeatureRecords.</remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.GetResultsByFNO(System.Int16[],System.Int16,Intergraph.GTechnology.API.GTComponentGeometryConstants)">
            <summary>Method to return records from the component views (as specified by the input FNOArray and ComponentViewRetrievalMode) whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="FNOArray">Array of feature numbers.</param>
            <param name="AlternateGeoOrdinal">0 = Geographic</param>
            <param name="ComponentViewRetrievalMode">Use the gtddcgPrimaryGeographic constant to indicate Primary Geographic or Alternate Geographic components.</param>
            <remarks>Default value false is used for  IncludeReferencingFeatureRecords.</remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.GetResultsByFNO(System.Int16[],System.Int16,Intergraph.GTechnology.API.GTComponentGeometryConstants,System.Boolean)">
            <summary>Method to return records from the component views (as specified by the input FNOArray and ComponentViewRetrievalMode) whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="FNOArray">Array of feature numbers.</param>
            <param name="AlternateGeoOrdinal">0 = Geographic</param>
            <param name="ComponentViewRetrievalMode">Use the gtddcgPrimaryGeographic constant to indicate Primary Geographic or Alternate Geographic components.</param>
            <param name="IncludeReferencingFeatureRecords">When this argument is set to True, the service looks at the detail referencing features in addition to the features specified in the FNOArray.</param>
            <remarks>The returned ADODB.Recordset has key fields (G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID).
            <para/>If the value in G3E_DETAILMAPPING.G3E_CONTAINEDFNO is in the FNOArray, then any features of the feature class specified by G3E_DETAILMAPPING.G3E_REFERENCINGFNO that meet the spatial criteria 
            will be included in the resulting recordset.
            <para/>Referencing features define detail areas (identified in G3E_DETAIL) that can contain the features specified in the FNOArray argument. There may not actually be any features from the 
            FNOArray in the detail areas. You will have to use the detail identifier associated with these referencing features to issue a query to find the actual instance data for the contained features.</remarks>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.WriteResultsByComponentView(System.String)">
            <summary>Method to write keys to the database for those records from the input component view whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="ComponentViewName">Component view whose geometry is to be compared to FilterGeometry.</param>
            <remarks>Default value G3E_TEMPKEYS is used for  TemporaryTable.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.WriteResultsByComponentView(System.String,System.String)">
            <summary>Method to write keys to the database for those records from the input component view whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="ComponentViewName">Component view whose geometry is to be compared to FilterGeometry.</param>
            <param name="TemporaryTable">Default value is G3E_TEMPKEYS.</param>
            <remarks>A database transaction must be started before this method is called. The caller is also expected to commit the transaction after calling this method.
            <para/>The method writes key field (G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID) values to the specified temporary database table. The method does not create the 
            specified temporary table in the database. The temporary table must already exist with key fields.
            <para/>If callers do not start a transaction or do not specify a temporary table, then they must maintain the table and identify the written records by the method.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.WriteResultsByFNO(System.Int16[])">
            <summary>Method to write keys to the database for those records from the component views (as specified by the input FNOArray and ComponentViewRetrievalMode) whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="FNOArray">Set of FNOs whose component views' (identified by ComponentViewRetrievalMode) geometry is compared to FilterGeometry.</param>
            <remarks>Default values 0, gtddcgPrimaryGeographic, false, and G3E_TEMPKEYS are used for AlternateGeoOrdinal, ComponentViewRetrievalMode, IncludeReferencingFeatureRecords, and TemporaryTable.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.WriteResultsByFNO(System.Int16[],System.Int16)">
            <summary>Method to write keys to the database for those records from the component views (as specified by the input FNOArray and ComponentViewRetrievalMode) whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="FNOArray">Set of FNOs whose component views' (identified by ComponentViewRetrievalMode) geometry is compared to FilterGeometry.</param>
            <param name="AlternateGeoOrdinal">Default value is 0 (Geographic).</param>
            <remarks>Default values gtddcgPrimaryGeographic, false, and G3E_TEMPKEYS are used for ComponentViewRetrievalMode, IncludeReferencingFeatureRecords, and TemporaryTable.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.WriteResultsByFNO(System.Int16[],System.Int16,Intergraph.GTechnology.API.GTComponentGeometryConstants)">
            <summary>Method to write keys to the database for those records from the component views (as specified by the input FNOArray and ComponentViewRetrievalMode) whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="FNOArray">Set of FNOs whose component views' (identified by ComponentViewRetrievalMode) geometry is compared to FilterGeometry.</param>
            <param name="AlternateGeoOrdinal">Default value is 0 (Geographic).</param>
            <param name="ComponentViewRetrievalMode">Default value is gtddcgPrimaryGeographic.</param>
            <remarks>Default values false and G3E_TEMPKEYS are used for IncludeReferencingFeatureRecords and TemporaryTable.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.WriteResultsByFNO(System.Int16[],System.Int16,Intergraph.GTechnology.API.GTComponentGeometryConstants,System.Boolean)">
            <summary>Method to write keys to the database for those records from the component views (as specified by the input FNOArray and ComponentViewRetrievalMode) whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="FNOArray">Set of FNOs whose component views' (identified by ComponentViewRetrievalMode) geometry is compared to FilterGeometry.</param>
            <param name="AlternateGeoOrdinal">Default value is 0 (Geographic).</param>
            <param name="ComponentViewRetrievalMode">Default value is gtddcgPrimaryGeographic.</param>
            <param name="IncludeReferencingFeatureRecords">Default value is True. When this argument is set to True, the service looks at the detail referencing features in addition to the features specified in the FNOArray.</param>
            <remarks>Default value G3E_TEMPKEYS is used for TemporaryTable.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSpatialService.WriteResultsByFNO(System.Int16[],System.Int16,Intergraph.GTechnology.API.GTComponentGeometryConstants,System.Boolean,System.String)">
            <summary>Method to write keys to the database for those records from the component views (as specified by the input FNOArray and ComponentViewRetrievalMode) whose geometry relates spatially to the FilterGeometry based on the Operator.</summary>
            <param name="FNOArray">Set of FNOs whose component views' (identified by ComponentViewRetrievalMode) geometry is compared to FilterGeometry.</param>
            <param name="AlternateGeoOrdinal">Default value is 0 (Geographic).</param>
            <param name="ComponentViewRetrievalMode">Default value is gtddcgPrimaryGeographic.</param>
            <param name="IncludeReferencingFeatureRecords">Default value is True. When this argument is set to True, the service looks at the detail referencing features in addition to the features specified in the FNOArray.</param>
            <param name="TemporaryTable">Default value is G3E_TEMPKEYS.</param>
            <remarks>A database transaction must be started before this method is called. The caller is also expected to commit the transaction after calling this method.
            <para/>The method writes key field (G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID) values to the specified temporary database table. The method does not create the specified temporary table in the database. The temporary table 
            must already exist with key fields.
            <para/>When the IncludeReferencingFeatureRecords argument is set to True, the service looks at the detail referencing features in addition to the features specified in the FNOArray. If the value in G3E_DETAILMAPPING.G3E_CONTAINEDFNO 
            is in the FNOArray, then any features of the feature class specified by G3E_DETAILMAPPING.G3E_REFERENCINGFNO that meet the spatial criteria will be included in the resulting recordset.
            <para/>Referencing features define detail areas (identified in G3E_DETAIL) that can contain the features specified in the FNOArray argument. There may not actually be any features from the FNOArray in the detail areas. You will have 
            to use the detail identifier associated with these referencing features to issue a query to find the actual instance data for the contained features.
            <para/>If callers do not start a transaction or do not specify a temporary table, then they must maintain the table and identify the written records by the method.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSpatialService.DataContext">
            <summary>Property to return/set the IGTDataContext object associated with this service.</summary>
            <remarks>Specifying the DataContext property is required.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSpatialService.FilterGeometry">
            <summary>Property to return/set the geometry used to filter component view records.</summary>
            <remarks>Specifying the FilterGeometry property is required.
            <para/>The following are the valid filter-geometry types (GTGeometryCollection is not supported):
            <list type="bullet">
            <item>IGTArcGeometry</item>
            <item>IGTBoundaryGeometry</item>
            <item>IGTCompositePolygonGeometry</item>
            <item>IGTCompositePolylineGeometry</item>
            <item>IGTLineGeometry</item>
            <item>IGTOrientedPointGeometry</item>
            <item>IGTPointGeometry</item>
            <item>IGTPolygonGeometry</item>
            <item>IGTPolylineGeometry</item>
            <item>IGTTextPointGeometry(the text origin will be used for spatial processing and not the MBR of the text)</item>
            </list></remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSpatialService.Operator">
            <summary>Property to return/set the spatial operator to be applied when using the specified geometry to filter component view records.</summary>
            <remarks>Specifying the Operator property is required.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSchematicElements">
            <summary>Intergraph G/Technology IGTSchematicElements API.</summary>
            <remarks>Represents a collection of schematic elements.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicElements.Item(System.Int32)">
            <summary>
            Gets the GTSchematicElement from the collection at the specified index.
            </summary>
            <param name="index">Index of the network element. Must be between 1 and the number of elements in the collection.</param>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPDFPrinterProperties">
            <summary>Intergraph G/Technology IGTPDFPrinterProperties API.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPDFPrinterProperties.Orientation">
            <summary>
            Property to return/set the PDF layout (Portrait/Landscape) of PDF printer driver. Default value is Landscape.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPDFPrinterProperties.PageSize">
            <summary>
            Property to return/set the page size of PDF printer driver. Default value is A4.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPDFPrinterProperties.PageHeight">
            <summary>
            Property to return/set the page height of PDF printer driver. Default value is 0.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPDFPrinterProperties.PageWidth">
            <summary>
            Property to return/set the paper width of PDF printer driver. Default value is 0.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPDFPrinterProperties.HorizontalMargin">
            <summary>
            Property to return/set the horizontal margin of PDF printer driver. Default value is 0.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPDFPrinterProperties.VerticalMargin">
            <summary>
            Property to return/set the vertical margin of PDF printer driver. Default value is 0.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPDFPrinterProperties.Resolution">
            <summary>
            Property to return/set the resolution of PDF printer driver. Default value is 600dpi.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPDFPrinterProperties.EmbedFont">
            <summary>
            Property to return/set the embed font flag of PDF printer driver. Default value is true.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPDFPrinterProperties.HardwarePrinterName">
            <summary>
            Property to return/set the hardware printer name if soft copy generated by PDF printer driver needs to be printed by hardware printer. Default value is empty string.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPDFPrinterProperties.MultiLingualSupport">
            <summary>
            Property to return/set the multiLingualsupport flag of PDF printer driver. Default value is true.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTExportService">
            <summary>Intergraph G/Technology IGTExportService API.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTExportService.SaveAsDGN(System.String,Intergraph.GTechnology.API.DGNVersion,Intergraph.GTechnology.API.CADGeometryDimension,System.String,System.String)">
            <summary>Export the map window's contents to MicroStation file format.</summary>
            <param name="destFileName">Full path of the generated DGN filename.</param>
            <param name="version">MicroStation Versions : V7 = 7 and V8 = 8.</param>
            <param name="dimension">CAD Geometry Dimension : Output2D = 2 and Output3D = 3.</param>
            <param name="seedFileName">Optional full path of the seedFileName. Defaults to the one specified in FileUNCPath.xml file else specified in default location - Install directory\Templates\DesignFiles.</param>
            <param name="coordSystemFileName">Optional full path of the coordinate system file. Defaults to the one specified in FileUNCPath.xml file.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the path of destFileName does not exist.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when seedFileName or coordSystemFileName does not exist.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when destFileName is null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTExportService.SaveAsDGN(System.String,Intergraph.GTechnology.API.DGNVersion,Intergraph.GTechnology.API.CADGeometryDimension,System.String)">
            <summary>Export the map window's contents to MicroStation file format.</summary>
            <param name="destFileName">Full path of the generated DGN filename.</param>
            <param name="version">MicroStation Versions : V7 = 7 and V8 = 8.</param>
            <param name="dimension">CAD Geometry Dimension : Output2D = 2 and Output3D = 3.</param>
            <param name="seedFileName">Optional full path of the seedFileName. Defaults to the one specified in FileUNCPath.xml file else specified in default location - Install directory\Templates\DesignFiles.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the path of destFileName does not exist.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when seedFileName does not exist.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when destFileName is null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTExportService.SaveAsDGN(System.String,Intergraph.GTechnology.API.DGNVersion,Intergraph.GTechnology.API.CADGeometryDimension)">
            <summary>Export the map window's contents to MicroStation file format.</summary>
            <param name="destFileName">Full path of the generated DGN filename.</param>
            <param name="version">MicroStation Versions : V7 = 7 and V8 = 8.</param>
            <param name="dimension">CAD Geometry Dimension : Output2D = 2 and Output3D = 3.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the path of destFileName does not exist.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when destFileName is null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTExportService.SaveAsAutoCAD(System.String,Intergraph.GTechnology.API.AutoCADOutputFileType,Intergraph.GTechnology.API.CADGeometryDimension,System.String)">
            <summary>Export the map window's contents to AutoCAD file format.</summary>
            <param name="destFileName">Full path of the generated AutoCAD filename.</param>
            <param name="fileType">AutoCAD output file types : AutoCAD DWG format - DWG = 0, AutoCAD ASCII DXF - ASCIIDXF = 1, AutoCAD Binary DXF - BinaryDXF = 2.</param>
            <param name="dimension">CAD Geometry Dimension : Output2D = 2 and Output3D = 3.</param>
            <param name="coordSystemFileName">Optional full path of the coordinate system file. Defaults to the one specified in FileUNCPath.xml file.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the path of destFileName does not exist.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when coordSystemFileName does not exist.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when destFileName is null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTExportService.SaveAsAutoCAD(System.String,Intergraph.GTechnology.API.AutoCADOutputFileType,Intergraph.GTechnology.API.CADGeometryDimension)">
            <summary>Export the map window's contents to AutoCAD file format.</summary>
            <param name="destFileName">Full path of the generated AutoCAD filename.</param>
            <param name="fileType">AutoCAD output file types : AutoCAD DWG format - DWG = 0, AutoCAD ASCII DXF - ASCIIDXF = 1, AutoCAD Binary DXF - BinaryDXF = 2.</param>
            <param name="dimension">CAD Geometry Dimension : Output2D = 2 and Output3D = 3.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the path of destFileName does not exist.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when destFileName is null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTExportService.SaveAsPDF(System.String,Intergraph.GTechnology.API.IGTPDFPrinterProperties)">
            <summary>Export the active window's contents to PDF file format.</summary>
            <param name="destFileName">Full path of the generated PDF filename.</param>
            <param name="properties">Properties bag for AMYUNI PDF Converter control.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the path of destFileName does not exist.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when destFileName is null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTExportService.SaveAsPDF(System.String,Intergraph.GTechnology.API.IGTPDFPrinterProperties,Intergraph.GTechnology.API.IGTMapWindow,System.Boolean)">
            <summary>Export the map window's contents to PDF file format.</summary>
            <param name="destFileName">Full path of the target PDF filename.</param>
            <param name="properties">Properties bag for AMYUNI PDF Converter control.</param>
            <param name="mapWindow">Map window to be exported.</param>
            <param name="append">Append the results to destFileName, if destFileName already exists; otherwise create/overwrite FileName.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the path of destFileName does not exist.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when destFileName is null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTExportService.SaveAsPDF(System.String,Intergraph.GTechnology.API.IGTPDFPrinterProperties,Intergraph.GTechnology.API.IGTPlotWindow,System.Boolean)">
            <summary>Export the plot window's contents to PDF file format.</summary>
            <param name="destFileName">Full path of the target PDF filename.</param>
            <param name="properties">Properties bag for AMYUNI PDF Converter control.</param>
            <param name="plotWindow">Plot window to be exported.</param>
            <param name="append">Append the results to destFileName, if destFileName already exists; otherwise create/overwrite destFileName.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the path of destFileName does not exist.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when destFileName is null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTExportService.AppendPDF(System.String,System.String)">
            <summary>Append the PDF contents of sourceFileName to destFileName.</summary>
            <param name="sourceFileName">Full path of the PDF filename whose contents should be appended to destFileName.</param>
            <param name="destFileName">Full path of the PDF filename whose contents should appear first.</param>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when sourceFileName or destFileName does not exist.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when sourceFileName or destFileName is null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTExportService.AppendPDF(System.String,System.String,System.String)">
            <summary>Append the PDF contents of sourceFileName to destFileName to create newFileName.</summary>
            <param name="sourceFileName">Full path of the PDF filename whose contents should be appended to destFileName.</param>
            <param name="destFileName">Full path of the PDF filename whose contents should appear first.</param>
            <param name="newFileName">Full path of the new PDF filename.</param>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when sourceFileName or destFileName does not exist.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the path of newFileName does not exist.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when sourceFileName, destFileName, or newFileName is null.</exception>
            <remarks>The contents of destFileName are not changed.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTExportService.DataContext">
            <summary>
            Property to return/set the IGTDataContext object.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTExportService.PDFLayersEnabled">
            <summary>
            Property to return/set whether PDF layers should be exported.  Default value is true.
            </summary>
            <remarks>Applies to the SaveAsPDF methods only.<para/>
            <para/>
            When set to false, PDF layers are not exported.<para/>
            <para/>
            When set to true, PDF layer processing is enabled.  This means PDF layers have the
            potential to be exported.  However, there are restrictions that can keep them from
            being exported:
            <list type="bullet">
            <item>If there are any translucent items in the window, layers are not exported.</item>
            </list>
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTLostFocusEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTCustomCommandHelper LostFocus event.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTLostFocusEventArgs.#ctor(Intergraph.GTechnology.API.IGTMapWindow@)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTLostFocusEventArgs class.</summary>
            <param name="PreviousMapWindow">PreviousMapWindow argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTLostFocusEventArgs.PreviousMapWindow">
            <summary>PreviousMapWindow argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTActivateEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTCustomCommandHelper.Activate event.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTActivateEventArgs.#ctor(Intergraph.GTechnology.API.IGTMapWindow@,System.Boolean,System.Boolean)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTActivateEventArgs class.</summary>
            <param name="MapWindow">MapWindow argument value.</param>
            <param name="FromClick">FromClick argument value.</param>
            <param name="Minimized">Minimized argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTActivateEventArgs.MapWindow">
            <summary>MapWindow argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTActivateEventArgs.FromClick">
            <summary>FromClick argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTActivateEventArgs.Minimized">
            <summary>Minimized argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSchematicLabel">
            <summary>
            Intergraph G/Technology IGTSchematicLabel API. Represents the label of a schematic element.
            </summary>
            <remarks>
            Represents the label of a schematic element.
            Each IGTSchematicLabel object represents a label for a schematic element. This 
            object allows IGTAugmentNetworkAttribution to specify the characteristics of the label 
            or to modify the component view data used to generate the label.
            <para/>
            When Generate is called on the parent IGTSchematicElement, or when the IGTAugmentNetworkAttribution 
            object returns from its Execute method, the first element in the Primary property's collection is 
            used to generate the label. If the Primary property's collection is empty, the first element of the A
            lternate property's collection is used. If that collection is also empty, then no label will be 
            generated for this IGTSchematicLabel object.
            <para/>
            The Position and Alignment properties together specify where the label text is drawn. Each label has 
            a geographic location, a point, that tells the display system where the label is located. The Position 
            property specifies to GTSchematicDisplayService how to calculate that point's location, relative to the 
            element (a node or an edge) it is labeling.
            <para/>
            The Alignment property further tells the display system where to draw the label text relative to the 
            point computed from the Position.
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicLabel.Alignment">
            <summary>
            Gets of sets the horizontal alignment of a label.
            </summary>
            <remarks>The alignment of a label specifies how the text is drawn in relation to the label's 
            geometric location. An Alignment of gtalCenterCenter draws the text so that the center (both 
            horizontally and vertically) of the label text aligns with the geographic position of the 
            label. An Alignment of gtalTopLeft draws the label so that the top-left corner of the label 
            text aligns with the geographic position of the label. This is the same as the alignment 
            specification for a text style in the G/Technology display system.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicLabel.Alternate">
            <summary>
            Gets the alternate component view data instances of an element.
            </summary>
            <remarks>There is one item in this collection for each row found 
            in the alternate component view whose G3E_FID matches the G3E_FID 
            in the element. If there are no matching records, or if an alternate 
            view is not specified in the metadata, the collection is empty.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicLabel.Index">
            <summary>
            Gets the zero-based index of a label within the IGTSchematicElement.GTSchematicLabels collection.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicLabel.Position">
            <summary>
            Gets or sets the vertical position of a label.
            </summary>
            <remarks>The position of a label specifies its geographic location relative to the element it labels.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicLabel.Primary">
            <summary>
            Gets the primary component view data instances.
            </summary>
            <remarks>There is one item in this collection for each row found in the primary component view whose G3E_FID 
            matches the G3E_FID in the element. If there are no matching records, the collection is empty.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicLabel.StyleID">
            <summary>
            Gets or sets the style identifier of a label.
            </summary>
            <remarks>This property is Null until the IGTSchematicElement.Generate method has been called.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicLabel.Text">
            <summary>
            Gets or sets the text of a label.
            </summary>
            <remarks>This property is Null until the IGTSchematicElement.Generate method has been called.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicLabel.ToolTip">
            <summary>
            Gets or sets the tool tip of a label.
            </summary>
            <remarks>This property is Null until the IGTSchematicElement.Generate method has been called.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSchematicDataInstances">
            <summary>
            Intergraph G/Technology IGTSchematicDataInstances API.
            </summary>
            <remarks>
            IGTSchematicDataInstances is a collection object that provides access to the component view information corresponding to a network element. There is one IGTSchematicDataInstance member of this collection for each component view record with a matching G3E_FID. If there are no such component view records, the collection is empty. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicDataInstances.Add(Intergraph.GTechnology.API.IGTSchematicDataInstance)">
            <summary>
            Adds the specified IGTSchematicDataInstance object to the GTSchematicDataInstances collection.
            </summary>
            <param name="instance">The IGTSchematicDataInstance to add.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicDataInstances.Remove(Intergraph.GTechnology.API.IGTSchematicDataInstance)">
            <summary>
            Removes the specified IGTSchematicDataInstance object from the collection.
            </summary>
            <param name="instance">The IGTSchematicDataInstance to remove.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicDataInstances.RemoveAt(System.Int32)">
            <summary>
            Removes the data instance at the specified index from the collection.
            </summary>
            <param name="index">The index of the data instance to remove.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicDataInstances.Item(System.Int32)">
            <summary>
            Gets the IGTSchematicDataInstance from the collection at the specified index.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPrintProperties">
            <summary>Intergraph G/Technology IGTPrintProperties API.</summary>
            <remarks>The IGTPrintProperties object is used in the IGTPlotWindow.PrintPlot 
            method to specify information about the output. These properties, if specified, override any 
            printer settings specified through Page Setup or the printer's Properties page. In all cases, if one of 
            these properties is not set, the default is determined by Page Setup or by the printer's properties.
            <para/>
            There are several ways to specify what size paper to use for printing. In order of increasing precedence, they are as follows:
            <list type="bullet">
            <item>Set the PaperSize property to a valid standard paper size designation.</item>
            <item>Set the PaperName property to a valid standard paper size name.</item>
            <item>Set the PaperWidth and PaperHeight properties to the desired dimensions.</item>
            </list></remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPrintProperties.Copies">
            <summary>Property to return/set the number of copies to print.</summary>
            <remarks>If not set, this value defaults to 1.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPrintProperties.DocumentName">
            <summary>Property to return/set the name given to the print job.</summary>
            <remarks>Typically, this name appears in the printer's queue listing to indicate 
            the document being printed. It is also used by some PDF and other file format printer 
            drivers as a default for the file name.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPrintProperties.Orientation">
            <summary>Property to return/set the print layout(Portrait/Landscape).</summary>
            <remarks>Paper size is always specified as width times height, where width is always less than height.
            <para/>
            Using a gtpoPortrait orientation causes the output to appear on the page with the width horizontal and 
            height vertical. Using gtpoLandscape causes the output to appear on the page with the width vertical and 
            height horizontal.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPrintProperties.PaperHeight">
            <summary>Property to return/set a custom height for the paper.</summary>
            <remarks>If this property is set, then the PaperWidth property must also 
            be set, and together they override any setting of PaperName or PaperSize. This 
            value is specified in paper units.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPrintProperties.PaperName">
            <summary>Property to return/set the paper size using a name from a set of enumerated values.</summary>
            <remarks>This property overrides any settings of PaperSize, but is ignored if both PaperWidth and PaperHeight are set.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPrintProperties.PaperSize">
            <summary>Property to return/set the paper size using a set of enumerated values.</summary>
            <remarks>This property is ignored if the PaperName property is set or if both the PaperWidth and PaperHeight properties are set.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPrintProperties.PaperWidth">
            <summary>Property to return/set a custom width for the paper.</summary>
            <remarks>If this property is set, then the PaperHeight property must also be set, and together they override any setting of 
            PaperName or PaperSize. This value is specified in paper units.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPlotFrames">
            <summary>Intergraph G/Technology IGTPlotFrames API.</summary>
            <remarks>
            IGTPlotFrames object provides a collection of map or embedded object frames on a NamedPlot. This collection can be obtained from the IGTNamedPlot.Frames property. 
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrames.Item(System.Int32)">
            <summary>Property to return a specific IGTPlotFrame in the collection.</summary>
            <param name="index">The zero-based numeric index of the frame.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlotFrames.Item(System.String)">
            <summary>Property to return a specific IGTPlotFrame in the collection.</summary>
            <param name="FrameName">The name of the frame.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when FrameName is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when FrameName is not found in the collection.</exception>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTMatrix">
            <summary>Intergraph G/Technology IGTMatrix API.</summary>
            <remarks>
            IGTMatrix represents a 4x4 three-dimensional matrix.  IGTMatrix is often used to
            hold a coordinate transformation matrix.  The elements of a transformation matrix
            have the following meanings:
            <list type="table">
                <listheader>
                    <item>Element 0,0</item><description>X-coordinate portion of scaling/rotation of X</description>
                    <item>Element 0,1</item><description>X-coordinate portion of scaling/rotation of Y</description>
                    <item>Element 0,2</item><description>X-coordinate portion of scaling/rotation of Z</description>
                    <item>Element 0,3</item><description>Translation of X-coordinate.</description>
                    <item>Element 1,0</item><description>Y-coordinate portion of scaling/rotation of X</description>
                    <item>Element 1,1</item><description>Y-coordinate portion of scaling/rotation of Y</description>
                    <item>Element 1,2</item><description>Y-coordinate portion of scaling/rotation of Z</description>
                    <item>Element 1,3</item><description>Translation of Y-coordinate.</description>
                    <item>Element 2,0</item><description>Z-coordinate portion of scaling/rotation of X</description>
                    <item>Element 2,1</item><description>Z-coordinate portion of scaling/rotation of Y</description>
                    <item>Element 2,2</item><description>Z-coordinate portion of scaling/rotation of Z</description>
                    <item>Element 2,3</item><description>Translation of Z-coordinate.</description>
                    <item>Element 3,0</item><description>Should be 0.0</description>
                    <item>Element 3,1</item><description>Should be 0.0</description>
                    <item>Element 3,2</item><description>Should be 0.0</description>
                    <item>Element 3,3</item><description>Should be 1.0</description>
                </listheader>
            </list>
            <para/>
            All other elements should be equal to the corresponding elements of the identity matrix.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMatrix.Multiply(Intergraph.GTechnology.API.IGTMatrix,Intergraph.GTechnology.API.IGTMatrix)">
            <summary>
            Returns the product of the two given matrices.
            </summary>
            <param name="m1">A GTMatrix object.</param>
            <param name="m2">A GTMatrix object.</param>
            <returns>IGTMatrix</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMatrix.Invert">
            <summary>
            Returns the inverse of this matrix.
            </summary>
            <returns>IGTMatrix</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMatrix.TransformPoint(Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            Returns the point that results from using this matrix to transform
            the point <paramref name="p"/>.
            </summary>
            <param name="p">A GTPoint in 3-D space.</param>
            <returns>IGTPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTMatrix.TransformVector(Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Returns the vector that results from transforming the vector <paramref name="v"/>
            with this matrix.
            </summary>
            <param name="v">A IGTVector object.</param>
            <returns>IGTVector</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMatrix.M_Matrix">
            <summary>
            Returns 4x4 three-dimensional matrix.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMatrix.Row0">
            <summary>
            Returns a vector containing the elements from the first row of the matrix.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMatrix.Row1">
            <summary>
            Returns a vector containing the elements from the second row of the matrix.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMatrix.Row2">
            <summary>
            Returns a vector containing the elements from the third row of the matrix.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMatrix.Translation">
            <summary>
            Returns a vector containing the elements from the fourth row of the matrix.
            When a matrix is used as a coordinate transformation, the fourth row represents
            the translation portion of the transformation.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMatrix.Column0">
            <summary>
            Returns a vector containing the elements from the first column of the matrix.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMatrix.Column1">
            <summary>
            Returns a vector containing the elements from the second column of the matrix.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMatrix.Column2">
            <summary>
            Returns a vector containing the elements from the third column of the matrix.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTMatrix.Item(System.Int32,System.Int32)">
            <summary>
            Returns or sets a particular element of the matrix.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTCustomCommandHelper">
            <summary>Intergraph G/Technology IGTCustomCommandHelper API.</summary>
            <remarks>
            It provides event input to the command and "finished" notification to the system
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTCustomCommandHelper.Complete">
            <summary>Method to be called when a modeless custom command, specifically an event listener, is finished.</summary>
            <remarks>This method should not be called in the custom command’s Terminate method as this throws the software into 
            an endless loop. The Complete method calls the custom command Terminate method.</remarks>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.Activate">
            <summary>Event raised to the custom command when a map window is activated.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.Click">
            <summary>Event raised to the custom command when a map window is clicked.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.DblClick">
            <summary>Event raised to the custom command when a map window is double-clicked.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.Deactivate">
            <summary>Event raised to the custom command when a map window is deactivated.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.GainedFocus">
            <summary>Event raised to the custom command when a map window gains focus.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.KeyDown">
            <summary>Event raised to the custom command when the map window processes a key-down operation.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.KeyPress">
            <summary>Event raised to the custom command when the map window processes a key-press operation.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.KeyUp">
            <summary>Event raised to the custom command when the map window processes a key-up operation.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.LostFocus">
            <summary>Event raised to the custom command when a map window loses focus.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.MouseDown">
            <summary>Event raised to the custom command when the map window processes a mouse-down operation.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.MouseMove">
            <summary>Event raised to the custom command when the map window processes a mouse-move operation.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.MouseUp">
            <summary>Event raised to the custom command when the map window processes a mouse-up operation.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTCustomCommandHelper.WheelRotate">
            <summary>Event raised to the custom command when the map window processes a mouse-wheel operation.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTArcGeometry">
            <summary>Intergraph G/Technology IGTArcGeometry API.</summary>
            <remarks>The IGTArcGeometry object represents a circular arc.  Arcs are defined by a starting point, an
            ending point, a radius, a normal vector, and a "greater than pi" flag.  By defining the arc
            this way, we guarantee that the starting and ending points are exact, which provides accurate
            "meeting points" with other line and arc geometries in a linear feature.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.GetChordInfo(System.Double@,Intergraph.GTechnology.API.IGTPoint@,Intergraph.GTechnology.API.IGTVector@)">
            <summary>
            Returns the length of half of the chord connecting the endpoints of the arc, the midpoint of
            that chord, and the perpendicular bisector of that chord.  This version operates on the given
            arc object.
            </summary>
            <param name="half_chord">Half of the chord which connects the arc endpoints.</param>
            <param name="chord_middle">Midpoint of the chord which connects the arc endpoints.</param>
            <param name="bisector">Perpendicular bisector of the chord which connects the arc endpoints.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.PointIsWithinArc(Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            Returns true if the given point, which must lie on the circle containing this arc,
            actually lies on the arc.
            </summary>
            <param name="point_on_arc">Point which must lie on the circle containing the arc.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.GetChordInfo(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTVector,System.Boolean,System.Double@,Intergraph.GTechnology.API.IGTPoint@,Intergraph.GTechnology.API.IGTVector@)">
            <summary>
            Returns the length of half of the chord connecting the endpoints of the arc, the midpoint of
            that chord, and the perpendicular bisector of that chord.  The static version accepts the arc
            parameters (such as the start point) as parameters.  This version is supplied for callers who
            do not already have an arc geometry object.
            </summary>
            <param name="start">Starting point of the arc.</param>
            <param name="end">Ending point of the arc.</param>
            <param name="normal">The normal vector of the arc, which determines the plane containing the arc as well as the direction of sweep.</param>
            <param name="greater_than_pi">Whether the arc is greater than (true) or less than or equal (false) to a half circle.</param>
            <param name="half_chord">Half of the chord which connects the arc endpoints.</param>
            <param name="chord_middle">Midpoint of the chord which connects the arc endpoints.</param>
            <param name="bisector">Perpendicular bisector of the chord which connects the arc endpoints.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.GetOrigin(System.Double,System.Double,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTVector,Intergraph.GTechnology.API.IGTVector)">
            <summary>Returns the center point of the arc specified by radius, half_chord, chord_middle, bisector and normal.  This is
            equivalent to the Origin property of an arc whose parameters match the given values.</summary>
            <param name="radius">The radius of the cicle containing the arc.</param>
            <param name="half_chord">Half of the chord which connects the arc endpoints.</param>
            <param name="chord_middle">Midpoint of the chord which connects the arc endpoints.</param>
            <param name="bisector">Perpendicular bisector of the chord which connects the arc endpoints.</param>
            <param name="normal">The normal vector of the arc, which determines the plane containing the arc as well as the direction of sweep.</param>
            <returns>IGTPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.GetMidPoint(System.Double,System.Boolean,System.Double,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTVector,Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Returns the midpoint -- the point on the arc halfway between the Start and End points -- of
            the arc with the given parameters.
            </summary>
            <param name="radius">The radius of the cicle containing the arc.</param>
            <param name="greater_than_pi">Whether the arc is greater than (true) or less than or equal (false) to a half circle.</param>
            <param name="half_chord">Half of the chord which connects the arc endpoints.</param>
            <param name="chord_middle">Midpoint of the chord which connects the arc endpoints.</param>
            <param name="bisector">Perpendicular bisector of the chord which connects the arc endpoints.</param>
            <param name="normal">The normal vector of the arc, which determines the plane containing the arc as well as the direction of sweep.</param>
            <returns>IGTPoint</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.PointIsWithinArc(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTVector,Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            Returns true if the given point, which must lie on the circle containing the arc,
            actually lies on the arc.  The <paramref name="normal"/> vector
            defines the direction of sweep.
            </summary>
            <param name="start">Starting point of the arc.</param>
            <param name="end">Ending point of the arc.</param>
            <param name="normal">The normal vector of the arc, which determines the plane containing the arc as well as the direction of sweep.</param>
            <param name="test_point">Point which must lie on the circle containing the arc.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.ComputeArcBy3Points(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            Returns an arc geometry that passes through the 3 given points.
            </summary>
            <param name="start">Starting point of the arc.</param>
            <param name="arc_point">Point on the arc.  Must not lie on the line connecting
            <paramref name="start"/> and <paramref name="end"/>.</param>
            <param name="end">Ending point of the arc.</param>
            <returns>IGTArcGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.ComputeArcByOriginAndPoints(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTVector)">
            <summary>
            Returns an arc with the specified origin (center point), starting and ending points, and the
            specified normal vector.
            </summary>
            <param name="origin">The center of the circle containing the arc.</param>
            <param name="start">Starting point of the arc.</param>
            <param name="end">Ending point of the arc.</param>
            <param name="normal">The normal vector of the arc, which determines the plane containing the arc as well as the direction of sweep.</param>
            <returns>IGTArcGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.ComputeArcByOriginAndAngles(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTVector,System.Double,System.Double,System.Double)">
            <summary>
            Returns an arc with the specified origin (center point), normal vector, and radius,
            where the starting point of the arc is at the specified <paramref name="start_angle"/>
            (measured relative to the x-axis) from the origin, and the ending point of the arc is
            at the specified <paramref name="sweep_angle"/> (measured relative to the
            <paramref name="start_angle"/>) from the origin.
            </summary>
            <param name="origin">The center of the circle containing the arc.</param>
            <param name="normal">The normal vector of the arc, which determines the plane
            containing the arc as well as the direction of sweep.</param>
            <param name="radius">The radius of the cicle containing the arc.</param>
            <param name="start_angle">The angle, in radians, formed by the line joining the origin to the starting
            point of the arc, measured relative to the positive x-axis.</param>
            <param name="sweep_angle">The angle, in radians, formed by the two radii joining the origin to the starting
            and ending points of the arc.</param>
            <returns>IGTArcGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.ComputeArcByRadiusAndTangents(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,System.Double)">
            <summary>
            Returns an arc with the specified <paramref name="radius"/>.  The given tangent points
            determine two lines that are tangent to the arc at the arc's starting and ending points.
            Note that the lines are extended in either direction as far as necessary to be tangent to
            the arc.
            <para/>
            If no arc can be determined from the given input values, the ArgumentOutOfRangeException
            is thrown.  For example, if the given lines are parallel, a unique arc is not determinable.
            </summary>
            <remarks>
            <img src="../AdditionalContent/ArcAPI7.gif" alt="ComputeArcByRadiusAndTangents Example1"/>
            <para/>
            The start point of the arc is on extended line (Start1, End1) and its end point is on extended line (Start2, End2). The 
            tangent of the arc at its start point is the same as the angle of (Start1, End1). The tangent of the arc at its end point 
            is the same as the angle of (Start2, End2). The arc has the radius specified by the Radius input parameter.
            <para/>
            If this method is used to compute a fillet arc, the caller may need to perform additional validation of the input parameters 
            based on what is considered to be a fillet in the workflow being implemented.
            <para/>
            If computing a fillet arc, the custom code may also need to validate whether the output arc is a valid fillet in the workflow being implemented.
            <para/>
            Positional tolerance must be greater than zero for all calculations to complete successfully.
            </remarks>
            <param name="tangent1_start">Starting point of the first tangent line.</param>
            <param name="tangent1_end">Ending point of the first tangent line.</param>
            <param name="tangent2_start">Starting point of the second tangent line.</param>
            <param name="tangent2_end">Ending point of the second tangent line.</param>
            <param name="radius">The radius of the cicle containing the arc.</param>
            <returns>IGTArcGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.ComputeArcByPointAndTangents(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint)">
            <summary>
            This method is similar to ComputeArcByRadiusAndTangents, except that the second given point,
            <paramref name="tangent1_end_arc_start"/>, represents the endpoint of the first tangent line and
            the starting point of the arc.
            <para/>
            If no arc can be determined from the given input values, the ArgumentOutOfRangeException
            is thrown.
            </summary>
            <remarks>
            <img src="../AdditionalContent/ArcAPI5.gif" alt="ComputeArcByPointAndTangents Example1"/>
            <para/>
            The start point of the arc is identical with End1 and the end point of the arc is on the extended line (Start2, End2). The tangent 
            of arc at its start point is the same as the angle of the line (Start1, End1). The tangent of arc at its end point is the same as 
            the angle of the line (Start2, End2).
            <para/>
            When the lines (Start1, End1) and (Start2, End2) are parallel (but not collinear), the end point of the arc is calculated as an 
            intersection of the extended line Start2, End2 and the line perpendicular to (Start1, End1) passing through End1.
            <para/>
            <img src="../AdditionalContent/ArcAPI6.gif" alt="ComputeArcByPointAndTangents Example2"/>
            <para/>
            If this method is used to compute a fillet arc, the caller may need to perform additional validation of the input parameters based on what is considered to be a fillet in the workflow being implemented.
            <para/>
            If computing a fillet arc, the custom code may also need to validate whether the output arc is a valid fillet in the workflow being implemented.
            <para/>
            Positional tolerance must be greater than zero for all calculations to complete successfully.
            </remarks>
            <param name="tangent1_start">Starting point of the first tangent line.</param>
            <param name="tangent1_end_arc_start">Ending point of the first tangent line and starting point of the arc.</param>
            <param name="tangent2_start">Starting point of the second tangent line.</param>
            <param name="tangent2_end">Ending point of the second tangent line.</param>
            <returns>Returns an arc</returns>
            <returns>IGTArcGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.ComputeArcsBy2PointsAndRadius(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,System.Double)">
            <summary>
            Returns an array of IGTArcGeometry objects representing all possible arcs with the given starting
            point, ending point, and radius.  The returned array may have 0, 2, or 4 elements, depending on
            the relationship between the given radius and the distance between the <paramref name="start"/>
            and <paramref name="end"/> points:
            <para/>
            <list type="table">
            <listheader><term>Number of arcs</term><description>Condition</description></listheader>
            <item>
                <term>0</term>
                <description>Given radius is greater than the distance between <paramref name="start"/>
                    and <paramref name="end"/>.
                </description>
            </item>
            <item>
                <term>2</term>
                <description>Given radius is exactly equal to the distance between <paramref name="start"/>
                    and <paramref name="end"/>.  Each arc is a semicircle.
                </description>
            </item>
            <item>
                <term>4</term>
                <description>Given radius is less than the distance between <paramref name="start"/>
                    and <paramref name="end"/>.  The 4 arcs form two circles that intersect at the
                    given points.
                </description>
            </item>
            </list>
            The length of the returned array can be used to determine how many arcs were computed.
            </summary>
            <param name="start">Starting point of the arc.</param>
            <param name="end">Ending point of the arc.</param>
            <param name="radius">Radius of the circle containing the arc.</param>
            <remarks>The method returns the number of computed arcs as follows:
            <para/>
            <list type="bullet">
            <item>No arc is returned if 2 * Radius is less than the distance between Start and End.
            <para/>
            <img src="../AdditionalContent/ArcAPI1.gif" alt="ComputeArcsBy2PointsAndRadius Example1"/>
            </item>
            <item>No arc is also returned if Start and End are within positional tolerance.</item>
            <item>Two arcs (half-circles) are returned if 2 * Radius equals the distance between Start and End.
            <para/>
            <img src="../AdditionalContent/ArcAPI2.gif" alt="ComputeArcsBy2PointsAndRadius Example2"/>
            </item>
            <item>Four arcs are returned if 2 * Radius is greater than the distance between Start and End.
            <para/>
            <img src="../AdditionalContent/ArcAPI3.gif" alt="ComputeArcsBy2PointsAndRadius Example3"/>
            <para/>
            <b>Note:</b>  The order in which the four output parameters of this function are populated with 
            arc geometries may differ from the order in which the arcs are indexed on the above picture.
            </item>
            </list>
            <para/>
            Positional tolerance must be greater than zero for all calculations to complete successfully.</remarks>
            <returns>IGTArcGeometry[]</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.ComputeArcBy2PointsAndTangent(Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTPoint,System.Double)">
            <summary>
            Returns an arc with the given starting and ending points, where the tangent line to the
            arc at the starting point forms an angle of <paramref name="tangent_angle_at_start"/> radians
            with the positive x-axis.
            <para/>
            Note that
            <code>ComputeArcBy2PointsAndTangent(p1, p2, angle)</code>
            and
            <code>ComputeArcBy2PointsAndTangent(p1, p2, angle+pi)</code>
            yield complementary arcs that form a complete circle.
            <para/>
            If no arc can be determined from the given input values, the ArgumentOutOfRangeException
            is thrown.  For example, if the angle formed by the line through <paramref name="start"/>
            and <paramref name="end"/> is equal to <paramref name="tangent_angle_at_start"/>, no arc
            can be computed.
            </summary>
            <remarks>
            <img src="../AdditionalContent/ArcAPI4.gif" alt="ComputeArcBy2PointsAndTangent Example"/>
            <para/>
            Positional tolerance must be greater than zero for all calculations to complete successfully. 
            </remarks>
            <param name="start">Starting point of the arc.</param>
            <param name="end">Ending point of the arc.</param>
            <param name="tangent_angle_at_start">Angle between the arc starting point tangent and positive x-axis.</param>
            <returns>IGTArcGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.Intersect(Intergraph.GTechnology.API.IGTSegment)">
            <summary>
            Computes the intersection(s) between this arc and the given segment.  If the segment's IsExtended property
            is true, then the intersections include any intersections with the extension of the segment.
            The returned array may contain zero, one, or two elements.  If any intersections are returned, their Type
            property will either be gtsptOnSegment or gtsptOnExtendedSegment.
            </summary>
            <param name="segment">IGTSegment given for intersection computation.</param>
            <returns>An array of Intersection points between the arc and a given segment</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTArcGeometry.Intersect(Intergraph.GTechnology.API.IGTArcGeometry)">
            <summary>
            Computes the intersection(s) between this arc and the given arc.  The returned array may contain zero, one,
            or two elements.  If the arcs overlap, then one element will be returned with a Type property of gtsptOverlap.
            Otherwise, the Type property of all returned elements (if any) will be gtsptOnSegment.
            </summary>
            <param name="arc">IGTArcGeometry given for intersection computation.</param>
            <returns>An array of Intersection points between the arc and a given arc</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTArcGeometry.Start">
            <summary>
            Returns or sets the starting point of the arc.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTArcGeometry.End">
            <summary>
            Returns or sets the ending point of the arc.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTArcGeometry.Radius">
            <summary>
            Returns or sets the radius of the arc.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTArcGeometry.Normal">
            <summary>
            Returns or sets the normal vector for the arc.  The normal vector determines the direction
            of the arc's sweep as well as the plane of the arc.  The sweep direction follows the right-hand
            rule for vectors.  For example, a normal of [0, 0, 1] (in the positive Z-direction) determines
            an arc in the XY-plane that sweeps counter-clockwise.
            <para/>
            Given a starting point, and ending point, and a radius, there are an infinite number of possible
            arcs with those properties.  When the arc is restricted to a particular plane by the Normal
            vector, there are 4 possible arcs -- two that sweep clockwise and two that sweep counter-clockwise.
            The Normal vector's direction (using the right-hand rule) further narrows these choices to two.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTArcGeometry.GreaterThanPi">
            <summary>
            Returns or sets a Boolean flag determining whether the arc is greater than (true)
            or less than or equal (false) to a half circle.  This flag chooses one of the two
            possible arcs that pass through the given starting and ending points with the given
            radius and Normal vector.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTArcGeometry.Origin">
            <summary>
            Returns the center point of this arc.  <seealso cref="M:Intergraph.GTechnology.API.IGTArcGeometry.GetOrigin(System.Double,System.Double,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTVector,Intergraph.GTechnology.API.IGTVector)"/>.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTArcGeometry.MidPoint">
            <summary>
            Returns the midpoint -- the point on the arc halfway between the Start and End points -- of
            this arc.  <seealso cref="M:Intergraph.GTechnology.API.IGTArcGeometry.GetMidPoint(System.Double,System.Boolean,System.Double,Intergraph.GTechnology.API.IGTPoint,Intergraph.GTechnology.API.IGTVector,Intergraph.GTechnology.API.IGTVector)"/>.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTTransactionManager">
            <summary>Intergraph G/Technology IGTTransactionManager API.</summary>
            <remarks>A IGTTransactionManager object manages database transactions. Its methods 
            and properties are passed as part of a Custom Command interface and Import Feature 
            interface.
            <para/>
            IGTTransactionManager is available to a custom command if its enabling conditions 
            include "New transaction available" and if there is an active job when the command 
            is first invoked. This implies that you should also set the "Active job exists" enabling 
            condition.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTTransactionManager.Begin(System.String)">
            <summary>Method to begin a transaction.</summary>
            <param name="Description">Identifies the current transaction. This value will appear in the Undo command menu item after the transaction is committed.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTTransactionManager.Commit">
            <summary>Method to end a transaction, save changes to the database  and optionally refresh deltas for the active job.</summary>
            <remarks>Default value true is used for RefreshJobChanges.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTTransactionManager.Commit(System.Boolean)">
            <summary>Method to end a transaction, save changes to the database  and optionally refresh deltas for the active job.</summary>
            <param name="RefreshJobChanges">Indicates whether or not job changes should be refreshed.</param>
            <remarks>Although passing True or omitting the parameter is the most common usage, there are cases where it makes sense to pass False. In each case, the goal is to make the client software and the database do the least amount of work, which yields faster processing.
            <para/>
            <b>Examples:</b>
            <list type="bullet">
            <item>You are doing several transactions in one command. It is correct to pass False for the first transactions and True for the final transaction. Passing True on the final transaction refreshes all job changes made in the earlier transactions as well as the last one.</item>
            <item>Your command requires database changes from all users to be seen in the client. You should pass False to Commit for each transaction done by your command. After calling Commit with False on the final transaction, you should call <see cref="M:Intergraph.GTechnology.API.IGTTransactionManager.RefreshDatabaseChanges">IGTTransactionManager.RefreshDatabaseChanges</see>. This 
            refreshes all database changes made recently by other users, and it refreshes all job changes made in the transactions just committed.</item>
            </list>
            <para/>
            After calling the Commit method, you should call the IGTApplication's RefreshWindows method to display the changes in the application windows. If your command calls Commit multiple times, it is best to call RefreshWindows one time after the final Commit or after calling 
            RefreshDatabaseChanges, whichever is last.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTTransactionManager.Rollback">
            <summary>Method to end a transaction without saving changes to the database.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTTransactionManager.RefreshDatabaseChanges">
            <summary>Method to refresh the current session with the database changes from all users who have posted master database changes.  This broadcast includes all master deltas and deltas for the active job.</summary>
            <remarks>Calling this function causes the contents of the select set to be cleared, removing all objects from the <see cref="T:Intergraph.GTechnology.API.IGTSelectedObjects">IGTSelectedObjects</see> collection.
            <para/>This method should be used sparingly. The Commit method topic describes how to refresh changes to the active job only. The Commit method also gives an example as to when you might call Commit 
            followed by RefreshDatabaseChanges. However, these methods are not typically combined.
            <para/>After calling the RefreshDatabaseChanges method, you should call the <see cref="M:Intergraph.GTechnology.API.IGTApplication.RefreshWindows">IGTApplication.RefreshWindows</see> method to display the changes in the application windows.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTTransactionManager.TransactionInProgress">
            <summary>Property to return whether a transaction is in progress.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTDDCKeyObjects">
            <summary>Intergraph G/Technology IGTDDCKeyObjects API.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDDCKeyObjects.Add(Intergraph.GTechnology.API.IGTDDCKeyObject)">
            <summary>Method to add a IGTDDCKeyObject to the collection.</summary>
            <param name="DDCKeyObject">Object to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when DDCKeyObject is Null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDDCKeyObjects.Clear">
            <summary>Method to clear all the items from the collection.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDDCKeyObjects.Remove(Intergraph.GTechnology.API.IGTDDCKeyObject)">
            <summary>Method to remove a IGTDDCKeyObject from the collection.</summary>
            <param name="DDCKeyObject">Object to remove from the collection.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when DDCKeyObject is Null.</exception>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDDCKeyObjects.RemoveAt(System.Int32)">
            <summary>Method to remove a IGTDDCKeyObject from the collection.</summary>
            <param name="index">The zero-based numeric index of the IGTDDCKeyObject.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDDCKeyObjects.Item(System.Int32)">
            <summary>Property to return a specific IGTDDCKeyObject in the collection.</summary>
            <param name="index">Must be a numeric index.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is out of range.</exception>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDDCKeyObjects.Count">
            <summary>Property to return a number of items in the collection.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDDCKeyObjects.Capacity">
            <summary>Gets or sets the number of elements that IGTDDCKeyObjects can contain.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTPreferenceChangedEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTAppication PreferenceChanged event.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTPreferenceChangedEventArgs.#ctor(System.String,System.Object,Intergraph.GTechnology.API.GTPreferenceChangedConstants)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTPreferenceChangedEventArgs class.</summary>
            <param name="Name">The name of the preference that was changed.</param>
            <param name="Value">The new value of the preference.</param>
            <param name="Action">Determines whether a preference has been added, modified, or deleted from the preference set.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTPreferenceChangedEventArgs.Name">
            <summary>Name argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTPreferenceChangedEventArgs.Value">
            <summary>Value argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTPreferenceChangedEventArgs.Action">
            <summary>Action argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSchematicGeneratorService">
            <summary>
            Intergraph G/Technology IGTSchematicGeneratorService API.
            </summary>
            <remarks>
            The IGTSchematicGeneratorService object provides the interface for specifying the format and other layout parameters of a 
            schematic. It also provides the interface for obtaining the resulting layout merged with the correct symbology and label content.
            <para/>
            The IGTSchematicGeneratorService accepts the network data and layout parameters and combines these with metadata to generate a 
            schematic. The service then gathers and measures the symbology information and label content for each feature in the trace data. Optionally, 
            the data can be processed by the IGTAugmentNetworkAttribution object. The IGTSchematicGeneratorService performs the actual layout of the 
            schematic and augments the input data with the location, rotation, and other information about the schematic entities that it positioned 
            during the layout phase. The IGTSchematicGeneratorService can also append and update trace data to existing schematic data. The following 
            diagram displays the functional areas of the schematic generation process that are encapsulated by the service:
            <para/><img src="../AdditionalContent/GTSchematicGeneratorServiceFunctAreas.gif" alt="IGTSchematicGeneratorService Example1"/>
            <para/>
            The schematic input parameters, network data, resulting layout, and all other information is stored and shared between the components as XML. The 
            structure is defined using an XML schema. The XML will not only preserve the schematic data (final graphic layout), but all the information that 
            was needed to create it.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicGeneratorService.Append(System.String,ADODB.Recordset)">
            <summary>Method to append the specified network of entities with the specified unique identifier to the schematic.</summary>
            <param name="name">The name given to the network of entities.</param>
            <param name="network">The network of entities to append to the schematic.</param>
            <remarks>Specifying the Append method will append a new network of entities with the specified name to the schematic and return a unique identifier.
            <para/>
            <b>Append Method Input Recordset Definition</b>
            <para/>
            This recordset defines a network that is appended using the GTSchematicGeneratorService Append method. The data types are ADODB.DataTypeEnum enumerated values.
            <para/>Typically, results from the TRACERESULT table will be used to create the input recordset; however, the input recordset could come from customized code 
            that uses the fields as specified in the Recordset Definition table. In this case, connectivity will have to be properly defined. See the Trace Results Table 
            topic for further information.
            <para/>The following fields are required in the input recordset. These same fields are also used in a query from the TRACERESULT table. The TRACERESULT table 
            is used by the Schematic Manager sample command.
            <para/>
            <list type="table">
            <listheader>
            <term>Field Name</term>
            <term>Optional</term>
            <term>Null</term>
            <term>Data Type</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>G3E_FID</term>
            <term>No</term>
            <term>No</term>
            <term>adInteger</term>
            <description>The feature identifier of the network entity.</description>
            </item>
            <item>
            <term>G3E_FNO</term>
            <term>No</term>
            <term>No</term>
            <term>adSmallInt</term>
            <description>The feature number of the network entity.</description>
            </item>
            <item>
            <term>G3E_TRACEORDER</term>
            <term>No</term>
            <term>No</term>
            <term>adInteger</term>
            <description>The order in which the network entity was discovered during the trace.</description>
            </item>
            <item>
            <term>G3E_NODE1</term>
            <term>No</term>
            <term>No</term>
            <term>adInteger</term>
            <description>The first node value given to the entity from the relationship table.</description>
            </item>
            <item>
            <term>G3E_NODE2</term>
            <term>No</term>
            <term>No</term>
            <term>adInteger</term>
            <description>The second node value given to the entity from the relationship table.</description>
            </item>
            <item>
            <term>G3E_SOURCENODE</term>
            <term>No</term>
            <term>No</term>
            <term>adInteger</term>
            <description>The node value from the relationship table that sourced this network entity.</description>
            </item>
            </list>
            </remarks>
            <returns>int</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicGeneratorService.Layout">
            <summary>Method to layout the schematic entities.</summary>
            <remarks>Specifying the Layout method will lay out and update the current schematic XML.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicGeneratorService.Remove(System.Int32)">
            <summary>Method to remove the network of entities with the specified unique identifier from the schematic.</summary>
            <param name="identifier">The network identifier to remove from the schematic XML.</param>
            <remarks>Specifying the Remove method will remove the specified network from the schematic.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicGeneratorService.Simplify(System.String)">
            <summary>Method to perform linear simplification using the specified attribute on all the networks contained in the schematic.</summary>
            <param name="attribute">The name of an XML attribute to be used in deciding whether two edges can be merged. This can be the name of a 
            built-in attribute for the element such as StyleID or the name of an attribute that was added using the AugmentNetworkAttributionName 
            property.</param>
            <remarks>Specifying the Simplify method will perform linear and node simplification on all the networks in the schematic.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTSchematicGeneratorService.Update(System.Int32,ADODB.Recordset)">
            <summary>Method to update the network with the new network of entities having the specified unique identifier.</summary>
            <param name="identifier">The identifier for the new network of entities.</param>
            <param name="network">The new network of entities.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.AugmentNetworkAttributionName">
            <summary>Property to return/set the type and assembly name where the implementation of the IGTAugmentNetworkAttribute interface exists.</summary>
            <remarks>If this property value is non-Null, the IGTSchematicGeneratorService Append method creates an instance of the specified class. The specified 
            class must implement the IGTAugmentNetworkAttribution interface. The IGTAugmentNetworkAttribution object's Execute method is called by the Append method, once 
            for each unique feature class in the network recordset.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.BusLayout">
            <summary>Property to return/set whether the layout will use the optional bus layout algorithm.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.DataContext">
            <summary>Property to return/set the data context used to retrieve metadata and feature instance data with.</summary>
            <remarks>This property must be set before any of the methods are called.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.EdgeSimplificationTolerance">
            <summary>Property to return/set the edge simplification tolerance.</summary>
            <remarks>This property must be set before any of the methods are called.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.Format">
            <summary>Property to return/set the format of the schematic.</summary>
            <remarks>This property is optional.
            <para/>This property defaults to a gtsfLeftToRight schematic format.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.MinimizeEdgeCrossings">
            <summary>Property to return/set whether to minimize the number of edge crossings in the schematic.</summary>
            <remarks>This property is optional.
            <para/>This property defaults to False.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.MinimumWhitespace">
            <summary>Property to return/set the minimum amount of whitespace between schematic entities.</summary>
            <remarks>In an oriented schematic, the ground units are equivalent to paper measurements. The minimum 
            whitespace must be a positive value. The default value is 1.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.PaperScale">
            <summary>Property to return/set the nominal paper space map scale of the target window.</summary>
            <remarks>This allows the placement of labels and symbology with specific reference to the output map scale. The 
            paper scale value should be the scale at which users will typically view the schematic for non-oriented schematics. In 
            the case of oriented schematics, the value of 1 equates to paper units. The minimum whitespace must be a positive 
            value. The default value is 1.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.SchematicDefinition">
            <summary>Property to return/set the schematic definition number.</summary>
            <remarks>This property is optional.
            <para/>This property must be set prior to calling Append.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.SchematicXML">
            <summary>Property to return/set the schematic XML.</summary>
            <remarks>This property is optional.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.StraightLine">
            <summary>Property to return/set whether the layout will not fold the schematic to minimize area.</summary>
            <remarks>If the value is True, the schematic will not fold the graph to minimize area, giving it a more giving 
            it a unidirectional structure. If False, the schematic layout will fold the graph to minimize area.
            <para/>
            This property is optional.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicGeneratorService.Type">
            <summary>Property to return/set the type of the schematic.</summary>
            <remarks>This property is optional. The property defaults to the gtstOriented type of schematic.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTSchematicAttribute">
            <summary>
            Intergraph G/Technology IGTSchematicAttribute API.
            </summary>
            <remarks>
            IGTSchematicAttribute object represents a field of the component view for a schematic element. Besides giving access to the column name and the value of the field, this object also provides a property, IncludeInXML, that allows the IGTAugmentNetworkAttribution object to specify whether or not the field should be included in the generated XML. 
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicAttribute.ColumnName">
            <summary>
            Gets or sets the column name of an attribute.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicAttribute.IncludeInXML">
            <summary>
            Gets or sets whether to include an attribute in the schematic XML.
            </summary>
            <remarks>If this property is set to True, this attribute is added to the 
            UserAttributes element of the Node or Edge XML element. UserAttributes contains 
            a child element for each attribute whose IncludeInXML property was True. This child 
            element has a ColumnName and a Value attribute, whose values are the value of the 
            ColumnName and Value properties of this object. The Value property will be converted 
            to a string to populate the Value XML attribute.
            <para/>
            The default value of this property is False, indicating that attributes from the 
            component view are not included in the XML by default.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicAttribute.Index">
            <summary>
            Gets the zero-based index of an attribute within a IGTSchematicAttributes collection.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTSchematicAttribute.Value">
            <summary>
            Gets or sets the value of an attribute.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPoints">
            <summary>Intergraph G/Technology IGTPoints API.</summary>
            <remarks>
            IGTPoints is a collection of IGTPoint objects. IGTPoint objects are created apart from the IGTPoints collection and are then added to it. They can also be removed from the collection. 
            </remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTOrientedPointGeometry">
            <summary>Intergraph G/Technology IGTOrientedPointGeometry API.</summary>
            <remarks>
            Represents a point geometry with an orientation (i.e., rotation).
            The IGTOrientedPointGeometry object consists of a single point and an 
            orientation vector. The point is stored as a IGTPoint object in the Origin property. The 
            coordinates for the origin can be returned or modified through the X, Y, and Z properties 
            of the IGTPoint object. The orientation is stored as a IGTVector object in the Orientation 
            property. The components of the orientation vector can be returned or modified through the 
            I, J, and K properties of the IGTVector object.
            <para/>
            Typically, the IGTOrientedPointGeometry object is rendered in a map window with a style object 
            that shows orientation such as a SymbolFontStyle or a BitmapStyle object. The orientation vector 
            determines the direction in which the symbol or bitmap for the IGTOrientedPointGeometry object is rendered.
            <para/>
            The following illustration shows a point feature symbolized with two different orientation vectors:
            <para/>
            <img src="../AdditionalContent/Vector1.gif" alt="GTOrientedPointGeometry Example1"/>
            Orientation vector = 1,0,0
            <para/>
            <img src="../AdditionalContent/Vector2.gif" alt="GTOrientedPointGeometry Example2"/>
            Orientation vector = 1,1,0
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTOrientedPointGeometry.Orientation">
            <summary>
            Returns or sets the orientation (rotation) of the point.  A vector
            of [1, 0, 0] (the positive x-axis) represents no rotation.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTDataContext">
            <summary>Intergraph G/Technology IGTDataContext API.</summary>
            <remarks> 
            It provides for executing SQL, opening recordsets, and accessing the active job, the active coordinate system, and metadata. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.IsRoleGranted(System.String)">
            <summary>Method to determine if the input role has been granted to the current user.</summary>
            <param name="RoleName">Input role.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.Execute(System.String,System.Int32@,System.Int32,System.Object[])">
            <summary>Method to execute the input SQL statement given a variable length set of parameters.</summary>
            <param name="SQL">Must be a syntactically correct SQL statement. It is typically a DML statement or a statement that executes a procedure. </param>
            <param name="RecordsAffected">Returns the number of records affected by the input SQL statement.</param>
            <param name="Options">An ADO CommandTypeEnum constant. See the Microsoft ADO documentation for more details.</param>
            <param name="Parameters">A comma-separated, variable length parameter list of values substituted into the input SQL where question marks appear. 
            You should have as many parameters as there are question marks. You can pass zero parameters as when no questions marks appear in the SQL.</param>
            <remarks>Ways to pass parameters:
            <list type="bullet">
            <item>No parameters:
            <para/><para/><c>rs = oDataContext.Execute(SQL, out iRecordsAffected, (int)ADODB.CommandTypeEnum.adCmdText);</c>
            </item>
            <item>Variable length parameter list:
            <para/><para/><c>rs = oDataContext.Execute(SQL, out iRecordsAffected, (int)ADODB.CommandTypeEnum.adCmdText, 1, 'a', "test", 13.5);</c>
            </item>
            <item>Explicit parameter array:
            <para/><para/><c>rs = oDataContext.Execute(SQL, out iRecordsAffected, (int)ADODB.CommandTypeEnum.adCmdText, new object[] {2, "test"});</c>
            </item></list>
            <para>Ways to get back a ref_cursor: </para> 
            <list type="bullet">
            <item>Only output ref_cursor parameters: 
            <para/><para/>The signature of the procedure: <c> TestPkg.TestProc1(refCur OUT G3E_DBTYPES.G3E_REF_CURSOR)</c>
            <para/><c>  SQL = "TestPkg.TestProc1";</c>
            <para/><c>  rs = oDataContext.Execute(SQL, out iRecordsAffected, (int)ADODB.CommandTypeEnum.adCmdStoredProc);</c>
            <para/>Note : Do not give the output parameter
            </item>
            <item>Variable length parameter list:
            <para/><para/>The signature of the procedure: <c> TestPkg.TestProc2(x IN NUMBER, refCur OUT G3E_DBTYPES.G3E_REF_CURSOR)</c>
            <para/><c>  SQL = "TestPkg.TestProc2";</c>
            <para/><c>  rs = oDataContext.Execute(SQL, out iRecordsAffected, (int)ADODB.CommandTypeEnum.adCmdStoredProc, 1);</c>
            <para/>Note : Do not specify the output ref_cursor parameter on the parameter list.
            </item>
            <item>Explicit parameter array:
            <para/><para/>The signature of the procedure: <c> TestPkg.TestProc2(x IN NUMBER, refCur OUT G3E_DBTYPES.G3E_REF_CURSOR)</c>
            <para/><c>  SQL = "TestPkg.TestProc2";</c>
            <para/><c>  rs = oDataContext.Execute(SQL, out iRecordsAffected, (int)ADODB.CommandTypeEnum.adCmdStoredProc, new object[] {2});</c>
            <para/>Note : Do not specify the output ref_cursor parameter on the array.
            </item></list>
            </remarks> 
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.OpenRecordset(System.String,ADODB.CursorTypeEnum,ADODB.LockTypeEnum,System.Int32,System.Object[])">
            <summary>Method to open a recordset given the input SQL statement and a variable length set of parameters.</summary>
            <param name="SQL">Must be a syntactically correct SQL statement. It is typically a DML statement or a statement that executes a procedure.</param>
            <param name="CursorType">ADODB.CursorTypeEnum</param>
            <param name="LockType">ADODB.LockTypeEnum</param>
            <param name="Options">ADODB.CommandTypeEnum cast to int.</param>
            <param name="Parameters">A comma-separated, variable length parameter list of values substituted into the input SQL where question marks appear. You 
            should have as many parameters as there are question marks. You can pass zero parameters, as when no questions marks appear in the SQL.</param>
            <remarks> Ways to pass parameters:
            <para>No parameters:</para>
            <para><c>rs = oDataContext.OpenRecordset(SQL, ADODB.CursorTypeEnum.adOpenStatic, ADODB.LockTypeEnum.adLockReadOnly, (int)ADODB.CommandTypeEnum.adCmdText);</c></para>
            <para>Variable length parameter list:</para>
            <para><c>rs = oDataContext.OpenRecordset(SQL, ADODB.CursorTypeEnum.adOpenStatic, ADODB.LockTypeEnum.adLockReadOnly, (int)ADODB.CommandTypeEnum.adCmdText, 1, 'a', "test", 13.45);</c></para>
            <para>Explicit parameter array:</para>
            <para><c>rs = oDataContext.OpenRecordset(SQL, ADODB.CursorTypeEnum.adOpenStatic, ADODB.LockTypeEnum.adLockReadOnly, (int)ADODB.CommandTypeEnum.adCmdText, new object[] {2, "test"});</c></para>
            </remarks> 
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.UpdateBatch(ADODB.Recordset)">
            <summary>Method to store modified recordset values in the database.</summary>
            <param name="Recordset">Input ADODB.Recordset</param>
            <remarks>Default value adAffectAll is used for AffectRecords.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.UpdateBatch(ADODB.Recordset,ADODB.AffectEnum)">
            <summary>Method to store modified recordset values in the database.</summary>
            <param name="Recordset">Input ADODB.Recordset</param>
            <param name="AffectRecords">A value that indicates how many records this method will affect. The default value is adAllRecords (3).</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.GetDDCKeyObjects(System.Int16,System.Int32,Intergraph.GTechnology.API.GTComponentGeometryConstants)">
            <summary>Method to return IGTDDCKeyObjects given an FNO and FID.</summary>
            <param name="FNO">Feature number.</param>
            <param name="FID">Feature identifier.</param>
            <param name="ComponentGeometry">If the LegendName parameter is not supplied, the Primary 
            Geographic component is used. If the LegendName is supplied, the name is used to lookup the 
            G3E_LEGEND.G3E_ALTERNATEGEOORDINAL. If it is 0, again, the Primary Geographic component is used. It 
            if is nonzero, the Alternate Geographic component is used. The LegendName is available from the 
            IGTMapWindow object.</param>
            <remarks>Default value string.Empty is used for LegendName.</remarks>
            <returns>IGTDDCKeyObjects</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.GetDDCKeyObjects(System.Int16,System.Int32,Intergraph.GTechnology.API.GTComponentGeometryConstants,System.String)">
            <summary>Method to return IGTDDCKeyObjects given an FNO and FID.</summary>
            <remarks>LegendName maps to the G3E_USERNAME field in G3E_LEGENDS_OPTABLE.</remarks>
            <param name="FNO">Feature number.</param>
            <param name="FID">Feature identifier.</param>
            <param name="LegendName">Name of the legend.</param>
            <param name="ComponentGeometry">If the LegendName parameter is not supplied, the Primary 
            Geographic component is used. If the LegendName is supplied, the name is used to lookup the 
            G3E_LEGEND.G3E_ALTERNATEGEOORDINAL. If it is 0, again, the Primary Geographic component is used. It 
            if is nonzero, the Alternate Geographic component is used. The LegendName is available from the 
            IGTMapWindow object.</param>
            <returns>IGTDDCKeyObjects</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.NewFeature(System.Int16)">
            <summary>Method to create a new feature instance with the appropriate defaults.</summary>
            <param name="FNO">Feature number of the feature to be created.</param>
            <remarks>Default values true and null are used for UseLastFeatureAttributes and ClassificationAttributeValue.
            See the Remarks section for the <see cref="M:Intergraph.GTechnology.API.IGTDataContext.NewFeature(System.Int16,System.Boolean,System.Object)">IGTDataContext.NewFeature(Int16, Boolean, Object)</see> method for more details.
            </remarks>
            <returns>The IGTKeyObject of the new feature.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.NewFeature(System.Int16,System.Boolean)">
            <summary>Method to create a new feature instance with the appropriate defaults.</summary>
            <param name="FNO">Feature number of the new feature to be created.</param>
            <param name="UseLastFeatureAttributes">If this parameter is True, then attributes are copied from the last placement of a 
            similar feature—one whose FNO and ClassificationAttributeValue are the same.</param>
            <remarks>Default value null is used for ClassificationAttributeValue.
            See the Remarks section for the <see cref="M:Intergraph.GTechnology.API.IGTDataContext.NewFeature(System.Int16,System.Boolean,System.Object)">IGTDataContext.NewFeature(Int16, Boolean, Object)</see> method for more details.
            </remarks>
            <returns>The IGTKeyObject of the new feature.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.NewFeature(System.Int16,System.Boolean,System.Object)">
            <summary>Method to create a new feature instance with the appropriate defaults.</summary>
            <param name="FNO">Feature number of the feature to be created.</param>
            <param name="ClassificationAttributeValue">Attribute value that further qualifies the input 
            FNO. For example, you might want to differentiate a cable feature by its type: coax, wire, copper.</param>
            <param name="UseLastFeatureAttributes">If this parameter is True, then attributes are copied from the last placement of a 
            similar feature—one whose FNO and ClassificationAttributeValue are the same.</param>
            <remarks>
            IGTDataContext is responsible for caching the new IGTKeyObject until the transaction is committed or
            rolled back. 
            <para/>
            This method fails if no transaction is in progress. 
            <para/>
            The feature (IGTKeyObject) returned from this method provides important capabilities such as the firing of
            Functional interfaces and Attribute Edit Control interfaces when edits are made to a component's recordset. 
            <para/>
            Normally a record is added to each required component's recordset. When a record is added, it is populated
            with database default values and the G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID key values.  However, if the required
            component also has its G3E_FEATURECOMPONENT.G3E_ALTERNATEREQUIREDCNO field populated, a record is not added.
            It is up to the caller to add the necessary record in this case.
            <para/>
            If the UseLastFeatureAttributes parameter is False no additional work happens. However, if the
            UseLastFeatureAttributes parameter is True, the new feature has the following additional
            characteristics: 
            <list type="bullet">
            <item> If the input FNO-ClassificationAttributeValue combination has been previously placed or cached, the new
            feature's components are populated with additional records so that the number of records in each component
            matches that of the previous feature. Otherwise, no additional records are created. </item>
            <item> Attribute values are populated for each component record created in the previous steps. Attribute values
            are applied in the following order so that subsequent steps overwrite values, including database defaults,
            populated in a previous step:
            <list type="number">
            <item> Job classification values are applied. </item>
            <item> Attribute values for attributes defined to be copied are copied from components of a previously placed
            or cached feature having the same FNO-ClassificationAttributeValue combination. The values are copied into the
            appropriate record by matching the G3E_CNO value.
            <para/><para/>
            If the input FNO-ClassificationAttributeValue combination has not been placed or cached previously, this step
            is skipped.
            <para/>
            Note:  Dialog attribute values do not get applied by this method. </item>
            </list>
            </item>
            </list>
            See the Attribute Inheritance and Preloading topic for more details.
            </remarks>
            <returns>The IGTKeyObject of the new feature.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.OpenFeature(System.Int16,System.Int32)">
            <summary>Method to open a feature for editing or reviewing.</summary>
            <remarks>
            This method returns an IGTKeyObject even if a transaction is not in progress. If a transaction is not in progress, the returned 
            IGTKeyObject is not cached; it is read-only and any changes to the feature are temporary.  If a transaction is in progress, 
            the returned IGTKeyObject is cached until the transaction is committed or rolled back.  Any edits to the feature are saved when 
            the transaction is committed.
            <para/>
            When caching is enabled (that is, a transaction is in progress), you should not call OpenFeature to open thousands or even hundreds 
            of features at a time. If you must open many features, and you are calling this method in the context of a custom command, consider 
            calling IGTTransactionManager.Commit on sets of 100 or fewer features. If you are calling OpenFeature in the context of another 
            interface (for example, the IGTPostProcess interface), you do not have control of the transaction, and therefore you cannot call 
            IGTTransactionManager.Commit on sets of 100 features. In this case, you should consider alternative means for updating many features. 
            A database procedure is one choice. Converting your IGTPostProcess interface to a custom command is another choice. If you implement 
            a database procedure, you must understand that Functional interfaces and Attribute edit Control interfaces are not executed.
            <para/>
            If caching is not enabled (that is, a transaction is not in progress), you should still limit the number of IGTKeyObject objects that 
            are instantiated at any given time, although the number you can open is higher (in the hundreds). However, this still may not be the 
            most efficient means of accessing the data. For read-only access to large quantities of data, especially from multiple component 
            tables, consider using <see cref="M:Intergraph.GTechnology.API.IGTDataContext.OpenRecordset(System.String,ADODB.CursorTypeEnum,ADODB.LockTypeEnum,System.Int32,System.Object[])">IGTDataContext.OpenRecordset</see> to query 
            the precise data you need. This approach ensures that you get the data in one query to the database, instead of possibly many queries.
            <para/>
            For the given FNO, FID, the returned IGTKeyObject object has an IGTComponents collection property that exposes access to each IGTComponent 
            object that makes up the returned feature. Each IGTComponent has a Recordset property that exposes the records, fields, and values for 
            a given component instance (CNO, CID). Calling Recordset.AddNew, Recordset.Delete, or making edits to existing Recordset field values 
            causes IGTFunctional and IGTAttributeEditControl interfaces to execute.
            <para/>
            Do not call Recordset.Update. It does not do anything because these Recordsets are disconnected from the underlying database connection. 
            Instead, changes to the IGTComponent's Recordset are saved to the database when you explicitly call GTTransactionManager.Commit from your 
            custom command or when the governing product command commits its transaction. The "Update" IGTFunctional interfaces are executed as part 
            of the commit operation.
            <para/>
            You cannot use the same IGTKeyObject in multiple transactions. Depending on the .Net code language that is used, you should set the
            IGTKeyObject to Nothing(VB.Net) or null(C#) after calling IGTTransactionManager.Commit because it is no longer in the underlying cache. 
            You must call OpenFeature again to make subsequent edits to the same feature. 
            </remarks>
            <param name="FNO">Feature number of the feature to be opened.</param>
            <param name="FID">Feature ID of the feature to be opened.</param>
            <returns>Opened feature.</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.CacheFeatureAttributes(Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method to store feature attributes that are used the next time NewFeature is called.</summary>
            <param name="KeyObject">Input feature whose attributes need to be cached.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.ExecuteCommand(ADODB.Command,System.Int32@)">
            <summary>Method to execute the input ADO Command object.</summary>
            <remarks>Default value -1 is used for Options.
            <para>If need to get back ref_cursor, the ExecuteCommand method does not support to get ref_cursor, 
            please see the <see cref="M:Intergraph.GTechnology.API.IGTDataContext.Execute(System.String,System.Int32@,System.Int32,System.Object[])">IGTDataContext.Execute</see> method.
            </para></remarks>
            <param name="Command">Contains the SQL statement, table name, or stored procedure to execute.</param>
            <param name="RecordsAffected">Returns the number of records that the operation affected.</param>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.ExecuteCommand(ADODB.Command,System.Int32@,System.Int32)">
            <summary>Method to execute the input ADO Command object.</summary>
            <remarks>If need to get back ref_cursor, the ExecuteCommand method does not support to get ref_cursor,
            please see the <see cref="M:Intergraph.GTechnology.API.IGTDataContext.Execute(System.String,System.Int32@,System.Int32,System.Object[])">IGTDataContext.Execute</see> method.
            </remarks>
            <param name="Command">Contains the SQL statement, table name, or stored procedure to execute.</param>
            <param name="RecordsAffected">Returns the number of records that the operation affected.</param>
            <param name="Options">See the Microsoft ADO documentation for more details.</param>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.NewPlacementConfiguration(System.Int32)">
            <summary>Method to create new feature instances with the appropriate defaults for each feature in the placement configuration.</summary>
            <param name="PCNO">Placement configuration number.</param>
            <remarks>Default values true and null are used for UseLastFeatureAttributes and ClassificationAttributeValue.</remarks>
            <returns>IGTKeyObjects</returns>
            <remarks>
            DataContext is responsible for caching each new feature's IGTKeyObject until the transaction is committed or rolled back.
            <para/>This method fails if no transaction is in progress.
            <para/>The features returned from this method provide important capabilities such as the firing of Functional interfaces and Attribute Edit Control interfaces when edits are made to a component's recordset.
            <para/> If the UseLastFeatureAttributes parameter is False, each new feature simply has a record (populated with database default values and the G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID key values) inserted into the recordset of each required component.
            <para/>If the UseLastFeatureAttributes parameter is True (the default value), each new feature has the following characteristics:
            <list type="bullet">
            <item>A record (initially populated with database default values and the G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID key values) is inserted into the recordset of each required component.</item>
            <item>If an input FNO-ClassificationAttributeValue combination has been previously placed or cached, the components of the new feature are populated with additional records so that the number of records in each component matches that of the previous feature. Otherwise, no additional records are created.</item>
            <item>For each component record created in the previous step, attribute values are populated in the following order so that subsequent steps overwrite values, including database defaults:
            <list type="bullet">
            <item>Job classification values are applied.</item>
            <item>For attributes defined to be copied, values are copied from components of a previously placed or cached feature having the same FNO-ClassificationAttributeValue combination. The values are copied into the appropriate record by matching the G3E_CNO value. 
            If an input FNO-ClassificationAttributeValue combination has not been placed or cached previously, this step is skipped. 
            <para/><b>Note:</b>Dialog attribute values do not get applied by this method.
            </item>
            </list></item>
            </list>
            See the Attribute Inheritance and Preloading topic for more details.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.NewPlacementConfiguration(System.Int32,System.Boolean)">
            <summary>Method to create new feature instances with the appropriate defaults for each feature in the placement configuration.</summary>
            <param name="PCNO">Placement configuration number.</param>
            <param name="UseLastFeatureAttributes">Determines if attributes are copied from the last placement of a feature whose FNO and ClassificationAttributeValue are the same.</param>
            <remarks>Default value null is used for ClassificationAttributeValue.</remarks>
            <returns>IGTKeyObjects</returns>
            <remarks>
            DataContext is responsible for caching each new feature's IGTKeyObject until the transaction is committed or rolled back.
            <para/>This method fails if no transaction is in progress.
            <para/>The features returned from this method provide important capabilities such as the firing of Functional interfaces and Attribute Edit Control interfaces when edits are made to a component's recordset.
            <para/> If the UseLastFeatureAttributes parameter is False, each new feature simply has a record (populated with database default values and the G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID key values) inserted into the recordset of each required component.
            <para/>If the UseLastFeatureAttributes parameter is True (the default value), each new feature has the following characteristics:
            <list type="bullet">
            <item>A record (initially populated with database default values and the G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID key values) is inserted into the recordset of each required component.</item>
            <item>If an input FNO-ClassificationAttributeValue combination has been previously placed or cached, the components of the new feature are populated with additional records so that the number of records in each component matches that of the previous feature. Otherwise, no additional records are created.</item>
            <item>For each component record created in the previous step, attribute values are populated in the following order so that subsequent steps overwrite values, including database defaults:
            <list type="bullet">
            <item>Job classification values are applied.</item>
            <item>For attributes defined to be copied, values are copied from components of a previously placed or cached feature having the same FNO-ClassificationAttributeValue combination. The values are copied into the appropriate record by matching the G3E_CNO value. 
            If an input FNO-ClassificationAttributeValue combination has not been placed or cached previously, this step is skipped. 
            <para/><b>Note:</b>Dialog attribute values do not get applied by this method.
            </item>
            </list></item>
            </list>
            See the Attribute Inheritance and Preloading topic for more details.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.NewPlacementConfiguration(System.Int32,System.Boolean,System.Object)">
            <summary>Method to create new feature instances with the appropriate defaults for each feature in the placement configuration.</summary>
            <param name="PCNO">Placement configuration number.</param>
            <param name="UseLastFeatureAttributes">Determines if attributes are copied from the last placement of a feature whose FNO and ClassificationAttributeValue are the same.</param>
            <param name="ClassificationAttributeValue">Attribute value that further qualifies the features identified by the input PCNO.<para/><b>Example:</b>To differentiate a cable feature by its type: coax, wire, or copper.
            </param>
            <remarks>
            DataContext is responsible for caching each new feature's IGTKeyObject until the transaction is committed or rolled back.
            <para/>This method fails if no transaction is in progress.
            <para/>The features returned from this method provide important capabilities such as the firing of Functional interfaces and Attribute Edit Control interfaces when edits are made to a component's recordset.
            <para/> If the UseLastFeatureAttributes parameter is False, each new feature simply has a record (populated with database default values and the G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID key values) inserted into the recordset of each required component.
            <para/>If the UseLastFeatureAttributes parameter is True (the default value), each new feature has the following characteristics:
            <list type="bullet">
            <item>A record (initially populated with database default values and the G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID key values) is inserted into the recordset of each required component.</item>
            <item>If an input FNO-ClassificationAttributeValue combination has been previously placed or cached, the components of the new feature are populated with additional records so that the number of records in each component matches that of the previous feature. Otherwise, no additional records are created.</item>
            <item>For each component record created in the previous step, attribute values are populated in the following order so that subsequent steps overwrite values, including database defaults:
            <list type="bullet">
            <item>Job classification values are applied.</item>
            <item>For attributes defined to be copied, values are copied from components of a previously placed or cached feature having the same FNO-ClassificationAttributeValue combination. The values are copied into the appropriate record by matching the G3E_CNO value. 
            If an input FNO-ClassificationAttributeValue combination has not been placed or cached previously, this step is skipped. 
            <para/><b>Note:</b>Dialog attribute values do not get applied by this method.
            </item>
            </list></item>
            </list>
            See the Attribute Inheritance and Preloading topic for more details.
            </remarks>
            <returns>IGTKeyObjects</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTDataContext.MetadataRecordset(System.String)">
            <summary>Method to return a metadata recordset given an OPTABLE name.</summary>
            <param name="OptimizedTableName">Name of a G/Technology optimized table.</param>
            <returns>ADODB.Recordset</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDataContext.ActiveJob">
            <summary>Property to return the active job name associated with this object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDataContext.ConfigurationName">
            <summary>Property to return the configuration name associated with this object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDataContext.CoordSystemsMgr">
            <summary>Property to return the GTCoordSystemsMgr associated with this object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDataContext.DatabaseUserName">
            <summary>Property to return the database user name associated with this object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDataContext.ErrorList">
            <summary>Property to return database errors that occurred in the last operation.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDataContext.JobList">
            <summary>Property to return the current job list associated with this object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDataContext.Type">
            <summary>Property to return the configuration type associated with this object.</summary>
            <remarks>The Type property returns an enumerated type corresponding to the metadata value found 
            in the G3E_DATACONNECTION.G3E_TYPE field for the current configuration.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTDeactivateEventArgs">
            <summary>Provides data for the Intergraph.GTechnology.API.IGTCustomCommandHelper.Deactivate event.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTDeactivateEventArgs.#ctor(Intergraph.GTechnology.API.IGTMapWindow@,System.Boolean)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTDeactivateEventArgs class.</summary>
            <param name="MapWindow">MapWindow argument value.</param>
            <param name="Minimized">Minimized argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTDeactivateEventArgs.MapWindow">
            <summary>MapWindow argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTDeactivateEventArgs.Minimized">
            <summary>Minimized argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.GTConstructionAidCompleteEventArgs">
            <summary>Provides data for the ConstructionAidComplete event of Intergraph.GTechnology.API.IGTTemporaryGeometryPlacementHelper and Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.</summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.GTConstructionAidCompleteEventArgs.#ctor(Intergraph.GTechnology.API.IGTGeometry@,System.Boolean)">
            <summary>Method to initialize a new instance of the Intergraph.GTechnology.API.GTConstructionAidCompleteEventArgs class.</summary>
            <param name="ConstructedGeometry">ConstructedGeometry argument value.</param>
            <param name="AutomaticallyAppend">AutomaticallyAppend argument value.</param>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTConstructionAidCompleteEventArgs.ConstructedGeometry">
            <summary>ConstructedGeometry argument value.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.GTConstructionAidCompleteEventArgs.AutomaticallyAppend">
            <summary>AutomaticallyAppend argument value.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.DuplicateIdentifierException">
            <summary>
            Represents the exception that is thrown when attempting an action that violates a constraint.
            </summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.DuplicateIdentifierException.#ctor">
            <summary>
            Initializes a new instance of the DuplicateIdentifierException class. This is the default constructor.
            </summary>
        </member>
        <member name="M:Intergraph.GTechnology.API.DuplicateIdentifierException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DuplicateIdentifierException class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.DuplicateIdentifierException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the DuplicateIdentifierException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Intergraph.GTechnology.API.DuplicateIdentifierException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DuplicateIdentifierException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTWorldRange">
            <summary>Intergraph G/Technology IGTWorldRange API.</summary>
            <remarks>
            The IGTWorldRange object provides the world coordinates of an area, which is defined by the lower-left and upper-right points of a rectangle. 
            </remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTWorldRange.BottomLeft">
            <summary>Property to return/set the bottom left point of the world range.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTWorldRange.TopRight">
            <summary>Property to return/set the top right point of the world range.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTRasterGeometry">
            <summary>Intergraph G/Technology IGTRasterGeometry API.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTRasterGeometry.RasterPolygon">
            <summary>
            Retrieves the polygon border of the raster image.  This will always
            be a polygon with 4 distinct vertices, but will not always be a rectangle
            or even a parallelogram.  The shape of the polygon is determined by the
            raster image's transformation matrix.  If the image is skewed,
            the returned polygon reflects the skewing.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTRasterGeometry.DisplayMatrix">
            <summary>
            Sets or returns the transformation matrix applied to the raster image.
            This matrix transforms coordinates in the image's "pixel space" (that is,
            pixels within the image file) to the world coordinates of the map window
            where the image is displayed.
            </summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTRasterGeometry.FileName">
            <summary>
            Sets or returns the name of the file containing the image.
            </summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper">
            <summary>Intergraph G/Technology IGTPlacementTechniqueHelper API.</summary>
            <remarks>
            IGTPlacementTechniqueHelper provides access to construction aids and common adjustments and is primarily used for interactive 
            placement. While required components are created by default when a feature is created, you may 
            need to create optional components.  To create a new instance of an optional component only, call 
            AddNew on the component recordset of the KeyObject argument. Once the component instance is created, it 
            may be accessed to set its field values. To create a geometry for this new instance call IGTPlacementTechniqueHelper 
            CreateGeometry method, which returns a IGTGeometry whose points can be set in the IGTPlacementTechnique MouseClick method.
            <para/>
            <b>Example:</b> To create an optional miscellaneous label component, initialize the IGTPlacmentTechniqueHelper by calling 
            the <see cref="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.StartPlacement(Intergraph.GTechnology.API.IGTKeyObject,Intergraph.GTechnology.API.IGTKeyObjects)">StartPlacement</see> method and setting the KeyObject and KeyObjectCollection parameters.  After initialization, call 
            AddNew on the component recordset of the KeyObject argument passing "MISC_LABEL" as the component. Next, call Fields 
            on the "MISC_LABEL" component recordset, assigning a value to the "G3E_TEXTSTRING" component field.  Use the same Fields call to assign proper 
            values to the "G3E_FNO" component field and "G3E_CNO" component field. Finish with creating the IGTGeometry by calling
            the IGTPlacementTechniqueHelper <see cref="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.CreateGeometry">CreateGeometry</see> method.
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.StartPlacement(Intergraph.GTechnology.API.IGTKeyObject,Intergraph.GTechnology.API.IGTKeyObjects)">
            <summary>Method to initialize the placement technique.  It must be called before any other methods can be called.</summary>
            <param name="KeyObject">The key object for the feature currently being placed.</param>
            <param name="KeyObjectCollection">A collection of all key objects for all features that are part of the feature or configuration currently being placed.</param>
            <remarks>The IGTPlacementTechnique is expected to call this first before calling any other methods on the Helper.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.MouseClick(Intergraph.GTechnology.API.IGTPoint,System.Int32,System.Int32)">
            <summary>Method to process mouse click events either appending to the geometry or locating existing features.  Some construction aids require a locate operation.</summary>
            <param name="UserPoint">The location of the mouse click on the screen, in world coordinates.</param>
            <param name="Button">Denotes which mouse button was depressed when the click occurred.</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also depressed. Some, all, or none of these keys may be depressed at the time the mouse click occurred. To 
            test which keys are depressed, do an AND comparison of the ShiftState against the Microsoft Visual Basic shift constants vbShiftMask, vbAltMask, and vbCtrlMask.</param>
            <remarks>The IGTPlacementTechnique can directly route its MouseClick calls here or calculate its own mouse point and call MouseClick with it to append another point to the geometry. But 
            the IGTPlacementTechnique must have called StartPlacement before attempting to call MouseClick.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.MouseDblClick(Intergraph.GTechnology.API.IGTPoint,System.Int32)">
            <summary>Method to process mouse double click events.  This event normally signals that the user is done digitizing this component.</summary>
            <param name="UserPoint">The location of the double click on the screen, in world coordinates.</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also depressed. Some, all, or none of these keys may be depressed 
            at the time the double click occurred.</param>
            <remarks>The IGTPlacementTechnique can directly route its MouseDblClick calls here, or can calculate its own mouse point and call MouseDblClick 
            with it to signal that the geometry is complete. It does not matter what mouse point value is sent in, as it is not appended to the geometry. If 
            the geometry is invalid, an error will be raised and the technique will remain up and running. The geometry will not be completed until a valid 
            geometry is constructed. The IGTPlacementTechnique must have called StartPlacement before attempting to call MouseDblClick.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.MouseMove(Intergraph.GTechnology.API.IGTPoint,System.Int32)">
            <summary>Method to process mouse move events so that dynamics are drawn from the last point appended to the current mouse location.</summary>
            <param name="UserPoint">The location of the mouse on the screen, in world coordinates.</param>
            <param name="ShiftState">Denotes if the SHIFT, ALT, or CTRL keys were also depressed. Some, all, or none of these keys may be depressed at the time the mouse move occurred.</param>
            <remarks>The IGTPlacementTechnique can directly route its MouseMove calls here or calculate its own mouse point and call MouseMove with it to display dynamics to a particular mouse 
            point. But the IGTPlacementTechnique must have called StartPlacement before attempting to call MouseMove.
            <para/>
            ShiftState may be any value.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.KeyUp(System.Int32,System.Int32)">
            <summary>Method to process the Backspace key and any future keys.   Backspace removes the last point appended to the geometry.</summary>
            <param name="KeyCode">The key that was pressed.</param>
            <param name="ShiftState">Denotes if either the SHIFT, ALT, or CTRL keys was also depressed.</param>
            <remarks>The IGTPlacementTechnique must have called StartPlacement before attempting to call KeyUp.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.AbortPlacement">
            <summary>Method to terminate the placement technique by aborting it and discarding all work it has done.</summary>
            <remarks>If the IGTPlacementTechnique needs to cancel placement apart from actions listed below, then the IGTPlacementTechnique must call AbortPlacement to terminate placement. But the IGTPlacementTechnique must have called StartPlacement and StartArc before attempting to call AbortPlacement.
            <para/>
            <list type="bullet">
            <item>If the user hits ESC while a component is being digitized.</item>
            <item>If the user hits SHIFT+ESC or F3 while a component is being digitized.</item>
            <item>If the user selects a different feature or configuration to place while a component is being digitized.</item>
            <item>If the user selects a different component to place while digitizing some other component.</item> 
            <item>If the user clicks the Cancel Edits button on Feature Explorer while a component is being digitized.</item> 
            <item>If the user clicks the Restart with Job Defaults on Feature Explorer while a component is being digitized.</item> 
            <item>If the user closes the last open map window while a component is being digitized.</item> 
            </list></remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.EndPlacement">
            <summary>Method to end the placement technique and save the geometry if it is valid.</summary>
            <remarks>If the geometry is valid, then this method completes digitization and terminates the technique. If the geometry is invalid, then an error is raised and the technique remains up and running.
            <para/>
            The IGTPlacementTechnique should call this method to complete digitization if mouse click (for points) or mouse double click (for lines and areas) is not part of the normal workflow that would finish digitizing a given component.
            <para/>
            The IGTPlacementTechnique must have called StartPlacement before attempting to call EndPlacement. Calling either EndPlacement or MouseDblClick will complete digitization in the same fashion. There is no need to call both. The EndPlacement 
            method performs the same function as MouseDblClick.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.AppendGeometry(Intergraph.GTechnology.API.IGTGeometry)">
            <summary>Method to append the input geometry to the end of the current geometry being digitized.  It can be used to append the geometry returned from a construction aid.</summary>
            <param name="GeometryToAppend">The geometry to be appended to the current geometry.</param>
            <remarks>The geometry to append must be valid to add to the current geometry. For example, a point can be appended to a linear feature, but a linear feature cannot be appended to a 
            point feature. To determine the type of the geometry, compare the Type property against the geometry constants defined in GTGeometryTypeConstants.
            <para/>
            The IGTPlacementTechnique must have called StartPlacement before attempting to call AppendGeometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.CreateGeometry">
            <summary>Method to create a new geometry object of the appropriate metadata-defined geometry type.  The returned geometry can be populated and passed to SetGeometry.</summary>
            <remarks>To determine the type of the geometry returned, compare the Type property against the geometry constants defined in GTGeometryTypeConstants.
            <para/>
            The IGTPlacementTechnique must have called StartPlacement before attempting to call CreateGeometry.</remarks>
            <returns>IGTGeometry</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.SetGeometry(Intergraph.GTechnology.API.IGTGeometry)">
            <summary>Method to replace the current geometry with a new geometry.  The new geometry is immediately displayed.</summary>
            <param name="GeometryToSet">The completed geometry that the IGTPlacementTechniqueHelper is to display.</param>
            <remarks>To determine the type of the geometry returned, compare the Type property against the geometry constants defined in GTGeometryTypeConstants.
            <para/>
            The IGTPlacementTechnique must have called StartPlacement before attempting to call SetGeometry.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.StartArc">
            <summary>Method to indicate that subsequent mouse events should be interpreted as arc construction points until the arc is completed or aborted.  An arc is not complete until a start point, a point on the arc, and an end point have been specified.</summary>
            <remarks>If the arc is within or ending the CompositePolyline or CompositePolygon, then only two points are needed to complete the arc. The last point of the previous geometry of the Composite will be used as the start point for the arc in this case.
            <para/>
            The IGTPlacementTechniqueHelper automatically returns to freehand mode once the arc is completed or if it is aborted. The IGTPlacementTechnique calls this method to construct an arc when a construction aid is not specified.
            <para/>
            The IGTPlacementTechnique must have called StartPlacement before attempting to call StartArc.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.AbortArc">
            <summary>Method to abort arc placement and discard any work that may be in progress on arc construction.  Placement returns to freehand mode immediately.</summary>
            <remarks>The IGTPlacementTechnique must have called StartPlacement and StartArc before attempting to call AbortArc.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.ConstructionAidDynamicsEnabled">
            <summary>Property to return/set whether construction aids should draw dynamics as the mouse moves from the last point of the geometry to the location of the constructed point.</summary>
            <remarks>This property defaults to True if not set by the IGTPlacementTechnique. It can be set at any point while the IGTPlacementTechniqueHelper is running.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.ConstructionAidInProgress">
            <summary>Property to return a flag indicating whether a Construction Aid is in progress.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.ConstructionAidsEnabled">
            <summary>Property to return/set the constructions aids to enable: point construction aids, linear construction aids, all construction aids, or no construction aids.</summary>
            <remarks>This property defaults to gtptConstructionAidsAll if not set by the IGTPlacementTechnique. It can be set at any point while the IGTPlacementTechniqueHelper is running.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.StatusBarPromptsEnabled">
            <summary>Property to return/set whether the standard placement prompts should be displayed in the status bar.</summary>
            <remarks>This property defaults to True if not set by the IGTPlacementTechnique. It can be set at any point while the IGTPlacementTechniqueHelper is running.
            <para/>
            You can display your own status bar prompts using the IGTApplication.StatusBarText method.</remarks>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.ConstructionAidComplete">
            <summary>Event raised when a construction aid has finished processing.</summary>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTPlacementTechniqueHelper.ArcComplete">
            <summary>Event raised to the .NET technique when an arc has been completed.  This event occurs after calling StartArc( ) and supplying the appropriate number of mouse points via the MouseClick() method.</summary>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTFeaturePlacementService">
            <summary>Intergraph G/Technology IGTFeaturePlacementService API.</summary>
            <remarks>All dynamics displayed by this object will remain displayed until Dispose is called.
            <para/>The IGTFeaturePlacementService object provides placement capabilities for your custom placement commands. 
            <para/>The API is capable of placing single components, component configurations, individual features, and placement configurations. The API uses existing and custom Microsoft Visual Basic for Applications placement techniques as well as construction aids to digitize graphics. 
            <para/>The API also offers control over which relationships, if any, should be established during placement. 
            <para/><para/><b>For example check topic "Pole Run Placement Command (Sample)"</b>
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeaturePlacementService.CancelPlacement">
            <summary>This method cancels the placement request initiated by the last call to any of the Start methods.</summary>
            <remarks>Default value true is used for PromptUserToCancel.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeaturePlacementService.CancelPlacement(System.Boolean)">
            <summary>This method cancels the placement request initiated by the last call to any of the Start methods.</summary>
            <param name="PromptUserToCancel">If PromptUserToCancel is True (the default) and IGTFeaturePlacementService has not finished 
            placing the last item it was asked to place, a message box is presented to the users giving them the option to continue 
            digitizing or cancel. If PromptUserToCancel is False, the last item the service was asked to place will be terminated without 
            questioning the user.</param>
            <remarks>Since PromptUserToCancel is True by default, users will be asked by default if they want to cancel digitizing. You can 
            override this default by specifying a value of False to terminate placement quietly.
            <para/>
            If IGTFeaturePlacementService has finished placing the last item it was asked to place, then calling CancelPlacement will do nothing.
            <para/>
            This function will return True whenever PromptUserToCancel is set to False. If PromptUserToCancel is set to True and the user answers 
            No when asked about canceling digitizing, then the function will return False. If PromptUserToCancel is set to True and the user answers 
            Yes, then the function will return True.</remarks>
            <returns>bool</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeaturePlacementService.StartComponent(Intergraph.GTechnology.API.IGTKeyObject,System.Int16)">
            <summary>Method to initiate placement of a component.</summary>
            <param name="CNO">The CNO of the component to place.</param>
            <param name="Feature">Determines which feature instance to associate this component to.</param>
            <remarks>The component is placed using the placement technique defined in the G3E_FEATURECOMPONENT table.
            <para/>
            The Finished event is raised after StartComponent has completed placing a single instance or multiple 
            auto-repeating instances of this component. Only one Finished event is raised when placing an auto-repeating 
            component; it is not raised for each instance of an auto-repeating component.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeaturePlacementService.StartComponentConfiguration(Intergraph.GTechnology.API.IGTKeyObject,System.Int32)">
            <summary>Method to initiate placement of a component configuration.</summary>
            <param name="CCNO">The CCNO of the component configuration to place.</param>
            <param name="Feature">Determines which feature instance to associate this component configuration to.</param>
            <remarks>StartComponentConfiguration attempts to place all of the components defined in the component configuration. Each 
            component in the component configuration will be placed using the placement techniques defined in the G3E_COMPCONFIGURATION 
            table. A simple component configuration consisting of only one component can be used to define an alternate placement technique 
            for any component.
            <para/>
            The Finished event is raised after StartComponentConfiguration has completed placing the single instance or multiple autorepeating 
            instances of this component configuration. Only one Finished event will be raised when placing an autorepeating component configuration. It 
            will not be raised for each component that is part of the component configuration; nor will it be raised for each instance for an autorepeating 
            component configuration.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeaturePlacementService.StartFeature(Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method to initiate placement of a feature.</summary>
            <param name="Feature">Determines the feature instance to place.</param>
            <remarks>Default value true is used for ApplyIncludeInPlacementFilter.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeaturePlacementService.StartFeature(Intergraph.GTechnology.API.IGTKeyObject,System.Boolean)">
            <summary>Method to initiate placement of a feature.</summary>
            <param name="Feature">Determines the feature instance to place.</param>
            <param name="ApplyIncludeInPlacementFilter">A first level filter that 
            determines which components will be considered for placement. The default 
            value for this parameter is True. This means that only those components in 
            G3E_FEATURECOMPONENT whose G3E_INCLUDEINPLACEMENT field is set to 1 will be 
            considered for placement. If this parameter is set to False, then all components 
            defined for a feature in G3E_FEATURECOMPONENT will be considered for placement.</param>
            <remarks>StartFeature should be called only when creating new feature instances or when editing a feature whose graphic components have not yet been drawn. 
            <para/>
            StartFeature will attempt to place only components and component configurations that are defined as required, silent, or derived. Each component in the 
            feature is placed using the placement techniques defined in the G3E_FEATURECOMPONENT table. Each component configuration in the feature will be placed 
            using the placement techniques defined in the G3E_COMPCONFIGURATION table. If some of these components already exist and contain geometry, then StartFeature 
            will skip placement of these and will only place those components which do not exist or do not have geometry.
            <para/>
            The Finished event will be raised after StartFeature has placed all of the required, silent, and derived components defined for placement of this feature. Only 
            one Finished event will be raised when placing a feature. It will not be raised for each component, component configuration, or autorepeating instance that is 
            placed as part of this feature.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeaturePlacementService.StartPlacementConfiguration(Intergraph.GTechnology.API.IGTKeyObjects,System.Int32)">
            <summary>Method to initiate placement of a placement configuration.</summary>
            <param name="Features">Determines the feature instances to place as part of this placement configuration.</param>
            <param name="PCNO">The PCNO of the placement configuration to place.</param>
            <remarks>Default value null is used for ProcessRelativeToTheseFeatures.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeaturePlacementService.StartPlacementConfiguration(Intergraph.GTechnology.API.IGTKeyObjects,System.Int32,Intergraph.GTechnology.API.IGTKeyObjects)">
            <summary>Method to initiate placement of a placement configuration.</summary>
            <param name="Features">Determines the feature instances to place as part of this placement configuration.</param>
            <param name="PCNO">The PCNO of the placement configuration to place.</param>
            <param name="ProcessRelativeToTheseFeatures">The features to use as relative components during placement. These are features that were placed prior to invoking this placement configuration.
            If this parameter is not defined, all components in this configuration will be placed relative to components that were previously placed as part of this configuration instance. If this parameter 
            is defined, some components in this configuration will be placed relative to components that were not placed as part of this configuration instance, but were placed prior to invoking this configuration.</param>
            <remarks>StartPlacementConfiguration should be called only when creating new placement configurations.
            <para/>
            StartPlacementConfiguration attempts to place only components and component configurations that have a G3E_PLACECOMPONENT value of 1 and are defined as required, silent, or derived.
            <para/>
            Each component will be placed using the placement techniques defined in the G3E_PLACEMENTCONFIGURATION table.
            <para/>
            Each component configuration will be placed using the placement techniques defined in the G3E_COMPCONFIGURATION table.
            <para/>
            If some of the components already exist and contain geometry, StartPlacementConfiguration will skip placement of these and place only components that do not exist or do not have geometry.
            <para/>
            The placement configuration specified can be a single feature configuration or a multiple-feature configuration. The main intent is to allow the user to define a feature or group of features 
            to be placed using placement techniques and attributes values that are different from those defined for each feature in G3E_FEATURECOMPONENT.
            <para/>
            Only placement configurations can use the PlaceRelativeToTheseFeatures functionality. For an individual feature to be placed relative to some other feature, a placement configuration must be defined.
            <para/>
            The Finished event is raised after StartPlacementConfiguration has placed all of the required, silent, and derived components defined for placement of this configuration. Only one Finished event will 
            be raised when placing a placement configuration. It will not be raised for each feature, component, component configuration, or auto repeating instance that is placed as part of this placement configuration.</remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTFeaturePlacementService.AppendRelativeFeatureCandidate(Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method to allow an existing feature to be used as a relative feature during StartPlacementConfiguration.</summary>
            <param name="Feature">An existing feature that may be used as a relative feature during StartPlacementConfiguration.</param>
            <remarks>To place a placement configuration relative to some feature that was not placed by IGTFeaturePlacementService, IGTFeaturePlacementService 
            must be made aware of that feature. Use the AppendRelativeFeatureCandidate method to make a feature known to GTFeaturePlacementService. Then 
            call StartPlacementConfiguration and specify that feature as part of the ProcessRelativeToTheseFeatures parameter.
            <para/>
            AppendRelativeFeatureCandidate may be called for multiple feature instances.
            <para/>
            Once a feature instance has been appended to IGTFeaturePlacementService, it does not need to be added again. AppendRelativeFeatureCandidate does 
            not need to be called for any features that were placed or edited by IGTFeaturePlacementService. All features placed by, edited by, or appended 
            to GTFeaturePlacementService remain known to the service until the service is released.</remarks>
        </member>
        <member name="E:Intergraph.GTechnology.API.IGTFeaturePlacementService.Finished">
            <summary>Event raised when the last placement request intiated by a Start method has been completed.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTFeaturePlacementService.InteractiveRelationshipsToProcess">
            <summary>Property to return/set the list of relationships to process during placement.  A single RNO, an array of RNOs, or Null are all valid property values.</summary>
            <remarks>By default, all relationships defined for a feature are processed during placement. So, if you never set this property, then all relationships will be 
            processed as each geometry point is digitized.
            <para/>You can pass in a single RNO value for the one relationship you want to process, or you can supply an array of RNOs to specify multiple relationships. If 
            this property is set, then only those relationships will be processed as each geometry point is digitized (this is what is meant by interactive relationships—click-by-click 
            processing). You can pass Null to signal that no relationships should be processed during placement.
            <para/>If you supply an invalid RNO (an RNO that is not defined as a relationship for the feature being placed), the software will ignore the invalid RNO and continue 
            processing. Instead, a note will be added to the diagnostic output that this RNO was not defined for the feature.
            <para/>This property cannot be set if a placement method is running and has not finished.
            <para/>When this property is retrieved, it will return a single RNO value if only one relationship is enabled, or an array of RNOs if multiple relationships are enabled. If 
            no relationships are enabled, then the property will return Null.
            <para/>Since all relationships are enabled by default, retrieving this property prior to setting it will return an array of all the RNOs defined in the G3E_RELATIONSHIP table. In 
            order to simplify re-enabling all relationships for interactive processing, retrieve this property prior to setting it and save the full list of RNOs for later use.</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTDDCKeyObject">
            <summary>Intergraph G/Technology IGTDDCKeyObject API.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDDCKeyObject.ComponentViewName">
            <summary>Property to return the component view name associated with this object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDDCKeyObject.FID">
            <summary>Property to return the FID associated with this object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDDCKeyObject.FNO">
            <summary>Property to return the FNO associated with this object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDDCKeyObject.Geometry">
            <summary>Property to return the geometry associated with this object.</summary>
            <remarks>The Geometry property gives you a current copy of the published geometry for a specific component instance. The 
            geometry includes any job edits made up to the time this Geometry property is first accessed.
            <para/>The geometry is not kept current with edits made by other sources. The geometry has the potential to be out-of-date when any 
            <see cref="M:Intergraph.GTechnology.API.IGTTransactionManager.RefreshDatabaseChanges">IGTTransactionManager.RefreshDatabaseChanges</see> operation 
            occurs after you have first retrieved this Geometry property. This Refresh operation can occur in the product during normal command processing, or 
            you can call it programmatically. Given that this geometry can become out-of-date, you should release the GTDDCKeyObject and its associated geometry 
            as soon as you are done with them.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDDCKeyObject.Recordset">
            <summary>Property to return the component view recordset associated with this object.</summary>
            <remarks>The Recordset property gives you a current copy of the published attributes for a specific component 
            instance. The attributes include any job edits made up to the time this Recordset property is first accessed.
            <para/>The attributes are not kept current with edits made by other sources. The attributes have the potential 
            to be out-of-date when any <see cref="M:Intergraph.GTechnology.API.IGTTransactionManager.RefreshDatabaseChanges">IGTTransactionManager.RefreshDatabaseChanges</see> 
            operation occurs after you have first retrieved this Recordset property. This Refresh operation can occur in the product during normal command processing, or 
            you can call it programmatically. Given that this recordset can become out-of-date, you should release the GTDDCKeyObject and its associated Recordset 
            as soon as you are done with them.
            <para/>You should not attempt to edit the values in this recordset as it is a copy of published data and does not affect the job-based data.</remarks>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTDDCKeyObject.SchematicFeatureRecordset">
            <summary>Property to return the schematic feature recordset associated with this object.</summary>
            <remarks>The SchematicFeatureRecordset property contains a list of all the FNOs and FIDs that the schematic represents. It is an ADO recordset that contains the G3E_FNO, G3E_FID, G3E_CNO, and G3E_CID of all the features the schematic represents. 
            <para/>If this property is set (that is, is not Nothing), the located object is a schematic, and the ComponentViewName, Recordset, FNO, and FID 
            properties should not be accessed.
            <para/>If this property is not set (is Nothing), then the located object is a normal graphic.
            <para/>If the SchematicFeatureRecordset property is set, most of the other properties do not make sense, since they are related to a single 
            geographic feature. Since a schematic can represent several features, then feature-centric properties are invalid and should not be accessed. The 
            <see cref="P:Intergraph.GTechnology.API.IGTDDCKeyObject.Geometry">Geometry property</see>, however, is valid, since it does have a one-to-one correspondence with the schematic located object. Nonetheless, if the GTDDCKeyObject 
            represents a schematic, then the FNO property will yield 0, the FID property will yield 0, the ComponentViewName property will yield an empty string, and the 
            <see cref="P:Intergraph.GTechnology.API.IGTDDCKeyObject.Recordset">Recordset property</see> will yield a Nothing object (that is, a Null pointer).</remarks>
        </member>
        <member name="T:Intergraph.GTechnology.API.IGTBreakLinearService">
            <summary>Intergraph G/Technology IGTBreakLinearService API.</summary>
            <remarks>The IGTBreakLinearService object can be used by custom command software 
            to split a linear feature at a given point. This service manages component assignment 
            between the two new features and it manages the breaking of ancillary linear components 
            within the feature. This service also drives the cleanup of relationships between the original 
            linear feature and any preexisting feature relationships, and it drives the establishment of 
            relationships between a breaking feature and the two new linear features resulting from the break.
            <para/>
            The IGTBreakLinearService processes the break of a linear feature in the following order:
            <list type="bullet">
            <item>Validation of the linear feature to be broken.</item>
            <item>Creation of the new feature by copying a break feature.</item>
            <item>Break of initial linear component and assignment of new geometries into new and break features.</item>
            <item>Break of subordinate linear components and destining of components.</item>
            <item>Relationship cleanup.</item>
            <item>Establishment of the relationship between the breaking feature and the two linear features resulting from the break.</item>
            </list>
            <para/> See the Break Subsystem topic for general information about breaking features. 
            </remarks>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTBreakLinearService.Execute">
            <summary>Method to break the linear feature.</summary>
            <remarks>Default values null, true and gtcoTapped are used for BreakingFeature, ConnectAtBreak, and TappedOrInline.</remarks>
            <returns>IGTKeyObject</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTBreakLinearService.Execute(Intergraph.GTechnology.API.IGTKeyObject)">
            <summary>Method to break the linear feature.</summary>
            <param name="BreakingFeature">Feature to be related at break point. The BreakingFeature must be relatable to the FeatureToBreak.</param>>
            <remarks>Default values true and gtcoTapped are used for ConnectAtBreak and TappedOrInline.</remarks>
            <returns>IGTKeyObject</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTBreakLinearService.Execute(Intergraph.GTechnology.API.IGTKeyObject,System.Boolean)">
            <summary>Method to break the linear feature.</summary>
            <param name="BreakingFeature">Feature to be related at break point. The BreakingFeature must be relatable to the FeatureToBreak.</param>>
            <param name="ConnectAtBreak">Denotes if the two linear features created by the break should be connected through NodeEdgeConnectivity. Default is True.</param>
            <remarks>Default value gtcoTapped is used for TappedOrInline.</remarks>
            <returns>IGTKeyObject</returns>
        </member>
        <member name="M:Intergraph.GTechnology.API.IGTBreakLinearService.Execute(Intergraph.GTechnology.API.IGTKeyObject,System.Boolean,Intergraph.GTechnology.API.GTConnectOptionsConstants)">
            <summary>Method to break the linear feature.</summary>
            <param name="BreakingFeature">Feature to be related at break point.  The BreakingFeature must be relatable to the FeatureToBreak.</param>>
            <param name="ConnectAtBreak">Denotes if the two linear features created by the break should be connected through NodeEdgeConnectivity. Default is True.</param>
            <param name="TappedOrInline">Enumerated type used only when a BreakingFeature is provided. This should be set only if the user knows how the BreakingFeatures will be connected ahead of time. 
            If this parameter is not set, ConnectivityPickQuick will resolve any connectivity ambiguity, if necessary.</param>
            <returns>IGTKeyObject</returns>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTBreakLinearService.BreakPoint">
            <summary>Property to return/set the point at which the feature will be broken.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTBreakLinearService.DataContext">
            <summary>Property to return/set the DataContext object.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTBreakLinearService.FeatureToBreak">
            <summary>Property to return/set the linear feature that is to be broken. 
            The CNO and CID values of the FeatureToBreak must also be populated with the CNO and CID values of the component that is to be broken initially.</summary>
        </member>
        <member name="P:Intergraph.GTechnology.API.IGTBreakLinearService.MapWindow">
            <summary>Property to return/set the MapWindow in which the feature to break resides.</summary>
        </member>
    </members>
</doc>
