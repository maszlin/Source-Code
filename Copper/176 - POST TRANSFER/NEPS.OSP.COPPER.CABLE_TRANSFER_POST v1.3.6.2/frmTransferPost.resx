<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>